import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        char[] charArray45 = strBuilder42.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln((float) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendSeparator('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = null;
        int int51 = strBuilder47.lastIndexOf(strMatcher50);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertArrayEquals(charArray45, new char[] { '-', '1', '.', '0', '#', ' ', '\n', '1', '.', '0', '\r', '\n' });
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor4 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer5 = null;
        boolean boolean6 = strSubstitutor4.replaceIn(stringBuffer5);
        java.lang.String str8 = strSubstitutor4.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strSubstitutor4.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder10 = null;
        boolean boolean11 = strSubstitutor4.replaceIn(stringBuilder10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer13.reset();
        java.lang.String str15 = strTokenizer13.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.reset("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer17.setTrimmerMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = strSubstitutor4.setValueDelimiterMatcher(strMatcher21);
        java.lang.String str29 = strSubstitutor4.replace("hi!$\r\ni!#", 1, 6);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator30 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertArrayEquals(formatArray3, new java.text.Format[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "null" + "'", str15, "null");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strSubstitutor25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "i!$\r\ni" + "'", str29, "i!$\r\ni");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer5.reset(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        java.lang.String str22 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, '4', '#');
        java.lang.String str28 = strTokenizer27.next();
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str22, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "aa" + "'", str28, "aa");
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer22 = null;
        boolean boolean23 = strSubstitutor21.replaceIn(stringBuffer22);
        java.lang.String str25 = strSubstitutor21.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor21.getValueDelimiterMatcher();
        char[] charArray32 = new char[] { '$', '#', '#', '4', ' ' };
        int int34 = strMatcher26.isMatch(charArray32, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendln(charArray9, 1, (int) (short) 1);
        java.lang.String str39 = org.apache.commons.lang3.text.WordUtils.uncapitalize("hi!", charArray9);
        java.lang.String str40 = org.apache.commons.lang3.text.WordUtils.uncapitalize("strTokenizer[not tokenized yet]", charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray9);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertArrayEquals(charArray32, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "strTokenizer[not tokenized yet]" + "'", str40, "strTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor0.setValueDelimiterMatcher(strMatcher8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor9.setValueDelimiter('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray21 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str22 = org.apache.commons.lang3.text.WordUtils.initials("", charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer15.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher30);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer34 = null;
        boolean boolean35 = strSubstitutor33.replaceIn(stringBuffer34);
        java.lang.String str37 = strSubstitutor33.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strSubstitutor33.getValueDelimiterMatcher();
        char[] charArray44 = new char[] { '$', '#', '#', '4', ' ' };
        int int46 = strMatcher38.isMatch(charArray44, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher30, strMatcher38);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder14.appendln(charArray21, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder63.reverse();
        java.lang.String str65 = strSubstitutor9.replace(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(strSubstitutor13);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertArrayEquals(charArray21, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertArrayEquals(charArray44, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "llun0\n\r0.1\n #0.1-" + "'", str65, "llun0\n\r0.1\n #0.1-");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        int int3 = strBuilder2.size();
        boolean boolean5 = strBuilder2.endsWith("-1.0# \na");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder2.insert((int) 'i', (float) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("S");
        java.lang.String str2 = strTokenizer1.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str2, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher31);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer35 = null;
        boolean boolean36 = strSubstitutor34.replaceIn(stringBuffer35);
        java.lang.String str38 = strSubstitutor34.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strSubstitutor34.getValueDelimiterMatcher();
        char[] charArray45 = new char[] { '$', '#', '#', '4', ' ' };
        int int47 = strMatcher39.isMatch(charArray45, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher31, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder15.appendln(charArray22, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder14.appendln(strBuilder54);
        char[] charArray59 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln(charArray59, 0, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertArrayEquals(charArray45, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertArrayEquals(charArray59, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer60);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray49 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str50 = org.apache.commons.lang3.text.WordUtils.initials("", charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer43.reset(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.deleteFirst("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray68 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str69 = org.apache.commons.lang3.text.WordUtils.initials("", charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.reset(charArray68);
        strBuilder59.getChars(0, 0, charArray68, (int) (short) 1);
        java.lang.String str77 = strBuilder59.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder59.appendNewLine();
        java.lang.CharSequence[] charSequenceArray86 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean87 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder78.appendln("i!", (java.lang.Object[]) charSequenceArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder78.minimizeCapacity();
        java.nio.CharBuffer charBuffer90 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder78.append(charBuffer90, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder57.appendln(strBuilder93);
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder94.replace(7, (int) (short) 10, "hi!$\r\n4#aa\r\ni!");
        java.io.Reader reader99 = strBuilder94.asReader();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertArrayEquals(charArray49, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertArrayEquals(charArray68, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "i!" + "'", str77, "i!");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(reader99);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("aa", '#', ' ');
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '$');
        boolean boolean39 = strTokenizer38.hasNext();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = null;
        boolean boolean4 = strSubstitutor0.replaceIn(strBuilder1, (-1), 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray12 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str13 = org.apache.commons.lang3.text.WordUtils.initials("", charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher21);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer25 = null;
        boolean boolean26 = strSubstitutor24.replaceIn(stringBuffer25);
        java.lang.String str28 = strSubstitutor24.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strSubstitutor24.getValueDelimiterMatcher();
        char[] charArray35 = new char[] { '$', '#', '#', '4', ' ' };
        int int37 = strMatcher29.isMatch(charArray35, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher21, strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder5.appendln(charArray12, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendSeparator("null", "Hi!");
        boolean boolean48 = strSubstitutor0.replaceIn(strBuilder41);
        boolean boolean49 = strSubstitutor0.isEnableSubstitutionInVariables();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertArrayEquals(charArray12, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertArrayEquals(charArray35, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray19 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str20 = org.apache.commons.lang3.text.WordUtils.initials("", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer32 = null;
        boolean boolean33 = strSubstitutor31.replaceIn(stringBuffer32);
        java.lang.String str35 = strSubstitutor31.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strSubstitutor31.getValueDelimiterMatcher();
        char[] charArray42 = new char[] { '$', '#', '#', '4', ' ' };
        int int44 = strMatcher36.isMatch(charArray42, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher28, strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendln(charArray19, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, (float) (-1));
        strBuilder11.appendTo((java.lang.Appendable) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder11.appendln((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append(0.0d);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray74 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str75 = org.apache.commons.lang3.text.WordUtils.initials("", charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer68.reset(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer65.reset(charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder57.insert(4, charArray74, 0, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertArrayEquals(charArray42, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertArrayEquals(charArray74, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strMatcher81);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setQuoteChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.reset();
        java.lang.String str7 = strTokenizer3.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        int int44 = strBuilder41.lastIndexOf(' ', (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.insert(12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("null");
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        java.lang.String str35 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("StrTokenizer[not tokenized yet]", charArray30);
        java.lang.String str36 = org.apache.commons.lang3.text.WordUtils.uncapitalize("", charArray30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer19.reset(charArray30);
        boolean boolean38 = strTokenizer37.hasPrevious();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str35, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("S");
        boolean boolean3 = strBuilder1.contains("hi!$\r\n100.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.deleteFirst(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("10", 0, "", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "10" + "'", str4, "10");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray4 = extendedMessageFormat1.parse("i!$\r\ni", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str22 = org.apache.commons.lang3.text.WordUtils.initials("", charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "hi!\r\n");
        int int29 = strMatcher15.isMatch(charArray21, (int) (short) 1, 32, (int) ' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor0.setVariablePrefixMatcher(strMatcher15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = strSubstitutor0.replace("StrTokenizer[Hi!]", (int) (short) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertArrayEquals(charArray21, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strSubstitutor30);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher11);
        char[] charArray14 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        int int17 = strMatcher11.isMatch(charArray14, (int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = strSubstitutor0.replace(charArray14, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = extendedMessageFormat2.parseObject("4#aa");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer0.reset(charArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.appendNewLine();
        char[] charArray18 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer0.reset(charArray18);
        java.lang.Object obj20 = strTokenizer0.clone();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertArrayEquals(charArray18, new char[] { 'S', 't', 'y', '\r', '\n' });
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        int int36 = strBuilder35.size();
        int int37 = strBuilder35.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.insert((int) (byte) 100, 'i');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 9 + "'", int36 == 9);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9 + "'", int37 == 9);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("hi!", "i!");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder2.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteFirst("I!");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int11 = strBuilder9.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        strBuilder13.getChars(0, 0, charArray22, (int) (short) 1);
        char[] charArray30 = strBuilder9.getChars(charArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder6.insert(13, charArray30, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 13");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { 'h', 'i', '!', 'a' });
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray11 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.initials("", charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray11);
        strBuilder2.getChars(0, 0, charArray11, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder2.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int25 = strBuilder21.indexOf(strMatcher23, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray36 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str37 = org.apache.commons.lang3.text.WordUtils.initials("", charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer30.reset(charArray36);
        strBuilder27.getChars(0, 0, charArray36, (int) (short) 1);
        java.lang.String str45 = strBuilder27.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder27.appendNewLine();
        java.io.Reader reader47 = strBuilder27.asReader();
        int int48 = strBuilder21.readFrom((java.lang.Readable) reader47);
        int int49 = strBuilder20.readFrom((java.lang.Readable) reader47);
        java.lang.StringBuilder stringBuilder50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder20.append(stringBuilder50, (int) ' ', (int) (short) 10);
        char[] charArray60 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str61 = org.apache.commons.lang3.text.WordUtils.initials("", charArray60);
        java.lang.String str62 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder20.appendln(charArray60);
        java.lang.String str64 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("# \nhi!\r\n-1.0\r\n", charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'i', '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher69);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertArrayEquals(charArray11, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertArrayEquals(charArray36, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "i!" + "'", str45, "i!");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(reader47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertArrayEquals(charArray60, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Hi!" + "'", str62, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "# \nhi!\r\n-1.0\r\n" + "'", str64, "# \nhi!\r\n-1.0\r\n");
        org.junit.Assert.assertNotNull(strMatcher69);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        int int45 = strBuilder42.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator('a', (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = strBuilder48.substring(9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.initials("Hi!hi!hi!nullhi!hi!hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "H" + "'", str1, "H");
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean36 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.appendWithSeparators((java.lang.Object[]) charSequenceArray35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray49 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str50 = org.apache.commons.lang3.text.WordUtils.initials("", charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer43.reset(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher58);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer62 = null;
        boolean boolean63 = strSubstitutor61.replaceIn(stringBuffer62);
        java.lang.String str65 = strSubstitutor61.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strSubstitutor61.getValueDelimiterMatcher();
        char[] charArray72 = new char[] { '$', '#', '#', '4', ' ' };
        int int74 = strMatcher66.isMatch(charArray72, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher58, strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder42.appendln(charArray49, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder41.appendln(strBuilder81);
        strBuilder26.appendTo((java.lang.Appendable) strBuilder81);
        java.util.stream.IntStream intStream86 = strBuilder81.codePoints();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertArrayEquals(charArray49, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertArrayEquals(charArray72, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(intStream86);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup0 = org.apache.commons.lang3.text.StrLookup.noneLookup();
        java.lang.String str1 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) wildcardStrLookup0);
        org.junit.Assert.assertNotNull(wildcardStrLookup0);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendSeparator(' ');
        java.io.Reader reader44 = strBuilder43.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.clear();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.appendln(9);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendSeparator('a');
        char[] charArray48 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append(charArray48);
        int int51 = strBuilder50.size();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 9 + "'", int51 == 9);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer1.getContent();
        int int4 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "null" + "'", str3, "null");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getFormatter();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        java.lang.String str6 = extendedMessageFormat5.toPattern();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat8.applyPattern("");
        extendedMessageFormat8.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer16 = null;
        boolean boolean17 = strSubstitutor15.replaceIn(stringBuffer16);
        java.lang.String str19 = strSubstitutor15.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer20 = null;
        java.lang.String str21 = strSubstitutor15.replace(stringBuffer20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = strSubstitutor15.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = strSubstitutor23.setValueDelimiter("hi!");
        boolean boolean26 = extendedMessageFormat14.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat27 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat8, (java.text.Format) extendedMessageFormat14);
        java.util.Locale locale28 = extendedMessageFormat8.getLocale();
        extendedMessageFormat5.setLocale(locale28);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat30 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) compositeFormat2, (java.text.Format) extendedMessageFormat5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = compositeFormat2.reformat("hI!\r\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strSubstitutor23);
        org.junit.Assert.assertNotNull(strSubstitutor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setVariablePrefixMatcher(strMatcher7);
        strSubstitutor8.setEnableSubstitutionInVariables(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strSubstitutor8);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher39);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer43 = null;
        boolean boolean44 = strSubstitutor42.replaceIn(stringBuffer43);
        java.lang.String str46 = strSubstitutor42.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strSubstitutor42.getValueDelimiterMatcher();
        char[] charArray53 = new char[] { '$', '#', '#', '4', ' ' };
        int int55 = strMatcher47.isMatch(charArray53, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendln(charArray30, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean80 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.appendWithSeparators((java.lang.Object[]) charSequenceArray79, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder69.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray79);
        java.lang.StringBuffer stringBuffer84 = strBuilder83.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder19.append(stringBuffer84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder19.appendln((float) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder19.appendln("h", (int) (byte) 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(stringBuffer84);
        org.junit.Assert.assertEquals(stringBuffer84.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        int int38 = strBuilder36.lastIndexOf("Strtokenizer[not tokenized yet]");
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append(charBuffer39, 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.append(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendFixedWidthPadRight((int) '$', (int) '#', '$');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln((double) (byte) -1);
        java.util.Formatter formatter42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter47 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) strBuilder36, formatter42, 10, 32, (int) '#', '$');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charMatcher(' ');
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        java.nio.CharBuffer charBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.append(charBuffer50, (int) 'a', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendFixedWidthPadLeft(10, 9, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean67 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder59.appendWithSeparators((java.lang.Object[]) charSequenceArray66, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder53.appendWithSeparators((java.lang.Object[]) charSequenceArray66, "STRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        char char13 = strSubstitutor0.getEscapeChar();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang3.text.ExtendedMessageFormat("StrTokenizer[Hi!]");
        java.lang.Object[] objArray16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray24 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str25 = org.apache.commons.lang3.text.WordUtils.initials("", charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer18.reset(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher33);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer37 = null;
        boolean boolean38 = strSubstitutor36.replaceIn(stringBuffer37);
        java.lang.String str40 = strSubstitutor36.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strSubstitutor36.getValueDelimiterMatcher();
        char[] charArray47 = new char[] { '$', '#', '#', '4', ' ' };
        int int49 = strMatcher41.isMatch(charArray47, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder17.appendln(charArray24, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("null", "Hi!");
        int int62 = strBuilder59.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.insert(0, 7);
        java.lang.StringBuffer stringBuffer66 = strBuilder59.toStringBuffer();
        java.text.FieldPosition fieldPosition67 = null;
        java.lang.StringBuffer stringBuffer68 = extendedMessageFormat15.format(objArray16, stringBuffer66, fieldPosition67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = strSubstitutor0.replace(stringBuffer66, (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + '$' + "'", char13 == '$');
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertArrayEquals(charArray24, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertArrayEquals(charArray47, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(stringBuffer66);
        org.junit.Assert.assertEquals(stringBuffer66.toString(), "7# \nnullStrTokenizer[Hi!]");
        org.junit.Assert.assertNotNull(stringBuffer68);
        org.junit.Assert.assertEquals(stringBuffer68.toString(), "7# \nnullStrTokenizer[Hi!]");
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.insert((int) (byte) 0, "h");
        java.lang.String str84 = strBuilder80.getNullText();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer0.setIgnoredChar('#');
        boolean boolean3 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor5 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer6 = null;
        boolean boolean7 = strSubstitutor5.replaceIn(stringBuffer6);
        java.lang.String str9 = strSubstitutor5.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strSubstitutor5.getValueDelimiterMatcher();
        char[] charArray16 = new char[] { '$', '#', '#', '4', ' ' };
        int int18 = strMatcher10.isMatch(charArray16, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer2.setDelimiterMatcher(strMatcher10);
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertArrayEquals(charArray16, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertArrayEquals(strArray20, new java.lang.String[] {});
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str30 = org.apache.commons.lang3.text.WordUtils.initials("", charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher46);
        int int57 = strBuilder19.indexOf(strMatcher38, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        java.util.List<java.lang.String> strList60 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList60);
        java.lang.String str62 = strBuilder19.getNewLineText();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("h", '$', 'a');
        int int4 = strTokenizer3.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getTrimmerMatcher();
        java.lang.String str6 = strTokenizer3.next();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "h" + "'", str6, "h");
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("a", (int) 'i', "s", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "a" + "'", str4, "a");
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete((int) (short) 1, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            char char47 = strBuilder42.charAt((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.insert((int) (byte) 0, "h");
        char[] charArray84 = strBuilder80.toCharArray();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray57 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str58 = org.apache.commons.lang3.text.WordUtils.initials("", charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer51.reset(charArray57);
        strBuilder48.getChars(0, 0, charArray57, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder48.appendln('$');
        boolean boolean68 = strBuilder66.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder36.appendln(strBuilder66);
        int int73 = strBuilder36.lastIndexOf("i!$\r\ni", (int) (short) 100);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertArrayEquals(charArray57, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.appendln(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = null;
        boolean boolean36 = strSubstitutor32.replaceIn(strBuilder33, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor32.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strSubstitutor38.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer31.setIgnoredMatcher(strMatcher39);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer40.reset(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder24.insert(4, charArray52, 4, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("strTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Strtokenizer[not Tokenized Yet]" + "'", str1, "Strtokenizer[not Tokenized Yet]");
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.insert((int) (byte) 10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(35);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer3 = null;
        boolean boolean4 = strSubstitutor2.replaceIn(stringBuffer3);
        java.lang.String str6 = strSubstitutor2.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str8 = strSubstitutor2.replace(stringBuffer7);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor2.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setValueDelimiter("hi!");
        boolean boolean13 = extendedMessageFormat1.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray14 = extendedMessageFormat1.getFormatsByArgumentIndex();
        extendedMessageFormat1.applyPattern("StrTokenizer[Hi!]");
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray19 = extendedMessageFormat1.parse("# \n-1.0\r\n", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertArrayEquals(formatArray14, new java.text.Format[] {});
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        java.io.Writer writer2 = strBuilder1.asWriter();
        org.junit.Assert.assertNotNull(writer2);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        boolean boolean10 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        boolean boolean11 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "i!$\r\ni", charSequenceArray8);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("sTRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer22 = null;
        boolean boolean23 = strSubstitutor21.replaceIn(stringBuffer22);
        java.lang.String str25 = strSubstitutor21.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor21.getValueDelimiterMatcher();
        char[] charArray32 = new char[] { '$', '#', '#', '4', ' ' };
        int int34 = strMatcher26.isMatch(charArray32, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendln(charArray9, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendSeparator('a');
        char[] charArray50 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.append(charArray50);
        char[] charArray53 = strBuilder52.toCharArray();
        int int55 = strMatcher1.isMatch(charArray53, 0);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertArrayEquals(charArray32, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '-', '1', '.', '0', '#', ' ', '\n', 'a', '$' });
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.initials("4#aa");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "4" + "'", str1, "4");
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("HI!$\r\n# \n");
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer4.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray16 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str17 = org.apache.commons.lang3.text.WordUtils.initials("", charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer10.reset(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer7.reset(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        java.lang.String str24 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        java.lang.String str26 = org.apache.commons.lang3.text.WordUtils.capitalize("", charArray16);
        java.lang.String str27 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("#\r\n\n", charArray16);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertArrayEquals(charArray16, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str24, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "#\r\n\n" + "'", str27, "#\r\n\n");
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        char char13 = strSubstitutor0.getEscapeChar();
        java.lang.StringBuilder stringBuilder14 = null;
        boolean boolean15 = strSubstitutor0.replaceIn(stringBuilder14);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor0.setVariableSuffix('a');
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup18 = strSubstitutor0.getVariableResolver();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + '$' + "'", char13 == '$');
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNull(wildcardStrLookup18);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setNewLineText("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.insert((int) (short) 1, (long) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray55 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str56 = org.apache.commons.lang3.text.WordUtils.initials("", charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer49.reset(charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher64);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer68 = null;
        boolean boolean69 = strSubstitutor67.replaceIn(stringBuffer68);
        java.lang.String str71 = strSubstitutor67.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strSubstitutor67.getValueDelimiterMatcher();
        char[] charArray78 = new char[] { '$', '#', '#', '4', ' ' };
        int int80 = strMatcher72.isMatch(charArray78, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher64, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder48.appendln(charArray55, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder84.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder84.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder47.append(strBuilder84);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertArrayEquals(charArray55, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertArrayEquals(charArray78, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendln("");
        char[] charArray11 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.initials("", charArray11);
        java.lang.String str13 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.appendln(charArray11);
        java.lang.String str17 = org.apache.commons.lang3.text.WordUtils.capitalize("", charArray11);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertArrayEquals(charArray11, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Hi!" + "'", str13, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = null;
        boolean boolean4 = strSubstitutor0.replaceIn(strBuilder1, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor0.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor6.setVariablePrefixMatcher(strMatcher8);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strSubstitutor9);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor0.replace(stringBuffer8);
        java.lang.StringBuffer stringBuffer10 = null;
        boolean boolean11 = strSubstitutor0.replaceIn(stringBuffer10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer13 = null;
        boolean boolean14 = strSubstitutor12.replaceIn(stringBuffer13);
        java.lang.String str16 = strSubstitutor12.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer17 = null;
        java.lang.String str18 = strSubstitutor12.replace(stringBuffer17);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = strSubstitutor12.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor22 = strSubstitutor20.setValueDelimiter("hi!");
        java.lang.StringBuilder stringBuilder23 = null;
        boolean boolean26 = strSubstitutor20.replaceIn(stringBuilder23, 0, 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int30 = strBuilder28.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray41 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str42 = org.apache.commons.lang3.text.WordUtils.initials("", charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher50);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer54 = null;
        boolean boolean55 = strSubstitutor53.replaceIn(stringBuffer54);
        java.lang.String str57 = strSubstitutor53.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strSubstitutor53.getValueDelimiterMatcher();
        char[] charArray64 = new char[] { '$', '#', '#', '4', ' ' };
        int int66 = strMatcher58.isMatch(charArray64, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher50, strMatcher58);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder34.appendln(charArray41, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.appendln(stringBuilder76);
        java.util.stream.IntStream intStream78 = strBuilder77.codePoints();
        java.lang.StringBuilder stringBuilder79 = strBuilder77.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder33.appendln(stringBuilder79, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder31.append(stringBuilder79);
        boolean boolean84 = strSubstitutor20.replaceIn(stringBuilder79);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = strSubstitutor0.replaceIn(stringBuilder79, 10, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strSubstitutor20);
        org.junit.Assert.assertNotNull(strSubstitutor22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertArrayEquals(charArray41, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertArrayEquals(charArray64, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(intStream78);
        org.junit.Assert.assertNotNull(stringBuilder79);
        org.junit.Assert.assertEquals(stringBuilder79.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("hi!$\r\n# \n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer2.setDelimiterMatcher(strMatcher7);
        char[] charArray9 = new char[] {};
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer11.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setIgnoreEmptyTokens(true);
        boolean boolean15 = strTokenizer12.hasPrevious();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer17 = null;
        boolean boolean18 = strSubstitutor16.replaceIn(stringBuffer17);
        java.lang.String str20 = strSubstitutor16.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strSubstitutor16.getValueDelimiterMatcher();
        char[] charArray27 = new char[] { '$', '#', '#', '4', ' ' };
        int int29 = strMatcher21.isMatch(charArray27, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer12.setIgnoredMatcher(strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("Strtokenizer[not tokenized yet]", strMatcher7, strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] {});
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer30);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.ensureCapacity((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.insert(0, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.trim();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor0.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray17 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str18 = org.apache.commons.lang3.text.WordUtils.initials("", charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer11.reset(charArray17);
        strBuilder8.getChars(0, 0, charArray17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendln('$');
        boolean boolean28 = strBuilder26.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray37 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str38 = org.apache.commons.lang3.text.WordUtils.initials("", charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer31.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher46);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer50 = null;
        boolean boolean51 = strSubstitutor49.replaceIn(stringBuffer50);
        java.lang.String str53 = strSubstitutor49.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strSubstitutor49.getValueDelimiterMatcher();
        char[] charArray60 = new char[] { '$', '#', '#', '4', ' ' };
        int int62 = strMatcher54.isMatch(charArray60, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher46, strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder30.appendln(charArray37, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder72.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray86 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean87 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder79.appendWithSeparators((java.lang.Object[]) charSequenceArray86, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder76.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray86);
        java.lang.StringBuffer stringBuffer91 = strBuilder90.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder26.append(stringBuffer91);
        boolean boolean93 = strSubstitutor0.replaceIn(stringBuffer91);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertArrayEquals(charArray17, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertArrayEquals(charArray37, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertArrayEquals(charArray60, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(stringBuffer91);
        org.junit.Assert.assertEquals(stringBuffer91.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getFormatter();
        java.text.Format format5 = compositeFormat2.getFormatter();
        java.text.Format format6 = compositeFormat2.getParser();
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = compositeFormat2.parseObject("s", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
        org.junit.Assert.assertNull(format5);
        org.junit.Assert.assertNull(format6);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer4.reset("H");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        strSubstitutor0.setEscapeChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray27 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str28 = org.apache.commons.lang3.text.WordUtils.initials("", charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray27);
        strBuilder18.getChars(0, 0, charArray27, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int41 = strBuilder37.indexOf(strMatcher39, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.io.Reader reader63 = strBuilder43.asReader();
        int int64 = strBuilder37.readFrom((java.lang.Readable) reader63);
        int int65 = strBuilder36.readFrom((java.lang.Readable) reader63);
        java.lang.StringBuilder stringBuilder66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder36.append(stringBuilder66, (int) ' ', (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder36.replaceFirst(strMatcher70, "HI!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = strSubstitutor0.setValueDelimiterMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor74 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer75 = null;
        boolean boolean76 = strSubstitutor74.replaceIn(stringBuffer75);
        java.lang.String str78 = strSubstitutor74.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strSubstitutor74.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder80 = null;
        boolean boolean81 = strSubstitutor74.replaceIn(stringBuilder80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strSubstitutor74.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor83 = strSubstitutor0.setVariablePrefixMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor85 = strSubstitutor0.setValueDelimiter('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor85.setValueDelimiter("null");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strSubstitutor73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strSubstitutor83);
        org.junit.Assert.assertNotNull(strSubstitutor85);
        org.junit.Assert.assertNotNull(strSubstitutor87);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.setCharAt(6, '#');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        char[] charArray5 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str6 = org.apache.commons.lang3.text.WordUtils.initials("", charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = null;
        boolean boolean15 = strSubstitutor11.replaceIn(strBuilder12, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor11.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strSubstitutor17.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer10.setDelimiterMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.initials("", charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer27.reset(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer24.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer10.setDelimiterMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setEmptyTokenAsNull(false);
        boolean boolean44 = strTokenizer43.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertArrayEquals(charArray5, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertArrayEquals(charArray33, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendPadding(3, '$');
        char[] charArray54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder53.appendln(charArray54, (int) 'a', (int) (short) -1);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        java.lang.CharSequence charSequence9 = null;
        java.lang.String str12 = strSubstitutor8.replace(charSequence9, (int) 'a', (int) 'a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor8.setVariablePrefix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setValueDelimiter('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor14.setValueDelimiter('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strSubstitutor14.getVariableSuffixMatcher();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertNotNull(strMatcher19);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        int int4 = strTokenizer3.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setQuoteChar('4');
        boolean boolean7 = strTokenizer3.isEmptyTokenAsNull();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append("HI!\r\n");
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendWithSeparators(strItor17, "hi!hi!Hi!hi!nullhi!hi!Hi!a\r\n");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        strSubstitutor0.setEnableSubstitutionInVariables(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hI!\r\n");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor0.setVariableSuffixMatcher(strMatcher14);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strSubstitutor15);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        java.lang.CharSequence charSequence9 = null;
        java.lang.String str12 = strSubstitutor8.replace(charSequence9, (int) 'a', (int) 'a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor8.setVariablePrefix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setValueDelimiter('a');
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang3.text.ExtendedMessageFormat("StrTokenizer[Hi!]");
        java.lang.Object[] objArray19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray27 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str28 = org.apache.commons.lang3.text.WordUtils.initials("", charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer40 = null;
        boolean boolean41 = strSubstitutor39.replaceIn(stringBuffer40);
        java.lang.String str43 = strSubstitutor39.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strSubstitutor39.getValueDelimiterMatcher();
        char[] charArray50 = new char[] { '$', '#', '#', '4', ' ' };
        int int52 = strMatcher44.isMatch(charArray50, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher36, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder20.appendln(charArray27, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendSeparator("null", "Hi!");
        int int65 = strBuilder62.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.insert(0, 7);
        java.lang.StringBuffer stringBuffer69 = strBuilder62.toStringBuffer();
        java.text.FieldPosition fieldPosition70 = null;
        java.lang.StringBuffer stringBuffer71 = extendedMessageFormat18.format(objArray19, stringBuffer69, fieldPosition70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str74 = strSubstitutor16.replace(stringBuffer71, 35, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(stringBuffer69);
        org.junit.Assert.assertEquals(stringBuffer69.toString(), "7# \nnullStrTokenizer[Hi!]");
        org.junit.Assert.assertNotNull(stringBuffer71);
        org.junit.Assert.assertEquals(stringBuffer71.toString(), "7# \nnullStrTokenizer[Hi!]");
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        java.lang.CharSequence charSequence9 = null;
        java.lang.String str12 = strSubstitutor8.replace(charSequence9, (int) 'a', (int) 'a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor8.setVariablePrefix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setValueDelimiter('a');
        strSubstitutor16.setEnableSubstitutionInVariables(false);
        boolean boolean19 = strSubstitutor16.isPreserveEscapes();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale8);
        java.util.Locale locale11 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale11);
        extendedMessageFormat12.applyPattern("");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat15 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat9, (java.text.Format) extendedMessageFormat12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int19 = strBuilder17.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        strBuilder21.getChars(0, 0, charArray30, (int) (short) 1);
        char[] charArray38 = strBuilder17.getChars(charArray30);
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.append(charBuffer39);
        boolean boolean41 = extendedMessageFormat9.equals((java.lang.Object) charBuffer39);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat42 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat2, (java.text.Format) extendedMessageFormat9);
        java.text.Format[] formatArray43 = extendedMessageFormat9.getFormats();
        java.lang.String str44 = extendedMessageFormat9.toPattern();
        java.text.Format format46 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatByArgumentIndex((int) (byte) -1, format46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertArrayEquals(formatArray43, new java.text.Format[] {});
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#" + "'", str44, "#");
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strSubstitutor0.getVariableSuffixMatcher();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strMatcher9);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.reset("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer5.setTrimmerMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer5.setDelimiterChar(' ');
        int int15 = strTokenizer5.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "null" + "'", str3, "null");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getFormatter();
        java.text.Format format5 = compositeFormat2.getFormatter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = compositeFormat2.reformat("# \nhi!\r\n-1.0\r\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
        org.junit.Assert.assertNull(format5);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        java.util.stream.IntStream intStream44 = strBuilder43.codePoints();
        java.lang.String str46 = strBuilder43.leftString((int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        char[] charArray82 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str83 = org.apache.commons.lang3.text.WordUtils.initials("", charArray82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder74.replaceFirst(strMatcher84, "S");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder74.insert(100, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertArrayEquals(charArray82, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        java.util.Locale locale3 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale5);
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("I!", locale5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray9 = extendedMessageFormat7.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "de_DE");
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1", ' ', '4');
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.insert((int) (byte) 0, "h");
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.replaceFirst(strMatcher84, "trtokenize");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.insert((int) 'i', (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln("");
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = null;
        boolean boolean19 = strSubstitutor15.replaceIn(strBuilder16, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor15.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strSubstitutor21.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setDelimiterMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray37 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str38 = org.apache.commons.lang3.text.WordUtils.initials("", charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer31.reset(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer14.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer45, "HI!\r\n");
        char[] charArray55 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str56 = org.apache.commons.lang3.text.WordUtils.initials("", charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = null;
        boolean boolean65 = strSubstitutor61.replaceIn(strBuilder62, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = strSubstitutor61.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strSubstitutor67.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer60.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer71.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray83 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str84 = org.apache.commons.lang3.text.WordUtils.initials("", charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer77.reset(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer74.reset(charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer60.setDelimiterMatcher(strMatcher90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder49.replaceFirst(strMatcher90, "Hi!Hi!hi!nullhi!hi!Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder93.deleteAll("Strtokenizer[not\r\nTokenized\r\nYet]");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertArrayEquals(charArray37, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertArrayEquals(charArray55, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strSubstitutor67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertArrayEquals(charArray83, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getFormatter();
        java.text.Format format4 = compositeFormat2.getFormatter();
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getFormatter();
        java.text.Format format5 = null;
        java.text.Format format6 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat7 = new org.apache.commons.lang3.text.CompositeFormat(format5, format6);
        java.text.Format format8 = compositeFormat7.getParser();
        java.text.Format format9 = compositeFormat7.getFormatter();
        java.text.Format format10 = compositeFormat7.getFormatter();
        org.apache.commons.lang3.text.CompositeFormat compositeFormat11 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) compositeFormat2, format10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = format10.format((java.lang.Object) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
        org.junit.Assert.assertNull(format8);
        org.junit.Assert.assertNull(format9);
        org.junit.Assert.assertNull(format10);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.append((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder36.replaceAll("-1.0# \na", "null");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean59 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder51.appendWithSeparators((java.lang.Object[]) charSequenceArray58, "hi!");
        java.io.Reader reader62 = strBuilder61.asReader();
        strBuilder49.appendTo((java.lang.Appendable) strBuilder61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder61.asTokenizer();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(reader62);
        org.junit.Assert.assertNotNull(strTokenizer64);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getParser();
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean57 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.appendWithSeparators((java.lang.Object[]) charSequenceArray56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray56);
        java.lang.StringBuffer stringBuffer61 = strBuilder60.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln((float) (short) 100);
        java.util.stream.IntStream intStream64 = strBuilder63.codePoints();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(stringBuffer61);
        org.junit.Assert.assertEquals(stringBuffer61.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(intStream64);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer19.set("Sty");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hI!\r\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setQuoteChar('$');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray8 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str9 = org.apache.commons.lang3.text.WordUtils.initials("", charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer2.reset(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer21 = null;
        boolean boolean22 = strSubstitutor20.replaceIn(stringBuffer21);
        java.lang.String str24 = strSubstitutor20.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strSubstitutor20.getValueDelimiterMatcher();
        char[] charArray31 = new char[] { '$', '#', '#', '4', ' ' };
        int int33 = strMatcher25.isMatch(charArray31, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher17, strMatcher25);
        int int36 = strMatcher1.isMatch(charArray8, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '4');
        java.lang.String str40 = org.apache.commons.lang3.text.WordUtils.capitalize("a", charArray8);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertArrayEquals(charArray8, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertArrayEquals(charArray31, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "a" + "'", str40, "a");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer22 = null;
        boolean boolean23 = strSubstitutor21.replaceIn(stringBuffer22);
        java.lang.String str25 = strSubstitutor21.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor21.getValueDelimiterMatcher();
        char[] charArray32 = new char[] { '$', '#', '#', '4', ' ' };
        int int34 = strMatcher26.isMatch(charArray32, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendln(charArray9, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.appendln(stringBuilder49, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder1.append(strBuilder54);
        java.lang.String str56 = strBuilder54.getNewLineText();
        int int59 = strBuilder54.lastIndexOf("Hi!$\r\n100.0", (int) (byte) 0);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertArrayEquals(charArray32, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.initials("", charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer27.reset(charArray33);
        strBuilder24.getChars(0, 0, charArray33, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer22.reset(charArray33);
        java.lang.String str45 = strTokenizer22.previousToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertArrayEquals(charArray33, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.appendln((long) (byte) -1);
        boolean boolean81 = strBuilder80.isEmpty();
        int int83 = strBuilder80.lastIndexOf('i');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 26 + "'", int83 == 26);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        java.lang.CharSequence charSequence9 = null;
        java.lang.String str12 = strSubstitutor8.replace(charSequence9, (int) 'a', (int) 'a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor8.setVariablePrefix("i!");
        java.lang.String str16 = strSubstitutor8.replace("Hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Hi!" + "'", str16, "Hi!");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        char[] charArray20 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str21 = org.apache.commons.lang3.text.WordUtils.initials("", charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray20);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = strMatcher13.isMatch(charArray20, (int) (short) -1, (int) 'i', 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertArrayEquals(charArray20, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMatcher23);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str30 = org.apache.commons.lang3.text.WordUtils.initials("", charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder22.appendln(charArray29, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder19.append((java.lang.Object) strBuilder58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder58.insert(5, (float) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean57 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.appendWithSeparators((java.lang.Object[]) charSequenceArray56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray56);
        java.lang.StringBuffer stringBuffer61 = strBuilder60.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln((float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder60.replaceAll('#', '4');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(stringBuffer61);
        org.junit.Assert.assertEquals(stringBuffer61.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.lang3.text.StrMatcher strMatcher0 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = strMatcher0.isMatch(charArray6, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher0);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher9);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        java.lang.CharSequence charSequence9 = null;
        java.lang.String str12 = strSubstitutor8.replace(charSequence9, (int) 'a', (int) 'a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor8.setVariablePrefix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setValueDelimiter('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor14.setValueDelimiter('a');
        boolean boolean19 = strSubstitutor18.isPreserveEscapes();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append((long) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.clear();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray4 = extendedMessageFormat2.parse("# \nhi!\r\n-1.0\r\n");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat4.applyPattern("");
        extendedMessageFormat4.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer12 = null;
        boolean boolean13 = strSubstitutor11.replaceIn(stringBuffer12);
        java.lang.String str15 = strSubstitutor11.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer16 = null;
        java.lang.String str17 = strSubstitutor11.replace(stringBuffer16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor11.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor19.setValueDelimiter("hi!");
        boolean boolean22 = extendedMessageFormat10.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat23 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat4, (java.text.Format) extendedMessageFormat10);
        java.util.Locale locale24 = extendedMessageFormat4.getLocale();
        extendedMessageFormat1.setLocale(locale24);
        java.text.Format[] formatArray26 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Locale locale27 = extendedMessageFormat1.getLocale();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertArrayEquals(formatArray26, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "de_DE");
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.uncapitalize("StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "strTokenizer[not tokenized yet]" + "'", str1, "strTokenizer[not tokenized yet]");
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        java.lang.String str5 = org.apache.commons.lang3.text.WordUtils.wrap("null", 12, "sTRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]", false, "StrTokenizer[Hi!]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "null" + "'", str5, "null");
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer3 = null;
        boolean boolean4 = strSubstitutor2.replaceIn(stringBuffer3);
        java.lang.String str6 = strSubstitutor2.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str8 = strSubstitutor2.replace(stringBuffer7);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor2.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setValueDelimiter("hi!");
        boolean boolean13 = extendedMessageFormat1.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray14 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Locale locale15 = extendedMessageFormat1.getLocale();
        java.text.Format format17 = null;
        java.text.Format format18 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat19 = new org.apache.commons.lang3.text.CompositeFormat(format17, format18);
        java.text.Format format20 = compositeFormat19.getFormatter();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat((int) (byte) -1, (java.text.Format) compositeFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertArrayEquals(formatArray14, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "de_DE");
        org.junit.Assert.assertNull(format20);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.deleteFirst('4');
        java.lang.String str44 = strBuilder43.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendFixedWidthPadRight(32, 5, 'i');
        java.util.Properties properties49 = null;
        java.lang.String str50 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder43, properties49);
        java.lang.Class<?> wildcardClass51 = strBuilder43.getClass();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "# \n-1.0\r\n" + "'", str44, "# \n-1.0\r\n");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "# \n-1.0\r\n32iii" + "'", str50, "# \n-1.0\r\n32iii");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray8 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str9 = org.apache.commons.lang3.text.WordUtils.initials("", charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer2.reset(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer21 = null;
        boolean boolean22 = strSubstitutor20.replaceIn(stringBuffer21);
        java.lang.String str24 = strSubstitutor20.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strSubstitutor20.getValueDelimiterMatcher();
        char[] charArray31 = new char[] { '$', '#', '#', '4', ' ' };
        int int33 = strMatcher25.isMatch(charArray31, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher17, strMatcher25);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder1.appendln(charArray8, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append("trtokenize");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        java.lang.String str49 = strTokenizer47.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer47.reset("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer51.setTrimmerMatcher(strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer51.setDelimiterChar(' ');
        java.lang.String[] strArray61 = strTokenizer51.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder42.appendln("10", (java.lang.Object[]) strArray61);
        java.lang.String str63 = java.text.MessageFormat.format("HI!", (java.lang.Object[]) strArray61);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertArrayEquals(charArray8, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertArrayEquals(charArray31, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "null" + "'", str49, "null");
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertArrayEquals(strArray61, new java.lang.String[] { "null" });
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "HI!" + "'", str63, "HI!");
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer6.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str19 = org.apache.commons.lang3.text.WordUtils.initials("", charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer12.reset(charArray18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer9.reset(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.replaceFirst(strMatcher25, "Strtokenizer[not Tokenized Yet]");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertArrayEquals(charArray18, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        java.io.Reader reader12 = strBuilder11.asReader();
        java.util.stream.IntStream intStream13 = strBuilder11.chars();
        java.lang.String str15 = strBuilder11.substring(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator(' ', 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray26 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str27 = org.apache.commons.lang3.text.WordUtils.initials("", charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer20.reset(charArray26);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher35);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer39 = null;
        boolean boolean40 = strSubstitutor38.replaceIn(stringBuffer39);
        java.lang.String str42 = strSubstitutor38.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strSubstitutor38.getValueDelimiterMatcher();
        char[] charArray49 = new char[] { '$', '#', '#', '4', ' ' };
        int int51 = strMatcher43.isMatch(charArray49, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher35, strMatcher43);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder19.appendln(charArray26, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.clear();
        java.lang.StringBuilder stringBuilder60 = strBuilder55.toStringBuilder();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder18.append(stringBuilder60, 35, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!Hi!hi!nullhi!hi!Hi!" + "'", str15, "hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertArrayEquals(charArray26, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertArrayEquals(charArray49, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(stringBuilder60);
        org.junit.Assert.assertEquals(stringBuilder60.toString(), "");
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.replaceFirst("StrTokenizer[Hi!]", "#aa");
        java.util.stream.IntStream intStream56 = strBuilder50.codePoints();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(intStream56);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        java.lang.String str5 = org.apache.commons.lang3.text.WordUtils.wrap("hI!$\r\n# \n", 100, "llun0\n\r0.1\n #0.1-", false, "strTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hI!$\r\n# \n" + "'", str5, "hI!$\r\n# \n");
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hI!\r\n");
        java.lang.String str2 = strTokenizer1.next();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hI!" + "'", str2, "hI!");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor3 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer4 = null;
        boolean boolean5 = strSubstitutor3.replaceIn(stringBuffer4);
        java.lang.String str7 = strSubstitutor3.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor3.replace(stringBuffer8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor3.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor11.setValueDelimiter("hi!");
        boolean boolean14 = extendedMessageFormat2.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale16 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang3.text.ExtendedMessageFormat("HI!", locale16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormats();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(strSubstitutor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertArrayEquals(formatArray15, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertArrayEquals(formatArray18, new java.text.Format[] {});
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight((int) 'a', (int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        java.lang.Object[] objArray19 = new java.lang.Object[] { "StrTokenizer[not tokenized yet]" };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append("h", objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendSeparator("-1.0# \n1.0\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight((int) 'i', (int) 'i', ' ');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer30 = null;
        boolean boolean31 = strSubstitutor29.replaceIn(stringBuffer30);
        java.lang.String str33 = strSubstitutor29.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strSubstitutor29.getValueDelimiterMatcher();
        char[] charArray40 = new char[] { '$', '#', '#', '4', ' ' };
        int int42 = strMatcher34.isMatch(charArray40, (int) 'a');
        java.lang.String str43 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("", charArray40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder26.insert((int) (short) 0, charArray40, (int) (short) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid offset: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertArrayEquals(charArray40, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.deleteFirst(strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray37 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str38 = org.apache.commons.lang3.text.WordUtils.initials("", charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer31.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher46);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer50 = null;
        boolean boolean51 = strSubstitutor49.replaceIn(stringBuffer50);
        java.lang.String str53 = strSubstitutor49.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strSubstitutor49.getValueDelimiterMatcher();
        char[] charArray60 = new char[] { '$', '#', '#', '4', ' ' };
        int int62 = strMatcher54.isMatch(charArray60, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher46, strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder30.appendln(charArray37, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder66.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.appendSeparator('a');
        char[] charArray78 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder76.append(charArray78);
        char[] charArray81 = strBuilder80.toCharArray();
        // The following exception was thrown during execution in test generation
        try {
            int int85 = strMatcher28.isMatch(charArray81, (int) (byte) -1, (int) (byte) 10, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertArrayEquals(charArray37, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertArrayEquals(charArray60, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertArrayEquals(charArray78, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertArrayEquals(charArray81, new char[] { '-', '1', '.', '0', '#', ' ', '\n', 'a', '$' });
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean57 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.appendWithSeparators((java.lang.Object[]) charSequenceArray56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer62.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer62.setQuoteChar('4');
        java.lang.Object obj66 = strTokenizer62.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder60.appendFixedWidthPadRight(obj66, (int) (byte) 10, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean79 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray78);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.appendWithSeparators((java.lang.Object[]) charSequenceArray78, "hi!");
        java.io.Reader reader82 = strBuilder81.asReader();
        java.util.stream.IntStream intStream83 = strBuilder81.chars();
        java.lang.String str85 = strBuilder81.substring(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendln(1.0f);
        boolean boolean88 = strBuilder60.equals((java.lang.Object) strBuilder81);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader82);
        org.junit.Assert.assertNotNull(intStream83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!Hi!hi!nullhi!hi!Hi!" + "'", str85, "hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer33 = null;
        boolean boolean34 = strSubstitutor32.replaceIn(stringBuffer33);
        java.lang.String str36 = strSubstitutor32.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer37 = null;
        java.lang.String str38 = strSubstitutor32.replace(stringBuffer37);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = strSubstitutor32.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = strSubstitutor40.setValueDelimiter("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = strSubstitutor42.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder31.deleteFirst(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        java.lang.String str49 = strTokenizer47.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer47.setTrimmerMatcher(strMatcher50);
        java.util.List<java.lang.String> strList52 = strTokenizer47.getTokenList();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer47.setQuoteChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder31.insert(7, (java.lang.Object) strTokenizer47);
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang3.text.ExtendedMessageFormat("null");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat60.applyPattern("");
        extendedMessageFormat60.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer68 = null;
        boolean boolean69 = strSubstitutor67.replaceIn(stringBuffer68);
        java.lang.String str71 = strSubstitutor67.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer72 = null;
        java.lang.String str73 = strSubstitutor67.replace(stringBuffer72);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor75 = strSubstitutor67.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor77 = strSubstitutor75.setValueDelimiter("hi!");
        boolean boolean78 = extendedMessageFormat66.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat79 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat60, (java.text.Format) extendedMessageFormat66);
        java.util.Locale locale80 = extendedMessageFormat60.getLocale();
        extendedMessageFormat58.setLocale(locale80);
        extendedMessageFormat58.applyPattern("4#aa");
        java.text.Format[] formatArray84 = extendedMessageFormat58.getFormatsByArgumentIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder31.append("#\r\n\n", (java.lang.Object[]) formatArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln((double) 12);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strSubstitutor40);
        org.junit.Assert.assertNotNull(strSubstitutor42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "null" + "'", str49, "null");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strSubstitutor75);
        org.junit.Assert.assertNotNull(strSubstitutor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray84);
        org.junit.Assert.assertArrayEquals(formatArray84, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("hi!$\r\n4#aa\r\ni!");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer4, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray21 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str22 = org.apache.commons.lang3.text.WordUtils.initials("", charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer15.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer12.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        java.lang.String str29 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer4.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray21);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertArrayEquals(charArray21, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str29, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setNewLineText("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendPadding(9, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendPadding((int) '4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendSeparator('4', (-1));
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int3 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        strBuilder5.getChars(0, 0, charArray14, (int) (short) 1);
        char[] charArray22 = strBuilder1.getChars(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setVariablePrefix("StrTokenizer[not tokenized yet]");
        strSubstitutor14.setPreserveEscapes(true);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup19 = strSubstitutor14.getVariableResolver();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNull(wildcardStrLookup19);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getFormatter();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang3.text.ExtendedMessageFormat("StrTokenizer[Hi!]");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher22);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer26 = null;
        boolean boolean27 = strSubstitutor25.replaceIn(stringBuffer26);
        java.lang.String str29 = strSubstitutor25.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strSubstitutor25.getValueDelimiterMatcher();
        char[] charArray36 = new char[] { '$', '#', '#', '4', ' ' };
        int int38 = strMatcher30.isMatch(charArray36, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher22, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.appendln(charArray13, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray58 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str59 = org.apache.commons.lang3.text.WordUtils.initials("", charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer52.reset(charArray58);
        strBuilder49.getChars(0, 0, charArray58, (int) (short) 1);
        java.lang.String str67 = strBuilder49.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder49.appendNewLine();
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean77 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder68.appendln("i!", (java.lang.Object[]) charSequenceArray76);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder47.appendWithSeparators((java.lang.Object[]) charSequenceArray76, "hi!");
        java.util.stream.IntStream intStream81 = strBuilder47.codePoints();
        java.lang.StringBuffer stringBuffer82 = strBuilder47.toStringBuffer();
        java.text.FieldPosition fieldPosition83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer84 = compositeFormat2.format((java.lang.Object) "StrTokenizer[Hi!]", stringBuffer82, fieldPosition83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertArrayEquals(charArray36, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertArrayEquals(charArray58, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "i!" + "'", str67, "i!");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(intStream81);
        org.junit.Assert.assertNotNull(stringBuffer82);
        org.junit.Assert.assertEquals(stringBuffer82.toString(), "# \nhi!hi!Hi!hi!nullhi!hi!Hi!");
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("StrTokenizer[not tokenized yet]", charArray7);
        java.lang.String str13 = org.apache.commons.lang3.text.WordUtils.uncapitalize("", charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray7);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str12, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray13);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer21);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert(5, (float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.replaceFirst("StrTokenizer[Hi!]", "i!");
        java.nio.CharBuffer charBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.append(charBuffer61, (int) (byte) 10, (int) (byte) 1);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("Hi!$\r\n100.0", 100, "hI!", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Hi!$\r\n100.0" + "'", str4, "Hi!$\r\n100.0");
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getFormatter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = compositeFormat2.reformat("HI!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        int int21 = strTokenizer19.previousIndex();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor0.setValueDelimiterMatcher(strMatcher8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor9.setValueDelimiter('a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = strSubstitutor13.replace("hi!$\r\n4#aa\r\ni!", (int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(strSubstitutor13);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher(" \r\n");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale8);
        java.util.Locale locale11 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale11);
        extendedMessageFormat12.applyPattern("");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat15 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat9, (java.text.Format) extendedMessageFormat12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int19 = strBuilder17.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        strBuilder21.getChars(0, 0, charArray30, (int) (short) 1);
        char[] charArray38 = strBuilder17.getChars(charArray30);
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.append(charBuffer39);
        boolean boolean41 = extendedMessageFormat9.equals((java.lang.Object) charBuffer39);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat42 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat2, (java.text.Format) extendedMessageFormat9);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor43 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer44 = null;
        boolean boolean45 = strSubstitutor43.replaceIn(stringBuffer44);
        java.lang.String str47 = strSubstitutor43.replace((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator48 = extendedMessageFormat9.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        java.lang.StringBuilder stringBuilder45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuilder45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = strBuilder42.substring((int) (byte) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight((int) 'a', (int) (byte) 1, 'a');
        java.lang.String str16 = strBuilder11.getNullText();
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        char char13 = strSubstitutor0.getEscapeChar();
        java.lang.StringBuilder stringBuilder14 = null;
        boolean boolean15 = strSubstitutor0.replaceIn(stringBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer20, "StrTokenizer[not tokenized yet]");
        java.lang.String str23 = strSubstitutor0.replace((java.lang.CharSequence) "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + '$' + "'", char13 == '$');
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str23, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.deleteFirst("Strtokenizer[not\r\ntokenized\r\nyet]");
        java.lang.String str42 = strBuilder36.getNullText();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        strSubstitutor0.setEscapeChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray27 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str28 = org.apache.commons.lang3.text.WordUtils.initials("", charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray27);
        strBuilder18.getChars(0, 0, charArray27, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int41 = strBuilder37.indexOf(strMatcher39, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.io.Reader reader63 = strBuilder43.asReader();
        int int64 = strBuilder37.readFrom((java.lang.Readable) reader63);
        int int65 = strBuilder36.readFrom((java.lang.Readable) reader63);
        java.lang.StringBuilder stringBuilder66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder36.append(stringBuilder66, (int) ' ', (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder36.replaceFirst(strMatcher70, "HI!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = strSubstitutor0.setValueDelimiterMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor74 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer75 = null;
        boolean boolean76 = strSubstitutor74.replaceIn(stringBuffer75);
        java.lang.String str78 = strSubstitutor74.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strSubstitutor74.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder80 = null;
        boolean boolean81 = strSubstitutor74.replaceIn(stringBuilder80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strSubstitutor74.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor83 = strSubstitutor0.setVariablePrefixMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor85 = strSubstitutor0.setValueDelimiter('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor0.setVariableSuffix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor89 = strSubstitutor0.setVariablePrefix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strSubstitutor89.getValueDelimiterMatcher();
        strSubstitutor89.setEscapeChar('#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strSubstitutor73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strSubstitutor83);
        org.junit.Assert.assertNotNull(strSubstitutor85);
        org.junit.Assert.assertNotNull(strSubstitutor87);
        org.junit.Assert.assertNotNull(strSubstitutor89);
        org.junit.Assert.assertNotNull(strMatcher90);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray7);
        java.lang.String str36 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("hI!$\r\n# \n", charArray7);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Hi!$\r\n# \n" + "'", str36, "Hi!$\r\n# \n");
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(false);
        java.util.Formatter formatter52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter57 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) strBuilder42, formatter52, 1, 26, (int) (byte) -1, '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray19 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str20 = org.apache.commons.lang3.text.WordUtils.initials("", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer32 = null;
        boolean boolean33 = strSubstitutor31.replaceIn(stringBuffer32);
        java.lang.String str35 = strSubstitutor31.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strSubstitutor31.getValueDelimiterMatcher();
        char[] charArray42 = new char[] { '$', '#', '#', '4', ' ' };
        int int44 = strMatcher36.isMatch(charArray42, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher28, strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendln(charArray19, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, (float) (-1));
        strBuilder11.appendTo((java.lang.Appendable) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder11.replace((int) (byte) 10, 10, "I!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setIgnoreEmptyTokens(true);
        java.lang.String str65 = strTokenizer62.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer62.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder11.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer62, "StrTokenizer[Hi!]");
        java.lang.String str70 = strBuilder69.build();
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertArrayEquals(charArray42, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "null" + "'", str65, "null");
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!hi!Hi!hI!i!nullhi!hi!Hi!" + "'", str70, "hi!hi!Hi!hI!i!nullhi!hi!Hi!");
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int24 = strBuilder20.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray35 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str36 = org.apache.commons.lang3.text.WordUtils.initials("", charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.reset(charArray35);
        strBuilder26.getChars(0, 0, charArray35, (int) (short) 1);
        java.lang.String str44 = strBuilder26.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.appendNewLine();
        java.io.Reader reader46 = strBuilder26.asReader();
        int int47 = strBuilder20.readFrom((java.lang.Readable) reader46);
        int int48 = strBuilder19.readFrom((java.lang.Readable) reader46);
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder19.append(stringBuilder49, (int) ' ', (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder19.trim();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertArrayEquals(charArray35, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "i!" + "'", str44, "i!");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "Strtokenizer[not tokenized yet]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = strTokenizer39.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer22 = null;
        boolean boolean23 = strSubstitutor21.replaceIn(stringBuffer22);
        java.lang.String str25 = strSubstitutor21.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor21.getValueDelimiterMatcher();
        char[] charArray32 = new char[] { '$', '#', '#', '4', ' ' };
        int int34 = strMatcher26.isMatch(charArray32, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendln(charArray9, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.appendln(stringBuilder49, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder1.append(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder1.minimizeCapacity();
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertArrayEquals(charArray32, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale5 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertArrayEquals(formatArray3, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertArrayEquals(formatArray7, new java.text.Format[] {});
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.reset("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer5.setTrimmerMatcher(strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer5.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "null" + "'", str3, "null");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.swapCase("hi!$\r\n4#aa\r\ni!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "HI!$\r\n4#AA\r\nI!" + "'", str1, "HI!$\r\n4#AA\r\nI!");
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        java.nio.CharBuffer charBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder1.append(charBuffer20, 32, (int) (short) 100);
        int int24 = strBuilder23.size();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 6 + "'", int24 == 6);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!hi!Hi!hI!i!nullhi!hi!Hi!", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        java.io.Reader reader12 = strBuilder11.asReader();
        java.util.stream.IntStream intStream13 = strBuilder11.chars();
        java.lang.String str15 = strBuilder11.substring(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator(' ', 27);
        java.lang.String str20 = strBuilder18.leftString(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean30 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder22.appendWithSeparators((java.lang.Object[]) charSequenceArray29, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray40 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str41 = org.apache.commons.lang3.text.WordUtils.initials("", charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer34.reset(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher49);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer53 = null;
        boolean boolean54 = strSubstitutor52.replaceIn(stringBuffer53);
        java.lang.String str56 = strSubstitutor52.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strSubstitutor52.getValueDelimiterMatcher();
        char[] charArray63 = new char[] { '$', '#', '#', '4', ' ' };
        int int65 = strMatcher57.isMatch(charArray63, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher49, strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder33.appendln(charArray40, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.insert(0, (float) (-1));
        strBuilder32.appendTo((java.lang.Appendable) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder32.replace((int) (byte) 10, 10, "I!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.appendPadding((int) (short) 0, ' ');
        strBuilder18.appendTo((java.lang.Appendable) strBuilder80);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!Hi!hi!nullhi!hi!Hi!" + "'", str15, "hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertArrayEquals(charArray40, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertArrayEquals(charArray63, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray31 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str32 = org.apache.commons.lang3.text.WordUtils.initials("", charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer25.reset(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher40);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor43 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer44 = null;
        boolean boolean45 = strSubstitutor43.replaceIn(stringBuffer44);
        java.lang.String str47 = strSubstitutor43.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strSubstitutor43.getValueDelimiterMatcher();
        char[] charArray54 = new char[] { '$', '#', '#', '4', ' ' };
        int int56 = strMatcher48.isMatch(charArray54, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher40, strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder24.appendln(charArray31, 1, (int) (short) 1);
        java.lang.String str61 = org.apache.commons.lang3.text.WordUtils.uncapitalize("hi!", charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder19.appendln(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertArrayEquals(charArray31, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertArrayEquals(charArray54, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor0.replace(stringBuffer8);
        java.lang.StringBuffer stringBuffer10 = null;
        boolean boolean11 = strSubstitutor0.replaceIn(stringBuffer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        strBuilder13.getChars(0, 0, charArray22, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendln('$');
        int int34 = strBuilder31.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setLength((int) (short) 0);
        boolean boolean39 = strSubstitutor0.replaceIn(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray47 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str48 = org.apache.commons.lang3.text.WordUtils.initials("", charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer41.reset(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher56);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer60 = null;
        boolean boolean61 = strSubstitutor59.replaceIn(stringBuffer60);
        java.lang.String str63 = strSubstitutor59.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strSubstitutor59.getValueDelimiterMatcher();
        char[] charArray70 = new char[] { '$', '#', '#', '4', ' ' };
        int int72 = strMatcher64.isMatch(charArray70, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher56, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder40.appendln(charArray47, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder76.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendSeparator('a');
        char[] charArray88 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder86.append(charArray88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder86.appendln((int) (byte) 100);
        java.lang.String str95 = strSubstitutor0.replace(strBuilder86, (int) (short) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder86.appendln("trtokenize");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertArrayEquals(charArray47, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertArrayEquals(charArray70, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertArrayEquals(charArray88, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("S", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset("S");
        boolean boolean5 = strTokenizer4.hasPrevious();
        java.lang.Object obj6 = strTokenizer4.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setDelimiterChar('4');
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((long) 22);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray8 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str9 = org.apache.commons.lang3.text.WordUtils.initials("", charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer2.reset(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer21 = null;
        boolean boolean22 = strSubstitutor20.replaceIn(stringBuffer21);
        java.lang.String str24 = strSubstitutor20.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strSubstitutor20.getValueDelimiterMatcher();
        char[] charArray31 = new char[] { '$', '#', '#', '4', ' ' };
        int int33 = strMatcher25.isMatch(charArray31, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher17, strMatcher25);
        int int36 = strMatcher1.isMatch(charArray8, 0);
        java.lang.String str37 = org.apache.commons.lang3.text.WordUtils.initials("1.0# \n1.0\r\n0Sty4#aaTRTOKENIZER[NOT\r\nTOKENIZED\r", charArray8);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertArrayEquals(charArray8, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertArrayEquals(charArray31, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1 T" + "'", str37, "1 T");
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        java.io.Reader reader12 = strBuilder11.asReader();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.insert((int) 'a', (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        int int24 = strBuilder22.lastIndexOf('4');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.initials("", charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer27.reset(charArray33);
        strBuilder24.getChars(0, 0, charArray33, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer22.reset(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setIgnoredChar('#');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertArrayEquals(charArray33, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale8);
        java.util.Locale locale11 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale11);
        extendedMessageFormat12.applyPattern("");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat15 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat9, (java.text.Format) extendedMessageFormat12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int19 = strBuilder17.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        strBuilder21.getChars(0, 0, charArray30, (int) (short) 1);
        char[] charArray38 = strBuilder17.getChars(charArray30);
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.append(charBuffer39);
        boolean boolean41 = extendedMessageFormat9.equals((java.lang.Object) charBuffer39);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat42 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat2, (java.text.Format) extendedMessageFormat9);
        extendedMessageFormat9.applyPattern("StrTokenizer[not tokenized yet]");
        java.text.Format format46 = null;
        java.text.Format format47 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat48 = new org.apache.commons.lang3.text.CompositeFormat(format46, format47);
        java.text.Format format49 = compositeFormat48.getParser();
        java.text.Format format50 = compositeFormat48.getFormatter();
        java.text.Format format51 = null;
        java.text.Format format52 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat53 = new org.apache.commons.lang3.text.CompositeFormat(format51, format52);
        java.text.Format format54 = compositeFormat53.getParser();
        java.text.Format format55 = compositeFormat53.getFormatter();
        java.text.Format format56 = compositeFormat53.getFormatter();
        org.apache.commons.lang3.text.CompositeFormat compositeFormat57 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) compositeFormat48, format56);
        java.text.Format format58 = null;
        java.text.Format format59 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat60 = new org.apache.commons.lang3.text.CompositeFormat(format58, format59);
        java.text.Format format61 = compositeFormat60.getParser();
        java.text.Format format62 = compositeFormat60.getFormatter();
        org.apache.commons.lang3.text.CompositeFormat compositeFormat63 = new org.apache.commons.lang3.text.CompositeFormat(format56, format62);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatByArgumentIndex((int) (byte) -1, format62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(format49);
        org.junit.Assert.assertNull(format50);
        org.junit.Assert.assertNull(format54);
        org.junit.Assert.assertNull(format55);
        org.junit.Assert.assertNull(format56);
        org.junit.Assert.assertNull(format61);
        org.junit.Assert.assertNull(format62);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        int int43 = strBuilder42.size();
        int int44 = strBuilder42.size();
        java.nio.CharBuffer charBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.append(charBuffer45, (int) (byte) -1, 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray60 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str61 = org.apache.commons.lang3.text.WordUtils.initials("", charArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer54.reset(charArray60);
        strBuilder51.getChars(0, 0, charArray60, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder42.insert(3, charArray60, 3, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertArrayEquals(charArray60, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer4.getIgnoredMatcher();
        java.lang.Object obj23 = strTokenizer4.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("STRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("StrTokenizer[Hi!]", 10, "hi!", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[Hi!]" + "'", str4, "StrTokenizer[Hi!]");
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("Strtokenizer[not Tokenized Yet]", '4');
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        java.lang.String str5 = org.apache.commons.lang3.text.WordUtils.wrap("# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n", (-1), "aa", false, "Hi!$\r\n100.0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n" + "'", str5, "# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n");
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray27 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str28 = org.apache.commons.lang3.text.WordUtils.initials("", charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher36);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer40 = null;
        boolean boolean41 = strSubstitutor39.replaceIn(stringBuffer40);
        java.lang.String str43 = strSubstitutor39.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = strSubstitutor39.getValueDelimiterMatcher();
        char[] charArray50 = new char[] { '$', '#', '#', '4', ' ' };
        int int52 = strMatcher44.isMatch(charArray50, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher36, strMatcher44);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder20.appendln(charArray27, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, '4', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer19.reset(charArray27);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strTokenizer61);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("aa");
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(true);
        java.lang.String str42 = strTokenizer39.next();
        char[] charArray48 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str49 = org.apache.commons.lang3.text.WordUtils.initials("", charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer39.setTrimmerMatcher(strMatcher51);
        boolean boolean54 = strBuilder36.equals((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.setCharAt(1, ' ');
        int int59 = strBuilder36.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder36.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(strMatcher63, "llun0\n\r0.1\n #0.1-");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "null" + "'", str42, "null");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        java.lang.String str2 = org.apache.commons.lang3.text.WordUtils.wrap("# \n", (int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "#\r\n\n" + "'", str2, "#\r\n\n");
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.initials("Strtokenizer[not\r\ntokenized\r\nyet]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Sty" + "'", str1, "Sty");
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.appendSeparator(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.setCharAt((int) (short) 10, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray56 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str57 = org.apache.commons.lang3.text.WordUtils.initials("", charArray56);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer50.reset(charArray56);
        strBuilder47.getChars(0, 0, charArray56, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder47.appendln('$');
        int int68 = strBuilder65.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.append("i!");
        strBuilder45.appendTo((java.lang.Appendable) strBuilder70);
        java.lang.String str73 = strBuilder70.rightString((int) ' ');
        boolean boolean75 = strBuilder70.startsWith("# \nhi!\r\n-1");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertArrayEquals(charArray56, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!$\r\ni!#" + "'", str73, "hi!$\r\ni!#");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        java.lang.String str23 = strBuilder19.getNewLineText();
        java.lang.String str24 = strBuilder19.build();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!$\r\n" + "'", str24, "hi!$\r\n");
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup0 = org.apache.commons.lang3.text.StrLookup.noneLookup();
        org.junit.Assert.assertNotNull(wildcardStrLookup0);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean36 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder28.appendWithSeparators((java.lang.Object[]) charSequenceArray35, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray49 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str50 = org.apache.commons.lang3.text.WordUtils.initials("", charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer43.reset(charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher58);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer62 = null;
        boolean boolean63 = strSubstitutor61.replaceIn(stringBuffer62);
        java.lang.String str65 = strSubstitutor61.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = strSubstitutor61.getValueDelimiterMatcher();
        char[] charArray72 = new char[] { '$', '#', '#', '4', ' ' };
        int int74 = strMatcher66.isMatch(charArray72, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher58, strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder42.appendln(charArray49, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder41.appendln(strBuilder81);
        strBuilder26.appendTo((java.lang.Appendable) strBuilder81);
        java.lang.StringBuffer stringBuffer86 = strBuilder81.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.appendFixedWidthPadRight((int) 'i', (int) (byte) -1, '#');
        java.nio.CharBuffer charBuffer91 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder90.append(charBuffer91, (int) (byte) 1, (int) '$');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertArrayEquals(charArray49, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertArrayEquals(charArray72, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(stringBuffer86);
        org.junit.Assert.assertEquals(stringBuffer86.toString(), "# \nhi!");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer2 = null;
        boolean boolean3 = strSubstitutor1.replaceIn(stringBuffer2);
        java.lang.String str5 = strSubstitutor1.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor1.getValueDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor1.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("trtokenize", strMatcher7);
        int int9 = strTokenizer8.nextIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray34 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str35 = org.apache.commons.lang3.text.WordUtils.initials("", charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer28.reset(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer47 = null;
        boolean boolean48 = strSubstitutor46.replaceIn(stringBuffer47);
        java.lang.String str50 = strSubstitutor46.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strSubstitutor46.getValueDelimiterMatcher();
        char[] charArray57 = new char[] { '$', '#', '#', '4', ' ' };
        int int59 = strMatcher51.isMatch(charArray57, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher43, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder27.appendln(charArray34, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.setNewLineText("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.appendSeparator('4');
        strBuilder26.appendTo((java.lang.Appendable) strBuilder69);
        int int75 = strBuilder26.length();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertArrayEquals(charArray34, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertArrayEquals(charArray57, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean57 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder49.appendWithSeparators((java.lang.Object[]) charSequenceArray56, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder46.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray56);
        java.lang.StringBuffer stringBuffer61 = strBuilder60.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.appendln((float) (short) 100);
        boolean boolean64 = strBuilder63.isNotEmpty();
        java.lang.String str67 = strBuilder63.midString((int) '4', (int) (byte) 10);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(stringBuffer61);
        org.junit.Assert.assertEquals(stringBuffer61.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n" + "'", str67, "\n");
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("HI!");
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray7);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray21 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str22 = org.apache.commons.lang3.text.WordUtils.initials("", charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer15.reset(charArray21);
        strBuilder12.getChars(0, 0, charArray21, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendln('$');
        boolean boolean32 = strBuilder30.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.deleteAll(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer10.setDelimiterMatcher(strMatcher34);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strTokenizer36.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder1.replaceFirst(strMatcher37, "strTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.setNewLineText("Strtokenizer[not\r\nTokenized\r\nYet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator('#', '#');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertArrayEquals(charArray21, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("1", "I!");
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        java.lang.String str11 = strTokenizer9.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer9.reset("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer13.setTrimmerMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor0.setValueDelimiterMatcher(strMatcher17);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str30 = org.apache.commons.lang3.text.WordUtils.initials("", charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder22.appendln(charArray29, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.deleteFirst("Strtokenizer[not\r\ntokenized\r\nyet]");
        java.lang.String str64 = strSubstitutor21.replace((java.lang.CharSequence) "Strtokenizer[not\r\ntokenized\r\nyet]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "null" + "'", str11, "null");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Strtokenizer[not\r\ntokenized\r\nyet]" + "'", str64, "Strtokenizer[not\r\ntokenized\r\nyet]");
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer0.setIgnoredChar('#');
        boolean boolean3 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor5 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer6 = null;
        boolean boolean7 = strSubstitutor5.replaceIn(stringBuffer6);
        java.lang.String str9 = strSubstitutor5.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strSubstitutor5.getValueDelimiterMatcher();
        char[] charArray16 = new char[] { '$', '#', '#', '4', ' ' };
        int int18 = strMatcher10.isMatch(charArray16, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer2.setDelimiterMatcher(strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer2.setQuoteChar('$');
        java.lang.String str22 = strTokenizer2.previousToken();
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertArrayEquals(charArray16, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteAll(strMatcher27);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.deleteFirst("#aa");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray12 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str13 = org.apache.commons.lang3.text.WordUtils.initials("", charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher21);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer25 = null;
        boolean boolean26 = strSubstitutor24.replaceIn(stringBuffer25);
        java.lang.String str28 = strSubstitutor24.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strSubstitutor24.getValueDelimiterMatcher();
        char[] charArray35 = new char[] { '$', '#', '#', '4', ' ' };
        int int37 = strMatcher29.isMatch(charArray35, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher21, strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder5.appendln(charArray12, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendSeparator('a');
        char[] charArray53 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder51.append(charArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int59 = strBuilder57.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray70 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str71 = org.apache.commons.lang3.text.WordUtils.initials("", charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, strMatcher73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer64.reset(charArray70);
        strBuilder61.getChars(0, 0, charArray70, (int) (short) 1);
        char[] charArray78 = strBuilder57.getChars(charArray70);
        char[] charArray79 = strBuilder55.getChars(charArray70);
        int int83 = strMatcher4.isMatch(charArray70, 9, 4, (-1));
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertArrayEquals(charArray12, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertArrayEquals(charArray35, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertArrayEquals(charArray70, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertArrayEquals(charArray78, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertArrayEquals(charArray79, new char[] { '-', '1', '.', '0', '#', ' ', '\n', 'a', '$' });
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        int int43 = strBuilder42.size();
        int int44 = strBuilder42.size();
        java.nio.CharBuffer charBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.append(charBuffer45, (int) (byte) -1, 7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteCharAt((int) '$');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 7 + "'", int43 == 7);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 7 + "'", int44 == 7);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str30 = org.apache.commons.lang3.text.WordUtils.initials("", charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher46);
        int int57 = strBuilder19.indexOf(strMatcher38, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        java.util.List<java.lang.String> strList60 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.appendln((double) 10);
        int int64 = strBuilder63.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.insert(1, "# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 35 + "'", int64 == 35);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(true);
        java.lang.String str42 = strTokenizer39.next();
        char[] charArray48 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str49 = org.apache.commons.lang3.text.WordUtils.initials("", charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer39.setTrimmerMatcher(strMatcher51);
        boolean boolean54 = strBuilder36.equals((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.deleteAll('4');
        int int58 = strBuilder36.indexOf("HI!$\r\n4#AA\r\nI!");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "null" + "'", str42, "null");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        java.lang.String str5 = org.apache.commons.lang3.text.WordUtils.wrap("# \n-1.0\r\n32iii", (-1), "Hi!Hi!hi!nullhi!hi!Hi!", true, "Hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "#Hi!Hi!hi!nullhi!hi!Hi! Hi!Hi!hi!nullhi!hi!Hi!\nHi!Hi!hi!nullhi!hi!Hi!-Hi!Hi!hi!nullhi!hi!Hi!1Hi!Hi!hi!nullhi!hi!Hi!.Hi!Hi!hi!nullhi!hi!Hi!0Hi!Hi!hi!nullhi!hi!Hi!\rHi!Hi!hi!nullhi!hi!Hi!\nHi!Hi!hi!nullhi!hi!Hi!3Hi!Hi!hi!nullhi!hi!Hi!2Hi!Hi!hi!nullhi!hi!Hi!iHi!Hi!hi!nullhi!hi!Hi!iHi!Hi!hi!nullhi!hi!Hi!i" + "'", str5, "#Hi!Hi!hi!nullhi!hi!Hi! Hi!Hi!hi!nullhi!hi!Hi!\nHi!Hi!hi!nullhi!hi!Hi!-Hi!Hi!hi!nullhi!hi!Hi!1Hi!Hi!hi!nullhi!hi!Hi!.Hi!Hi!hi!nullhi!hi!Hi!0Hi!Hi!hi!nullhi!hi!Hi!\rHi!Hi!hi!nullhi!hi!Hi!\nHi!Hi!hi!nullhi!hi!Hi!3Hi!Hi!hi!nullhi!hi!Hi!2Hi!Hi!hi!nullhi!hi!Hi!iHi!Hi!hi!nullhi!hi!Hi!iHi!Hi!hi!nullhi!hi!Hi!i");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("hI!");
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer(" \r\n", "StrTokenizer[]");
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = null;
        boolean boolean4 = strSubstitutor0.replaceIn(strBuilder1, (-1), 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray12 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str13 = org.apache.commons.lang3.text.WordUtils.initials("", charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher21);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer25 = null;
        boolean boolean26 = strSubstitutor24.replaceIn(stringBuffer25);
        java.lang.String str28 = strSubstitutor24.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strSubstitutor24.getValueDelimiterMatcher();
        char[] charArray35 = new char[] { '$', '#', '#', '4', ' ' };
        int int37 = strMatcher29.isMatch(charArray35, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher21, strMatcher29);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder5.appendln(charArray12, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendSeparator("null", "Hi!");
        boolean boolean48 = strSubstitutor0.replaceIn(strBuilder41);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor0.setVariablePrefix("llun0\n\r0.1\n #0.1-");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = strSubstitutor0.setVariableSuffix('4');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertArrayEquals(charArray12, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertArrayEquals(charArray35, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNotNull(strSubstitutor52);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale1);
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray5 = extendedMessageFormat2.getFormats();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer7 = null;
        boolean boolean8 = strSubstitutor6.replaceIn(stringBuffer7);
        java.lang.String str10 = strSubstitutor6.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer11 = null;
        java.lang.String str12 = strSubstitutor6.replace(stringBuffer11);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor6.setValueDelimiter("null");
        char[] charArray15 = null;
        java.lang.String str18 = strSubstitutor6.replace(charArray15, 100, (-1));
        char char19 = strSubstitutor6.getEscapeChar();
        java.lang.StringBuilder stringBuilder20 = null;
        boolean boolean21 = strSubstitutor6.replaceIn(stringBuilder20);
        java.lang.String str22 = extendedMessageFormat2.format((java.lang.Object) stringBuilder20);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertArrayEquals(formatArray5, new java.text.Format[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + char19 + "' != '" + '$' + "'", char19 == '$');
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder2.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.replaceAll('4', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str19 = org.apache.commons.lang3.text.WordUtils.initials("", charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer12.reset(charArray18);
        strBuilder9.getChars(0, 0, charArray18, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder9.appendln('$');
        boolean boolean29 = strBuilder27.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray38 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str39 = org.apache.commons.lang3.text.WordUtils.initials("", charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer32.reset(charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher47);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer51 = null;
        boolean boolean52 = strSubstitutor50.replaceIn(stringBuffer51);
        java.lang.String str54 = strSubstitutor50.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strSubstitutor50.getValueDelimiterMatcher();
        char[] charArray61 = new char[] { '$', '#', '#', '4', ' ' };
        int int63 = strMatcher55.isMatch(charArray61, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher47, strMatcher55);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder31.appendln(charArray38, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray87 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean88 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray87);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder80.appendWithSeparators((java.lang.Object[]) charSequenceArray87, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder77.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray87);
        java.lang.StringBuffer stringBuffer92 = strBuilder91.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder27.append(stringBuffer92);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder7.appendln(stringBuffer92, 3, 25);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertArrayEquals(charArray18, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertArrayEquals(charArray61, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(charSequenceArray87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(stringBuffer92);
        org.junit.Assert.assertEquals(stringBuffer92.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendFixedWidthPadRight((int) (byte) 1, (int) '#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) 5);
        int int52 = strBuilder49.size();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 41 + "'", int52 == 41);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        extendedMessageFormat1.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer9 = null;
        boolean boolean10 = strSubstitutor8.replaceIn(stringBuffer9);
        java.lang.String str12 = strSubstitutor8.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer13 = null;
        java.lang.String str14 = strSubstitutor8.replace(stringBuffer13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor8.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor16.setValueDelimiter("hi!");
        boolean boolean19 = extendedMessageFormat7.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat20 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat1, (java.text.Format) extendedMessageFormat7);
        java.util.Locale locale21 = extendedMessageFormat1.getLocale();
        java.lang.String str22 = extendedMessageFormat1.toPattern();
        java.lang.Object obj23 = extendedMessageFormat1.clone();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de_DE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertArrayEquals(formatArray26, new java.text.Format[] {});
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        int int45 = strBuilder42.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("S");
        int int50 = strBuilder49.length();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = new org.apache.commons.lang3.text.StrSubstitutor();
        char[] charArray57 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str58 = org.apache.commons.lang3.text.WordUtils.initials("", charArray57);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, strMatcher60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        java.lang.String str63 = strSubstitutor51.replace(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray57);
        char[] charArray65 = strBuilder49.getChars(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, 'i');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertArrayEquals(charArray57, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "4#aa" + "'", str63, "4#aa");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertArrayEquals(charArray65, new char[] { '#', ' ', '\n', 'n', 'u', 'l', 'l', '4', '\r', '\n' });
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.swapCase("hI!$\r\n# \n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Hi!$\r\n# \n" + "'", str1, "Hi!$\r\n# \n");
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        java.lang.StringBuffer stringBuffer13 = null;
        boolean boolean14 = strSubstitutor0.replaceIn(stringBuffer13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor0.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = strSubstitutor16.getVariableSuffixMatcher();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strMatcher17);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        boolean boolean20 = strTokenizer19.hasNext();
        int int21 = strTokenizer19.nextIndex();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(true);
        java.lang.String str42 = strTokenizer39.next();
        char[] charArray48 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str49 = org.apache.commons.lang3.text.WordUtils.initials("", charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer39.setTrimmerMatcher(strMatcher51);
        boolean boolean54 = strBuilder36.equals((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.setCharAt(1, ' ');
        int int59 = strBuilder36.indexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder36.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder36.reverse();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "null" + "'", str42, "null");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray11 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.initials("", charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer24 = null;
        boolean boolean25 = strSubstitutor23.replaceIn(stringBuffer24);
        java.lang.String str27 = strSubstitutor23.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strSubstitutor23.getValueDelimiterMatcher();
        char[] charArray34 = new char[] { '$', '#', '#', '4', ' ' };
        int int36 = strMatcher28.isMatch(charArray34, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher20, strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor38 = strSubstitutor0.setVariableSuffixMatcher(strMatcher20);
        boolean boolean39 = strSubstitutor0.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = strSubstitutor0.setValueDelimiter("HI!\r\n");
        char char42 = strSubstitutor0.getEscapeChar();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertArrayEquals(charArray11, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertArrayEquals(charArray34, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strSubstitutor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSubstitutor41);
        org.junit.Assert.assertTrue("'" + char42 + "' != '" + '$' + "'", char42 == '$');
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendPadding(3, '$');
        boolean boolean55 = strBuilder53.startsWith("Strtokenizer[not\r\ntokenized\r\nyet]");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer7.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray19 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str20 = org.apache.commons.lang3.text.WordUtils.initials("", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        java.lang.String str27 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder2.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        char[] charArray31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder30.appendln(charArray31, 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray44 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str45 = org.apache.commons.lang3.text.WordUtils.initials("", charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer38.reset(charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher53);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer57 = null;
        boolean boolean58 = strSubstitutor56.replaceIn(stringBuffer57);
        java.lang.String str60 = strSubstitutor56.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strSubstitutor56.getValueDelimiterMatcher();
        char[] charArray67 = new char[] { '$', '#', '#', '4', ' ' };
        int int69 = strMatcher61.isMatch(charArray67, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, strMatcher53, strMatcher61);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder37.appendln(charArray44, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder73.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNewLineText("h");
        java.lang.StringBuilder stringBuilder82 = strBuilder79.toStringBuilder();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder36.append(stringBuilder82, (int) (short) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str27, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertArrayEquals(charArray44, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertArrayEquals(charArray67, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(stringBuilder82);
        org.junit.Assert.assertEquals(stringBuilder82.toString(), "# \nnull");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        char[] charArray82 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str83 = org.apache.commons.lang3.text.WordUtils.initials("", charArray82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder74.replaceFirst(strMatcher84, "S");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.appendSeparator('$', ' ');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertArrayEquals(charArray82, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int3 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        strBuilder5.getChars(0, 0, charArray14, (int) (short) 1);
        char[] charArray22 = strBuilder1.getChars(charArray14);
        java.nio.CharBuffer charBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.append(charBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder1.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder1.trim();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        char char15 = strSubstitutor0.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor0.setVariablePrefix(' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertTrue("'" + char15 + "' != '" + '$' + "'", char15 == '$');
        org.junit.Assert.assertNotNull(strSubstitutor17);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setDelimiterChar('#');
        java.util.List<java.lang.String> strList7 = strTokenizer4.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strList7);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append((java.lang.Object) 0.0d);
        java.nio.CharBuffer charBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append(charBuffer50, (int) (byte) 0, (int) (short) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("Strtokenizer[not\r\ntokenized\r\nyet]", '#', 'a');
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder47.append("# \n-1.0\r\n32iii", (java.lang.Object[]) strArray59);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertArrayEquals(strArray59, new java.lang.String[] { "Strtokenizer[not\r\ntokenized\r\nyet]" });
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer4.setIgnoreEmptyTokens(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        int int45 = strBuilder42.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator('a', (-1));
        boolean boolean50 = strBuilder42.endsWith("h");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        java.util.stream.IntStream intStream75 = strBuilder41.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder41.setNullText("Strtokenizer[not\r\ntokenized\r\nyet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln((long) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceAll('i', 'a');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale1);
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray5 = extendedMessageFormat2.getFormats();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer10 = null;
        boolean boolean11 = strSubstitutor9.replaceIn(stringBuffer10);
        java.lang.String str13 = strSubstitutor9.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer14 = null;
        java.lang.String str15 = strSubstitutor9.replace(stringBuffer14);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor9.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor17.setValueDelimiter("hi!");
        boolean boolean20 = extendedMessageFormat8.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray21 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Locale locale22 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!\r\n", locale22);
        extendedMessageFormat2.setLocale(locale22);
        java.lang.Object obj25 = extendedMessageFormat2.clone();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertArrayEquals(formatArray5, new java.text.Format[] {});
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertArrayEquals(formatArray21, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "de_DE");
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '$');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = strTokenizer38.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray61 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str62 = org.apache.commons.lang3.text.WordUtils.initials("", charArray61);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer55.reset(charArray61);
        strBuilder52.getChars(0, 0, charArray61, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder52.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder52.append((double) (byte) 100);
        boolean boolean73 = strBuilder52.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder42.appendln(strBuilder52);
        java.lang.Object obj75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.appendln(obj75);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertArrayEquals(charArray61, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.util.Properties properties42 = null;
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder41, properties42);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "# \nhi!" + "'", str43, "# \nhi!");
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = null;
        boolean boolean4 = strSubstitutor0.replaceIn(strBuilder1, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor0.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor6.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray16 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str17 = org.apache.commons.lang3.text.WordUtils.initials("", charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer10.reset(charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher25);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer29 = null;
        boolean boolean30 = strSubstitutor28.replaceIn(stringBuffer29);
        java.lang.String str32 = strSubstitutor28.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strSubstitutor28.getValueDelimiterMatcher();
        char[] charArray39 = new char[] { '$', '#', '#', '4', ' ' };
        int int41 = strMatcher33.isMatch(charArray39, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher25, strMatcher33);
        int int44 = strMatcher9.isMatch(charArray16, 0);
        java.lang.String str45 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("Sty", charArray16);
        int int47 = strMatcher7.isMatch(charArray16, 3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertArrayEquals(charArray16, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertArrayEquals(charArray39, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Sty" + "'", str45, "Sty");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        java.util.Locale locale2 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String str8 = java.text.MessageFormat.format("S", (java.lang.Object[]) strArray7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray19 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str20 = org.apache.commons.lang3.text.WordUtils.initials("", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray19);
        strBuilder10.getChars(0, 0, charArray19, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendln('$');
        int int31 = strBuilder28.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.setLength((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean45 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder37.appendWithSeparators((java.lang.Object[]) charSequenceArray44, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray58 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str59 = org.apache.commons.lang3.text.WordUtils.initials("", charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer52.reset(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher67);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer71 = null;
        boolean boolean72 = strSubstitutor70.replaceIn(stringBuffer71);
        java.lang.String str74 = strSubstitutor70.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strSubstitutor70.getValueDelimiterMatcher();
        char[] charArray81 = new char[] { '$', '#', '#', '4', ' ' };
        int int83 = strMatcher75.isMatch(charArray81, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher67, strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder51.appendln(charArray58, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder50.appendln(strBuilder90);
        strBuilder35.appendTo((java.lang.Appendable) strBuilder90);
        java.lang.StringBuffer stringBuffer95 = strBuilder90.toStringBuffer();
        java.text.FieldPosition fieldPosition96 = null;
        java.lang.StringBuffer stringBuffer97 = extendedMessageFormat3.format((java.lang.Object[]) strArray7, stringBuffer95, fieldPosition96);
        java.lang.String str98 = java.text.MessageFormat.format("- ", (java.lang.Object[]) strArray7);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertArrayEquals(formatArray4, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertArrayEquals(strArray7, new java.lang.String[] {});
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "S" + "'", str8, "S");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertArrayEquals(charArray58, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertArrayEquals(charArray81, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(stringBuffer95);
        org.junit.Assert.assertEquals(stringBuffer95.toString(), "# \nhi!S");
        org.junit.Assert.assertNotNull(stringBuffer97);
        org.junit.Assert.assertEquals(stringBuffer97.toString(), "# \nhi!S");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "- " + "'", str98, "- ");
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendSeparator('a');
        char[] charArray48 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int54 = strBuilder52.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray65 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str66 = org.apache.commons.lang3.text.WordUtils.initials("", charArray65);
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer59.reset(charArray65);
        strBuilder56.getChars(0, 0, charArray65, (int) (short) 1);
        char[] charArray73 = strBuilder52.getChars(charArray65);
        char[] charArray74 = strBuilder50.getChars(charArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder50.append("Strtokenizer[not\r\nTokenized\r\nYet]", 27, 1);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertArrayEquals(charArray65, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertArrayEquals(charArray74, new char[] { '-', '1', '.', '0', '#', ' ', '\n', 'a', '$' });
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getFormatter();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer8 = null;
        boolean boolean9 = strSubstitutor7.replaceIn(stringBuffer8);
        java.lang.String str11 = strSubstitutor7.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer12 = null;
        java.lang.String str13 = strSubstitutor7.replace(stringBuffer12);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor7.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor15.setValueDelimiter("hi!");
        boolean boolean18 = extendedMessageFormat6.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray19 = extendedMessageFormat6.getFormatsByArgumentIndex();
        extendedMessageFormat6.applyPattern("StrTokenizer[Hi!]");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat22 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) compositeFormat2, (java.text.Format) extendedMessageFormat6);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher39);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer43 = null;
        boolean boolean44 = strSubstitutor42.replaceIn(stringBuffer43);
        java.lang.String str46 = strSubstitutor42.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strSubstitutor42.getValueDelimiterMatcher();
        char[] charArray53 = new char[] { '$', '#', '#', '4', ' ' };
        int int55 = strMatcher47.isMatch(charArray53, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendln(charArray30, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder70 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.appendln(stringBuilder70, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.replaceFirst("StrTokenizer[Hi!]", "#aa");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = extendedMessageFormat6.format((java.lang.Object) strBuilder78);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang3.text.StrBuilder cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSubstitutor15);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertArrayEquals(formatArray19, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(true);
        java.lang.String str42 = strTokenizer39.next();
        char[] charArray48 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str49 = org.apache.commons.lang3.text.WordUtils.initials("", charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer39.setTrimmerMatcher(strMatcher51);
        boolean boolean54 = strBuilder36.equals((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor57 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = null;
        boolean boolean61 = strSubstitutor57.replaceIn(strBuilder58, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor63 = strSubstitutor57.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strSubstitutor63.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer56.setIgnoredMatcher(strMatcher64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer65.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer69.reset();
        java.lang.String str71 = strTokenizer69.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer69.setTrimmerMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer65.setIgnoredMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer39.setDelimiterMatcher(strMatcher72);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "null" + "'", str42, "null");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strSubstitutor63);
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "null" + "'", str71, "null");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.uncapitalize("1 T");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "1 t" + "'", str1, "1 t");
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("4#aa");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.deleteFirst("4#aa");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray8 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str9 = org.apache.commons.lang3.text.WordUtils.initials("", charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer2.reset(charArray8);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher17);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer21 = null;
        boolean boolean22 = strSubstitutor20.replaceIn(stringBuffer21);
        java.lang.String str24 = strSubstitutor20.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strSubstitutor20.getValueDelimiterMatcher();
        char[] charArray31 = new char[] { '$', '#', '#', '4', ' ' };
        int int33 = strMatcher25.isMatch(charArray31, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher17, strMatcher25);
        int int36 = strMatcher1.isMatch(charArray8, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, '#', '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        char[] charArray41 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray8, strMatcher40, strMatcher42);
        java.lang.String str44 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("llun0\n\r0.1\n #0.1-", charArray8);
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertArrayEquals(charArray8, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertArrayEquals(charArray31, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Llun0\n\r0.1\n #0.1-" + "'", str44, "Llun0\n\r0.1\n #0.1-");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append((long) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray53 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str54 = org.apache.commons.lang3.text.WordUtils.initials("", charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer47.reset(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher62);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer66 = null;
        boolean boolean67 = strSubstitutor65.replaceIn(stringBuffer66);
        java.lang.String str69 = strSubstitutor65.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strSubstitutor65.getValueDelimiterMatcher();
        char[] charArray76 = new char[] { '$', '#', '#', '4', ' ' };
        int int78 = strMatcher70.isMatch(charArray76, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher62, strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder46.appendln(charArray53, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder88 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln(stringBuilder88);
        java.util.stream.IntStream intStream90 = strBuilder89.codePoints();
        java.lang.StringBuilder stringBuilder91 = strBuilder89.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder45.appendln(stringBuilder91);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.deleteAll('4');
        int int95 = strBuilder94.length();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertArrayEquals(charArray76, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(intStream90);
        org.junit.Assert.assertNotNull(stringBuilder91);
        org.junit.Assert.assertEquals(stringBuilder91.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 21 + "'", int95 == 21);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        java.nio.CharBuffer charBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.append(charBuffer50, (int) 'a', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendSeparator('$', 27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence59 = strBuilder56.subSequence(4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -4");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        java.util.Locale locale3 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale5);
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale5);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "de_DE");
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendSeparator('4', 5);
        int int8 = strBuilder6.lastIndexOf(' ');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher39);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer43 = null;
        boolean boolean44 = strSubstitutor42.replaceIn(stringBuffer43);
        java.lang.String str46 = strSubstitutor42.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strSubstitutor42.getValueDelimiterMatcher();
        char[] charArray53 = new char[] { '$', '#', '#', '4', ' ' };
        int int55 = strMatcher47.isMatch(charArray53, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendln(charArray30, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean80 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.appendWithSeparators((java.lang.Object[]) charSequenceArray79, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder69.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray79);
        java.lang.StringBuffer stringBuffer84 = strBuilder83.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder19.append(stringBuffer84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder19.appendln((float) (-1L));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer("", "null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer90.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher93 = strTokenizer92.getDelimiterMatcher();
        int int95 = strBuilder19.lastIndexOf(strMatcher93, 1);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(stringBuffer84);
        org.junit.Assert.assertEquals(stringBuffer84.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strMatcher93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("# \nhi!\r\n-1", 'i', '$');
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("i!$\r\ni");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer7.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray19 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str20 = org.apache.commons.lang3.text.WordUtils.initials("", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        java.lang.String str27 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder2.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        java.io.Writer writer31 = strBuilder2.asWriter();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str27, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray49 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str50 = org.apache.commons.lang3.text.WordUtils.initials("", charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer43.reset(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.deleteFirst("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray68 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str69 = org.apache.commons.lang3.text.WordUtils.initials("", charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.reset(charArray68);
        strBuilder59.getChars(0, 0, charArray68, (int) (short) 1);
        java.lang.String str77 = strBuilder59.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder59.appendNewLine();
        java.lang.CharSequence[] charSequenceArray86 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean87 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder78.appendln("i!", (java.lang.Object[]) charSequenceArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder78.minimizeCapacity();
        java.nio.CharBuffer charBuffer90 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder78.append(charBuffer90, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder57.appendln(strBuilder93);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.append(true);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertArrayEquals(charArray49, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertArrayEquals(charArray68, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "i!" + "'", str77, "i!");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("# \nhi!", '4');
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        boolean boolean22 = strBuilder1.contains(strMatcher21);
        java.nio.CharBuffer charBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.append(charBuffer23);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(10.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.append("hi!hi!Hi!hi!nullhi!hi!Hi!a\r\n", (int) (short) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        strBuilder13.getChars(0, 0, charArray22, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendln('$');
        boolean boolean33 = strBuilder31.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray41 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str42 = org.apache.commons.lang3.text.WordUtils.initials("", charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher50);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer54 = null;
        boolean boolean55 = strSubstitutor53.replaceIn(stringBuffer54);
        java.lang.String str57 = strSubstitutor53.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strSubstitutor53.getValueDelimiterMatcher();
        char[] charArray64 = new char[] { '$', '#', '#', '4', ' ' };
        int int66 = strMatcher58.isMatch(charArray64, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher50, strMatcher58);
        int int69 = strBuilder31.indexOf(strMatcher50, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        java.util.List<java.lang.String> strList72 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        java.nio.CharBuffer charBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder11.append(charBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder11.insert(1, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder11.appendSeparator("#");
        int int84 = strBuilder81.indexOf(' ', 0);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertArrayEquals(charArray41, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertArrayEquals(charArray64, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean51 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.append("null", (java.lang.Object[]) charSequenceArray50);
        java.util.Formatter formatter53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter58 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) "null", formatter53, 32, 0, (int) (byte) 10, 'i');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = null;
        boolean boolean6 = strSubstitutor2.replaceIn(strBuilder3, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor2.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strSubstitutor8.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer1.setIgnoredMatcher(strMatcher9);
        int int11 = strTokenizer10.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(true);
        java.lang.String str42 = strTokenizer39.next();
        char[] charArray48 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str49 = org.apache.commons.lang3.text.WordUtils.initials("", charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, strMatcher51);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = strTokenizer39.setTrimmerMatcher(strMatcher51);
        boolean boolean54 = strBuilder36.equals((java.lang.Object) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder36.deleteAll('4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert((int) '4', (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "null" + "'", str42, "null");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder2.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder2.deleteFirst("I!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.appendln((double) 10L);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat2.parse("1 T", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertArrayEquals(formatArray4, new java.text.Format[] {});
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        boolean boolean3 = strTokenizer2.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer2.setQuoteChar('a');
        int int6 = strTokenizer5.size();
        boolean boolean7 = strTokenizer5.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("I!", (int) (byte) 10, "StrTokenizer[]", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "I!" + "'", str4, "I!");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("");
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        strSubstitutor0.setEscapeChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray27 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str28 = org.apache.commons.lang3.text.WordUtils.initials("", charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray27);
        strBuilder18.getChars(0, 0, charArray27, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int41 = strBuilder37.indexOf(strMatcher39, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.io.Reader reader63 = strBuilder43.asReader();
        int int64 = strBuilder37.readFrom((java.lang.Readable) reader63);
        int int65 = strBuilder36.readFrom((java.lang.Readable) reader63);
        java.lang.StringBuilder stringBuilder66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder36.append(stringBuilder66, (int) ' ', (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder36.replaceFirst(strMatcher70, "HI!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = strSubstitutor0.setValueDelimiterMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor74 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer75 = null;
        boolean boolean76 = strSubstitutor74.replaceIn(stringBuffer75);
        java.lang.String str78 = strSubstitutor74.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strSubstitutor74.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder80 = null;
        boolean boolean81 = strSubstitutor74.replaceIn(stringBuilder80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strSubstitutor74.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor83 = strSubstitutor0.setVariablePrefixMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = strSubstitutor83.getVariableSuffixMatcher();
        strSubstitutor83.setPreserveEscapes(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strSubstitutor83.getVariablePrefixMatcher();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strSubstitutor73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strSubstitutor83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strMatcher87);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String str4 = java.text.MessageFormat.format("S", (java.lang.Object[]) strArray3);
        java.lang.String str5 = java.text.MessageFormat.format("1 T", (java.lang.Object[]) strArray3);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertArrayEquals(strArray3, new java.lang.String[] {});
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "S" + "'", str4, "S");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "1 T" + "'", str5, "1 T");
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        java.lang.CharSequence charSequence9 = null;
        java.lang.String str12 = strSubstitutor8.replace(charSequence9, (int) 'a', (int) 'a');
        char char13 = strSubstitutor8.getEscapeChar();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray24 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str25 = org.apache.commons.lang3.text.WordUtils.initials("", charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer18.reset(charArray24);
        strBuilder15.getChars(0, 0, charArray24, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendln('$');
        int int36 = strBuilder33.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.reverse();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = strSubstitutor8.replace((java.lang.CharSequence) strBuilder39, (int) '#', 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + '$' + "'", char13 == '$');
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertArrayEquals(charArray24, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.reverse();
        java.util.Formatter formatter40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher61);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor64 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer65 = null;
        boolean boolean66 = strSubstitutor64.replaceIn(stringBuffer65);
        java.lang.String str68 = strSubstitutor64.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strSubstitutor64.getValueDelimiterMatcher();
        char[] charArray75 = new char[] { '$', '#', '#', '4', ' ' };
        int int77 = strMatcher69.isMatch(charArray75, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher61, strMatcher69);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder45.appendln(charArray52, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.insert(0, (float) (-1));
        java.lang.CharSequence[] charSequenceArray95 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean96 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray95);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder87.append("null", (java.lang.Object[]) charSequenceArray95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter98 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) strBuilder36, formatter40, 32, 9, 32, 'a', (java.lang.CharSequence) "null");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertArrayEquals(charArray75, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(charSequenceArray95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray11 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.initials("", charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer24 = null;
        boolean boolean25 = strSubstitutor23.replaceIn(stringBuffer24);
        java.lang.String str27 = strSubstitutor23.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strSubstitutor23.getValueDelimiterMatcher();
        char[] charArray34 = new char[] { '$', '#', '#', '4', ' ' };
        int int36 = strMatcher28.isMatch(charArray34, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher20, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder4.appendln(charArray11, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder46.appendSeparator("Sty", "Hi!");
        char[] charArray61 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str62 = org.apache.commons.lang3.text.WordUtils.initials("", charArray61);
        java.lang.String str63 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray61);
        java.lang.String str64 = org.apache.commons.lang3.text.WordUtils.capitalize("Hi!", charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder53.append(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append("sTRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]", (int) (byte) 1, 27);
        boolean boolean70 = strBuilder1.equalsIgnoreCase(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.deleteCharAt(0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder69.replace(32, 27, "StrTokenizer[]");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertArrayEquals(charArray11, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertArrayEquals(charArray34, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertArrayEquals(charArray61, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Hi!" + "'", str63, "Hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Hi!" + "'", str64, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        int int26 = strBuilder19.indexOf("# \nhi!hi!Hi!hi!nullhi!hi!Hi!97\r\n-1\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder19.appendFixedWidthPadRight(21, 7, 'a');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer4, "StrTokenizer[not tokenized yet]");
        java.lang.String str7 = strBuilder1.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Sty" + "'", str7, "Sty");
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[Hi!]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.String str5 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) strSubstitutor0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strSubstitutor0.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean16 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder8.appendWithSeparators((java.lang.Object[]) charSequenceArray15, "hi!");
        java.io.Reader reader19 = strBuilder18.asReader();
        java.lang.String str20 = strSubstitutor0.replace((java.lang.CharSequence) strBuilder18);
        strSubstitutor0.setEscapeChar('i');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!hi!Hi!hi!nullhi!hi!Hi!" + "'", str20, "hi!hi!Hi!hi!nullhi!hi!Hi!");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray28 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str29 = org.apache.commons.lang3.text.WordUtils.initials("", charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.reset(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher37);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer41 = null;
        boolean boolean42 = strSubstitutor40.replaceIn(stringBuffer41);
        java.lang.String str44 = strSubstitutor40.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strSubstitutor40.getValueDelimiterMatcher();
        char[] charArray51 = new char[] { '$', '#', '#', '4', ' ' };
        int int53 = strMatcher45.isMatch(charArray51, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher37, strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder21.appendln(charArray28, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder57.replaceFirst('$', 'a');
        boolean boolean69 = strBuilder20.equalsIgnoreCase(strBuilder57);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder20.appendPadding(32, 'i');
        char[] charArray75 = strBuilder72.toCharArray(35, 35);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, 'a', '$');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertArrayEquals(charArray28, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertArrayEquals(charArray51, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertArrayEquals(charArray75, new char[] {});
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("# \n");
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        char char7 = strSubstitutor0.getEscapeChar();
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup8 = strSubstitutor0.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariableSuffix("hi!$\r\ni!#");
        strSubstitutor0.setEnableSubstitutionInVariables(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + char7 + "' != '" + '$' + "'", char7 == '$');
        org.junit.Assert.assertNull(wildcardStrLookup8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("4#aa");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("null");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat3.applyPattern("");
        extendedMessageFormat3.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer11 = null;
        boolean boolean12 = strSubstitutor10.replaceIn(stringBuffer11);
        java.lang.String str14 = strSubstitutor10.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer15 = null;
        java.lang.String str16 = strSubstitutor10.replace(stringBuffer15);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor10.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = strSubstitutor18.setValueDelimiter("hi!");
        boolean boolean21 = extendedMessageFormat9.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat22 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat3, (java.text.Format) extendedMessageFormat9);
        java.util.Locale locale23 = extendedMessageFormat3.getLocale();
        extendedMessageFormat1.setLocale(locale23);
        extendedMessageFormat1.applyPattern("4#aa");
        java.text.Format[] formatArray27 = extendedMessageFormat1.getFormatsByArgumentIndex();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat30.applyPattern("");
        extendedMessageFormat30.applyPattern("hi!");
        java.text.Format[] formatArray35 = extendedMessageFormat30.getFormatsByArgumentIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer38.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.reset(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer41.reset(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        java.lang.String str58 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, '4', '#');
        boolean boolean64 = extendedMessageFormat30.equals((java.lang.Object) strTokenizer63);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat(32, (java.text.Format) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertNotNull(strSubstitutor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertArrayEquals(formatArray27, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertArrayEquals(formatArray35, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str58, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        strSubstitutor0.setEscapeChar('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray27 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str28 = org.apache.commons.lang3.text.WordUtils.initials("", charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray27);
        strBuilder18.getChars(0, 0, charArray27, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int41 = strBuilder37.indexOf(strMatcher39, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.io.Reader reader63 = strBuilder43.asReader();
        int int64 = strBuilder37.readFrom((java.lang.Readable) reader63);
        int int65 = strBuilder36.readFrom((java.lang.Readable) reader63);
        java.lang.StringBuilder stringBuilder66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder36.append(stringBuilder66, (int) ' ', (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder36.replaceFirst(strMatcher70, "HI!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor73 = strSubstitutor0.setValueDelimiterMatcher(strMatcher70);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor74 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer75 = null;
        boolean boolean76 = strSubstitutor74.replaceIn(stringBuffer75);
        java.lang.String str78 = strSubstitutor74.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = strSubstitutor74.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder80 = null;
        boolean boolean81 = strSubstitutor74.replaceIn(stringBuilder80);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = strSubstitutor74.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor83 = strSubstitutor0.setVariablePrefixMatcher(strMatcher82);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor85 = strSubstitutor0.setValueDelimiter('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor87 = strSubstitutor0.setVariableSuffix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor89 = strSubstitutor0.setVariablePrefix("");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher92 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int94 = strBuilder90.indexOf(strMatcher92, (int) (byte) 1);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor95 = strSubstitutor0.setVariableSuffixMatcher(strMatcher92);
        strSubstitutor0.setEscapeChar(' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(reader63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strSubstitutor73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertNotNull(strSubstitutor83);
        org.junit.Assert.assertNotNull(strSubstitutor85);
        org.junit.Assert.assertNotNull(strSubstitutor87);
        org.junit.Assert.assertNotNull(strSubstitutor89);
        org.junit.Assert.assertNotNull(strMatcher92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(strSubstitutor95);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append("H");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt(0, 'a');
        int int46 = strBuilder36.indexOf("", (int) '#');
        boolean boolean48 = strBuilder36.contains('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder36.deleteCharAt(26);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 26");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 7 + "'", int46 == 7);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.StringBuffer stringBuffer11 = null;
        java.lang.String str12 = strSubstitutor0.replace(stringBuffer11);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup13 = strSubstitutor0.getVariableResolver();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor0.setVariableSuffix(' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(wildcardStrLookup13);
        org.junit.Assert.assertNotNull(strSubstitutor15);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.reset(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer63 = null;
        boolean boolean64 = strSubstitutor62.replaceIn(stringBuffer63);
        java.lang.String str66 = strSubstitutor62.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strSubstitutor62.getValueDelimiterMatcher();
        char[] charArray73 = new char[] { '$', '#', '#', '4', ' ' };
        int int75 = strMatcher67.isMatch(charArray73, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher59, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder43.appendln(charArray50, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder85 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln(stringBuilder85);
        java.util.stream.IntStream intStream87 = strBuilder86.codePoints();
        java.lang.StringBuilder stringBuilder88 = strBuilder86.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder42.appendln(stringBuilder88, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder40.append(stringBuilder88);
        int int95 = strBuilder92.lastIndexOf("Strtokenizer[not tokenized yet]", (int) (byte) -1);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(intStream87);
        org.junit.Assert.assertNotNull(stringBuilder88);
        org.junit.Assert.assertEquals(stringBuilder88.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        char[] charArray1 = null;
        java.lang.String str2 = org.apache.commons.lang3.text.WordUtils.uncapitalize("-1.0# \n1.0\r\n", charArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1.0# \n1.0\r\n" + "'", str2, "-1.0# \n1.0\r\n");
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setTrimmerMatcher(strMatcher4);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer5.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "null" + "'", str3, "null");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int3 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher23);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer27 = null;
        boolean boolean28 = strSubstitutor26.replaceIn(stringBuffer27);
        java.lang.String str30 = strSubstitutor26.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strSubstitutor26.getValueDelimiterMatcher();
        char[] charArray37 = new char[] { '$', '#', '#', '4', ' ' };
        int int39 = strMatcher31.isMatch(charArray37, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher23, strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.appendln(charArray14, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(stringBuilder49);
        java.util.stream.IntStream intStream51 = strBuilder50.codePoints();
        java.lang.StringBuilder stringBuilder52 = strBuilder50.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder6.appendln(stringBuilder52, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder4.append(stringBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append("hi!hi!Hi!hi!nullhi!hi!Hi!# \nhi!\r\n");
        java.nio.CharBuffer charBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.append(charBuffer59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer63 = null;
        boolean boolean64 = strSubstitutor62.replaceIn(stringBuffer63);
        java.lang.String str66 = strSubstitutor62.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer67 = null;
        java.lang.String str68 = strSubstitutor62.replace(stringBuffer67);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor70 = strSubstitutor62.setValueDelimiter("null");
        char[] charArray71 = null;
        java.lang.String str74 = strSubstitutor62.replace(charArray71, 100, (-1));
        char char75 = strSubstitutor62.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor76 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer77 = null;
        boolean boolean78 = strSubstitutor76.replaceIn(stringBuffer77);
        java.lang.String str80 = strSubstitutor76.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strSubstitutor76.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder82 = null;
        boolean boolean83 = strSubstitutor76.replaceIn(stringBuilder82);
        java.lang.StringBuffer stringBuffer84 = null;
        java.lang.String str85 = strSubstitutor76.replace(stringBuffer84);
        java.lang.StringBuffer stringBuffer86 = null;
        boolean boolean87 = strSubstitutor76.replaceIn(stringBuffer86);
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor89 = strSubstitutor76.setValueDelimiterMatcher(strMatcher88);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor90 = strSubstitutor62.setVariableSuffixMatcher(strMatcher88);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder60.insert(52, (java.lang.Object) strMatcher88);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertArrayEquals(charArray37, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(intStream51);
        org.junit.Assert.assertNotNull(stringBuilder52);
        org.junit.Assert.assertEquals(stringBuilder52.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strSubstitutor70);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + char75 + "' != '" + '$' + "'", char75 == '$');
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strSubstitutor89);
        org.junit.Assert.assertNotNull(strSubstitutor90);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.ensureCapacity((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.insert(0, "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer50.reset();
        java.lang.String str52 = strTokenizer50.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer50.reset("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer54.setTrimmerMatcher(strMatcher58);
        java.lang.String[] strArray62 = strTokenizer54.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder48.appendWithSeparators((java.lang.Object[]) strArray62, " \r\n");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "null" + "'", str52, "null");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertArrayEquals(strArray62, new java.lang.String[] { "null" });
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.appendln('4');
        int int4 = strBuilder0.lastIndexOf('#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.insert((int) (byte) 100, ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str30 = org.apache.commons.lang3.text.WordUtils.initials("", charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher46);
        int int57 = strBuilder19.indexOf(strMatcher38, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        java.util.List<java.lang.String> strList60 = strTokenizer59.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder61.appendNewLine();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft(100, 35, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.appendFixedWidthPadRight((int) (short) 1, 27, ' ');
        int int11 = strBuilder5.lastIndexOf('4');
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray49 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str50 = org.apache.commons.lang3.text.WordUtils.initials("", charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer43.reset(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        boolean boolean56 = strTokenizer54.hasNext();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertArrayEquals(charArray49, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor0.replace(stringBuffer8);
        java.lang.StringBuffer stringBuffer10 = null;
        boolean boolean11 = strSubstitutor0.replaceIn(stringBuffer10);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor0.setVariablePrefixMatcher(strMatcher12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: prefixMatcher");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer3.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray15 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str16 = org.apache.commons.lang3.text.WordUtils.initials("", charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer9.reset(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer6.reset(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        java.lang.String str25 = org.apache.commons.lang3.text.WordUtils.capitalize("", charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray15);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertArrayEquals(charArray15, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str23, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMatcher26);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        java.lang.String str5 = strTokenizer2.next();
        char[] charArray11 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.initials("", charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer2.setTrimmerMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer2.setDelimiterChar('#');
        java.lang.String str19 = strTokenizer18.getContent();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "null" + "'", str5, "null");
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertArrayEquals(charArray11, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "null" + "'", str19, "null");
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.swapCase("Llun0\n\r0.1\n #0.1-");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "lLUN0\n\r0.1\n #0.1-" + "'", str1, "lLUN0\n\r0.1\n #0.1-");
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getFormatter();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor7 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer8 = null;
        boolean boolean9 = strSubstitutor7.replaceIn(stringBuffer8);
        java.lang.String str11 = strSubstitutor7.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer12 = null;
        java.lang.String str13 = strSubstitutor7.replace(stringBuffer12);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor7.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor15.setValueDelimiter("hi!");
        boolean boolean18 = extendedMessageFormat6.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray19 = extendedMessageFormat6.getFormatsByArgumentIndex();
        extendedMessageFormat6.applyPattern("StrTokenizer[Hi!]");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat22 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) compositeFormat2, (java.text.Format) extendedMessageFormat6);
        java.text.Format format23 = compositeFormat2.getFormatter();
        java.text.Format format24 = compositeFormat2.getFormatter();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer26 = null;
        boolean boolean27 = strSubstitutor25.replaceIn(stringBuffer26);
        java.lang.String str29 = strSubstitutor25.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer30 = null;
        java.lang.String str31 = strSubstitutor25.replace(stringBuffer30);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor33 = strSubstitutor25.setValueDelimiter("null");
        java.lang.CharSequence charSequence34 = null;
        java.lang.String str37 = strSubstitutor33.replace(charSequence34, (int) 'a', (int) 'a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor39 = strSubstitutor33.setVariablePrefix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = strSubstitutor39.setValueDelimiter('a');
        strSubstitutor41.setEnableSubstitutionInVariables(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = format24.format((java.lang.Object) strSubstitutor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSubstitutor15);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertArrayEquals(formatArray19, new java.text.Format[] {});
        org.junit.Assert.assertNull(format23);
        org.junit.Assert.assertNull(format24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strSubstitutor33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strSubstitutor39);
        org.junit.Assert.assertNotNull(strSubstitutor41);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher31);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer35 = null;
        boolean boolean36 = strSubstitutor34.replaceIn(stringBuffer35);
        java.lang.String str38 = strSubstitutor34.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strSubstitutor34.getValueDelimiterMatcher();
        char[] charArray45 = new char[] { '$', '#', '#', '4', ' ' };
        int int47 = strMatcher39.isMatch(charArray45, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher31, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder15.appendln(charArray22, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.appendSeparator('a');
        char[] charArray63 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray63);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.append(charArray63);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray63);
        int int68 = strBuilder11.lastIndexOf(strMatcher66, 12);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray71 = strBuilder11.toCharArray((int) '$', 3);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertArrayEquals(charArray45, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertArrayEquals(charArray63, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder49.reverse();
        java.lang.Object[] objArray52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.appendln("hi!hi!Hi!hi!nullhi!hi!Hi!# \nhi!\r\n", objArray52);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.deleteAll("S");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder36.append((int) (byte) 100);
        boolean boolean47 = strBuilder36.isNotEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.reverse();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        int int38 = strBuilder36.lastIndexOf("Strtokenizer[not tokenized yet]");
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append(charBuffer39, 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.reset(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer63 = null;
        boolean boolean64 = strSubstitutor62.replaceIn(stringBuffer63);
        java.lang.String str66 = strSubstitutor62.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strSubstitutor62.getValueDelimiterMatcher();
        char[] charArray73 = new char[] { '$', '#', '#', '4', ' ' };
        int int75 = strMatcher67.isMatch(charArray73, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher59, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder43.appendln(charArray50, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder36.appendln(strBuilder79);
        char[] charArray88 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray88);
        int int90 = strTokenizer89.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer89.reset("hi!");
        boolean boolean93 = strTokenizer89.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder79.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        java.lang.String str95 = strTokenizer89.previousToken();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertArrayEquals(charArray88, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor0.replace(stringBuffer8);
        java.lang.StringBuffer stringBuffer10 = null;
        boolean boolean11 = strSubstitutor0.replaceIn(stringBuffer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        strBuilder13.getChars(0, 0, charArray22, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendln('$');
        int int34 = strBuilder31.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.setLength((int) (short) 0);
        boolean boolean39 = strSubstitutor0.replaceIn(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.append((-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer3 = null;
        boolean boolean4 = strSubstitutor2.replaceIn(stringBuffer3);
        java.lang.String str6 = strSubstitutor2.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str8 = strSubstitutor2.replace(stringBuffer7);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor2.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setValueDelimiter("hi!");
        boolean boolean13 = extendedMessageFormat1.equals((java.lang.Object) "hi!");
        java.util.Locale locale15 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertArrayEquals(formatArray17, new java.text.Format[] {});
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("trtokenize");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("hi!$\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str19 = org.apache.commons.lang3.text.WordUtils.initials("", charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer12.reset(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher27);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer31 = null;
        boolean boolean32 = strSubstitutor30.replaceIn(stringBuffer31);
        java.lang.String str34 = strSubstitutor30.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strSubstitutor30.getValueDelimiterMatcher();
        char[] charArray41 = new char[] { '$', '#', '#', '4', ' ' };
        int int43 = strMatcher35.isMatch(charArray41, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher27, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder11.appendln(charArray18, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append("trtokenize");
        boolean boolean55 = strSubstitutor0.replaceIn(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertArrayEquals(charArray18, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertArrayEquals(charArray41, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        int int36 = strBuilder35.size();
        int int37 = strBuilder35.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.setCharAt(35, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 9 + "'", int36 == 9);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9 + "'", int37 == 9);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.insert((int) (byte) 1, false);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder43.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray54 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str55 = org.apache.commons.lang3.text.WordUtils.initials("", charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer48.reset(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher63);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor66 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer67 = null;
        boolean boolean68 = strSubstitutor66.replaceIn(stringBuffer67);
        java.lang.String str70 = strSubstitutor66.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = strSubstitutor66.getValueDelimiterMatcher();
        char[] charArray77 = new char[] { '$', '#', '#', '4', ' ' };
        int int79 = strMatcher71.isMatch(charArray77, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher63, strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder47.appendln(charArray54, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder89 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder88.appendln(stringBuilder89);
        java.util.stream.IntStream intStream91 = strBuilder90.codePoints();
        java.lang.StringBuilder stringBuilder92 = strBuilder90.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder46.appendln(stringBuilder92, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder43.append(stringBuilder92);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder20.appendln(stringBuilder92);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertArrayEquals(charArray54, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertArrayEquals(charArray77, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(intStream91);
        org.junit.Assert.assertNotNull(stringBuilder92);
        org.junit.Assert.assertEquals(stringBuilder92.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendSeparator('4', 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray17 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str18 = org.apache.commons.lang3.text.WordUtils.initials("", charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer11.reset(charArray17);
        strBuilder8.getChars(0, 0, charArray17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder8.appendln('$');
        boolean boolean28 = strBuilder26.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray36 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str37 = org.apache.commons.lang3.text.WordUtils.initials("", charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer30.reset(charArray36);
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor48 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer49 = null;
        boolean boolean50 = strSubstitutor48.replaceIn(stringBuffer49);
        java.lang.String str52 = strSubstitutor48.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strSubstitutor48.getValueDelimiterMatcher();
        char[] charArray59 = new char[] { '$', '#', '#', '4', ' ' };
        int int61 = strMatcher53.isMatch(charArray59, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, strMatcher45, strMatcher53);
        int int64 = strBuilder26.indexOf(strMatcher45, (int) (short) 10);
        int int66 = strBuilder26.indexOf('#');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder1.append((java.lang.CharSequence) strBuilder26, 13, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertArrayEquals(charArray17, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertArrayEquals(charArray36, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertArrayEquals(charArray59, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("1", 0, "Hi!$\r\n100.0", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1" + "'", str4, "1");
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        int int38 = strBuilder36.lastIndexOf("Strtokenizer[not tokenized yet]");
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append(charBuffer39, 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.reset(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer63 = null;
        boolean boolean64 = strSubstitutor62.replaceIn(stringBuffer63);
        java.lang.String str66 = strSubstitutor62.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strSubstitutor62.getValueDelimiterMatcher();
        char[] charArray73 = new char[] { '$', '#', '#', '4', ' ' };
        int int75 = strMatcher67.isMatch(charArray73, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher59, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder43.appendln(charArray50, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder36.appendln(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder79.replaceFirst('a', ' ');
        java.lang.String str90 = strBuilder79.toString();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "-1.0# \n" + "'", str90, "-1.0# \n");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.initials("StrTokenizer[Hi!]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "S" + "'", str1, "S");
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setTrimmerMatcher(strMatcher20);
        boolean boolean22 = strTokenizer21.hasPrevious();
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray28 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str29 = org.apache.commons.lang3.text.WordUtils.initials("", charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer22.reset(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher37);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor40 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer41 = null;
        boolean boolean42 = strSubstitutor40.replaceIn(stringBuffer41);
        java.lang.String str44 = strSubstitutor40.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = strSubstitutor40.getValueDelimiterMatcher();
        char[] charArray51 = new char[] { '$', '#', '#', '4', ' ' };
        int int53 = strMatcher45.isMatch(charArray51, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, strMatcher37, strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder21.appendln(charArray28, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder57.replaceFirst('$', 'a');
        boolean boolean69 = strBuilder20.equalsIgnoreCase(strBuilder57);
        int int70 = strBuilder20.length();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertArrayEquals(charArray28, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertArrayEquals(charArray51, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.ensureCapacity((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.insert(0, "");
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray51 = strBuilder41.toCharArray(13, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(1L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder36.append("H");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.setCharAt(0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.deleteAll('a');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        java.lang.String str2 = strBuilder0.rightString((int) (short) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer4.reset();
        java.lang.String str6 = strTokenizer4.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setTrimmerMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.deleteAll(strMatcher7);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray17 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str18 = org.apache.commons.lang3.text.WordUtils.initials("", charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer11.reset(charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher26);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor29 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer30 = null;
        boolean boolean31 = strSubstitutor29.replaceIn(stringBuffer30);
        java.lang.String str33 = strSubstitutor29.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strSubstitutor29.getValueDelimiterMatcher();
        char[] charArray40 = new char[] { '$', '#', '#', '4', ' ' };
        int int42 = strMatcher34.isMatch(charArray40, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher26, strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder10.appendln(charArray17, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder52.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder52.deleteFirst(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.insert(0, 'a');
        int int66 = strBuilder64.indexOf("StrTokenizer[Hi!]");
        strBuilder9.appendTo((java.lang.Appendable) strBuilder64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("hi!hi!Hi!hi!nullhi!hi!Hi!a\r\n", ' ', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder64.append((java.lang.Object) ' ');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "null" + "'", str6, "null");
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertArrayEquals(charArray17, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertArrayEquals(charArray40, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int4 = strBuilder0.indexOf(strMatcher2, (int) (byte) 1);
        int int5 = strBuilder0.length();
        int int7 = strBuilder0.indexOf("hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.replaceAll("# \n-1.0\r\n32iii", "1");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, '$');
        char[] charArray44 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str45 = org.apache.commons.lang3.text.WordUtils.initials("", charArray44);
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray58 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str59 = org.apache.commons.lang3.text.WordUtils.initials("", charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, strMatcher61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer52.reset(charArray58);
        strBuilder49.getChars(0, 0, charArray58, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder49.appendln('$');
        boolean boolean69 = strBuilder67.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.deleteAll(strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer47.setDelimiterMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher74);
        java.util.List<java.lang.String> strList76 = strTokenizer75.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer75.getQuoteMatcher();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertArrayEquals(charArray44, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertArrayEquals(charArray58, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(strMatcher77);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("llun0\n\r0.1\n #0.1-");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer(charArray0);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoredChar('4');
        java.lang.String str13 = strTokenizer12.toString();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Hi!" + "'", str8, "Hi!");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        java.lang.StringBuilder stringBuilder45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuilder45);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.replaceAll(strMatcher47, "I!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.setCharAt((int) (short) 10, '#');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        java.lang.StringBuilder stringBuilder20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder19.appendln(stringBuilder20, (int) (byte) -1, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.insert((int) (short) 100, (double) 27);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.deleteFirst('4');
        int int46 = strBuilder36.indexOf(' ', (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.append((long) (short) 10);
        java.util.Formatter formatter49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter53 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) strBuilder36, formatter49, 7, 35, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        java.lang.CharSequence charSequence0 = null;
        java.util.Formatter formatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter5 = org.apache.commons.lang3.text.FormattableUtils.append(charSequence0, formatter1, (-1), (int) (byte) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.initials("", charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer27.reset(charArray33);
        strBuilder24.getChars(0, 0, charArray33, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer22.reset(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer22.setDelimiterChar('$');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer22.set("hi!hi!Hi!hi!nullhi!hi!Hi!a\r\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertArrayEquals(charArray33, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        boolean boolean77 = strBuilder74.isNotEmpty();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        int int38 = strBuilder36.lastIndexOf("Strtokenizer[not tokenized yet]");
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append(charBuffer39, 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.reset(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer63 = null;
        boolean boolean64 = strSubstitutor62.replaceIn(stringBuffer63);
        java.lang.String str66 = strSubstitutor62.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strSubstitutor62.getValueDelimiterMatcher();
        char[] charArray73 = new char[] { '$', '#', '#', '4', ' ' };
        int int75 = strMatcher67.isMatch(charArray73, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher59, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder43.appendln(charArray50, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder36.appendln(strBuilder79);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder79.replaceFirst('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int93 = strBuilder91.lastIndexOf(' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder89.append(strBuilder91, 1, 26);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        int int24 = strBuilder19.indexOf("StrTokenizer[not tokenized yet]");
        java.io.Writer writer25 = strBuilder19.asWriter();
        char[] charArray26 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.insert((int) (short) 0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendPadding((int) (short) 1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder29.appendNull();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertArrayEquals(charArray26, new char[] { 'h', 'i', '!', '$', '\r', '\n', '\r', '\n' });
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("Hi!Hi!hi!nullhi!hi!Hi!", 21, "Llun0\n\r0.1\n #0.1-", true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Hi!Hi!hi!nullhi!hi!HiLlun0\n\r0.1\n #0.1-!" + "'", str4, "Hi!Hi!hi!nullhi!hi!HiLlun0\n\r0.1\n #0.1-!");
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String str2 = strTokenizer1.nextToken();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray19 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str20 = org.apache.commons.lang3.text.WordUtils.initials("", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher28);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer32 = null;
        boolean boolean33 = strSubstitutor31.replaceIn(stringBuffer32);
        java.lang.String str35 = strSubstitutor31.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strSubstitutor31.getValueDelimiterMatcher();
        char[] charArray42 = new char[] { '$', '#', '#', '4', ' ' };
        int int44 = strMatcher36.isMatch(charArray42, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher28, strMatcher36);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder12.appendln(charArray19, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, (float) (-1));
        strBuilder11.appendTo((java.lang.Appendable) strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder11.replace((int) (byte) 10, 10, "I!");
        int int60 = strBuilder11.length();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder11.insert((int) '#', 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 35");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertArrayEquals(charArray42, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 27 + "'", int60 == 27);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        int int38 = strBuilder36.lastIndexOf("Strtokenizer[not tokenized yet]");
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.append(charBuffer39, 100, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.reset(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer63 = null;
        boolean boolean64 = strSubstitutor62.replaceIn(stringBuffer63);
        java.lang.String str66 = strSubstitutor62.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strSubstitutor62.getValueDelimiterMatcher();
        char[] charArray73 = new char[] { '$', '#', '#', '4', ' ' };
        int int75 = strMatcher67.isMatch(charArray73, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher59, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder43.appendln(charArray50, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder36.appendln(strBuilder79);
        char[] charArray88 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray88);
        int int90 = strTokenizer89.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer89.reset("hi!");
        boolean boolean93 = strTokenizer89.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder79.appendAll((java.util.Iterator<java.lang.String>) strTokenizer89);
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder79.appendNewLine();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray88);
        org.junit.Assert.assertArrayEquals(charArray88, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray20 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str21 = org.apache.commons.lang3.text.WordUtils.initials("", charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer14.reset(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher29);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer33 = null;
        boolean boolean34 = strSubstitutor32.replaceIn(stringBuffer33);
        java.lang.String str36 = strSubstitutor32.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strSubstitutor32.getValueDelimiterMatcher();
        char[] charArray43 = new char[] { '$', '#', '#', '4', ' ' };
        int int45 = strMatcher37.isMatch(charArray43, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher29, strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder13.appendln(charArray20, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean70 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendWithSeparators((java.lang.Object[]) charSequenceArray69, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray69);
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        boolean boolean75 = strSubstitutor0.replaceIn(stringBuffer74);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor77 = strSubstitutor0.setVariableSuffix("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertArrayEquals(charArray20, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertArrayEquals(charArray43, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strSubstitutor77);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer0.reset(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher15);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer19 = null;
        boolean boolean20 = strSubstitutor18.replaceIn(stringBuffer19);
        java.lang.String str22 = strSubstitutor18.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strSubstitutor18.getValueDelimiterMatcher();
        char[] charArray29 = new char[] { '$', '#', '#', '4', ' ' };
        int int31 = strMatcher23.isMatch(charArray29, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ');
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale8);
        java.util.Locale locale11 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale11);
        extendedMessageFormat12.applyPattern("");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat15 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat9, (java.text.Format) extendedMessageFormat12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int19 = strBuilder17.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        strBuilder21.getChars(0, 0, charArray30, (int) (short) 1);
        char[] charArray38 = strBuilder17.getChars(charArray30);
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.append(charBuffer39);
        boolean boolean41 = extendedMessageFormat9.equals((java.lang.Object) charBuffer39);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat42 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat2, (java.text.Format) extendedMessageFormat9);
        java.text.Format[] formatArray43 = extendedMessageFormat9.getFormats();
        java.lang.String str44 = extendedMessageFormat9.toPattern();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat46.applyPattern("");
        extendedMessageFormat46.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer54 = null;
        boolean boolean55 = strSubstitutor53.replaceIn(stringBuffer54);
        java.lang.String str57 = strSubstitutor53.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer58 = null;
        java.lang.String str59 = strSubstitutor53.replace(stringBuffer58);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = strSubstitutor53.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor63 = strSubstitutor61.setValueDelimiter("hi!");
        boolean boolean64 = extendedMessageFormat52.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat65 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat46, (java.text.Format) extendedMessageFormat52);
        java.util.Locale locale66 = extendedMessageFormat46.getLocale();
        java.lang.String str67 = extendedMessageFormat46.toPattern();
        java.util.Locale locale68 = extendedMessageFormat46.getLocale();
        extendedMessageFormat9.setLocale(locale68);
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat72.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatByArgumentIndex(3, (java.text.Format) extendedMessageFormat72);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertArrayEquals(formatArray43, new java.text.Format[] {});
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#" + "'", str44, "#");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strSubstitutor61);
        org.junit.Assert.assertNotNull(strSubstitutor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "de_DE");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "de_DE");
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor0.replace(stringBuffer8);
        java.lang.StringBuffer stringBuffer10 = null;
        boolean boolean11 = strSubstitutor0.replaceIn(stringBuffer10);
        strSubstitutor0.setPreserveEscapes(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        char[] charArray82 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str83 = org.apache.commons.lang3.text.WordUtils.initials("", charArray82);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder74.replaceFirst(strMatcher84, "S");
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder74.append((long) 7);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder91.setNullText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder91.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer94, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder91.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder99 = strBuilder74.insert(21, (java.lang.Object) strBuilder91);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertArrayEquals(charArray82, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer1.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setTrimmerMatcher(strMatcher4);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "null" + "'", str3, "null");
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer5);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln("");
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.appendln(charArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder1.setCharAt((int) '$', '$');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 36");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Hi!" + "'", str12, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer0.reset(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher15);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer19 = null;
        boolean boolean20 = strSubstitutor18.replaceIn(stringBuffer19);
        java.lang.String str22 = strSubstitutor18.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strSubstitutor18.getValueDelimiterMatcher();
        char[] charArray29 = new char[] { '$', '#', '#', '4', ' ' };
        int int31 = strMatcher23.isMatch(charArray29, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15, strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "hi!a");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strMatcher33);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.append(' ');
        java.lang.Class<?> wildcardClass79 = strBuilder74.getClass();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("hI!", 0, "# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hI!" + "'", str4, "hI!");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str30 = org.apache.commons.lang3.text.WordUtils.initials("", charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder22.appendln(charArray29, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder19.append((java.lang.Object) strBuilder58);
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln(stringBuffer63);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.insert((int) (byte) -1, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        java.lang.String str2 = org.apache.commons.lang3.text.WordUtils.wrap("hi!\r\n", (int) (short) 10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!\r\n" + "'", str2, "hi!\r\n");
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray54 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str55 = org.apache.commons.lang3.text.WordUtils.initials("", charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, strMatcher57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer48.reset(charArray54);
        strBuilder45.getChars(0, 0, charArray54, (int) (short) 1);
        java.lang.String str63 = strBuilder45.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.appendNewLine();
        java.io.Reader reader65 = strBuilder45.asReader();
        strBuilder43.appendTo((java.lang.Appendable) strBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder43.append((double) 10.0f);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertArrayEquals(charArray54, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "i!" + "'", str63, "i!");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strSubstitutor0.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder6 = null;
        boolean boolean7 = strSubstitutor0.replaceIn(stringBuilder6);
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor0.replace(stringBuffer8);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strSubstitutor0.getVariableSuffixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray18 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str19 = org.apache.commons.lang3.text.WordUtils.initials("", charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer12.reset(charArray18);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher27);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer31 = null;
        boolean boolean32 = strSubstitutor30.replaceIn(stringBuffer31);
        java.lang.String str34 = strSubstitutor30.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strSubstitutor30.getValueDelimiterMatcher();
        char[] charArray41 = new char[] { '$', '#', '#', '4', ' ' };
        int int43 = strMatcher35.isMatch(charArray41, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher27, strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder11.appendln(charArray18, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln(stringBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder52.ensureCapacity((int) (byte) 0);
        boolean boolean59 = strSubstitutor0.replaceIn(strBuilder56, 32, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder56.replace(12, 4, "null");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertArrayEquals(charArray18, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertArrayEquals(charArray41, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder2.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strBuilder2.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strTokenizer6);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("null");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat4.applyPattern("");
        extendedMessageFormat4.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer12 = null;
        boolean boolean13 = strSubstitutor11.replaceIn(stringBuffer12);
        java.lang.String str15 = strSubstitutor11.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer16 = null;
        java.lang.String str17 = strSubstitutor11.replace(stringBuffer16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor11.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor19.setValueDelimiter("hi!");
        boolean boolean22 = extendedMessageFormat10.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat23 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat4, (java.text.Format) extendedMessageFormat10);
        java.util.Locale locale24 = extendedMessageFormat4.getLocale();
        extendedMessageFormat2.setLocale(locale24);
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor27 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer28 = null;
        boolean boolean31 = strSubstitutor27.replaceIn(stringBuffer28, 0, (int) (byte) 1);
        java.lang.String str33 = strSubstitutor27.replace("-1.0# \n1.0\r\n");
        strSubstitutor27.setPreserveEscapes(false);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator36 = extendedMessageFormat26.formatToCharacterIterator((java.lang.Object) strSubstitutor27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang3.text.StrSubstitutor cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1.0# \n1.0\r\n" + "'", str33, "-1.0# \n1.0\r\n");
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        java.lang.String str5 = org.apache.commons.lang3.text.WordUtils.wrap("a", 32, "HI!\r\n", true, "#Hi!Hi!hi!nullhi!hi!Hi! Hi!Hi!hi!nullhi!hi!Hi!\nHi!Hi!hi!nullhi!hi!Hi!-Hi!Hi!hi!nullhi!hi!Hi!1Hi!Hi!hi!nullhi!hi!Hi!.Hi!Hi!hi!nullhi!hi!Hi!0Hi!Hi!hi!nullhi!hi!Hi!\rHi!Hi!hi!nullhi!hi!Hi!\nHi!Hi!hi!nullhi!hi!Hi!3Hi!Hi!hi!nullhi!hi!Hi!2Hi!Hi!hi!nullhi!hi!Hi!iHi!Hi!hi!nullhi!hi!Hi!iHi!Hi!hi!nullhi!hi!Hi!i");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "a" + "'", str5, "a");
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.deleteFirst('4');
        int int46 = strBuilder36.indexOf(' ', (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder36.appendNull();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        int int3 = strBuilder2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher22);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer26 = null;
        boolean boolean27 = strSubstitutor25.replaceIn(stringBuffer26);
        java.lang.String str29 = strSubstitutor25.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strSubstitutor25.getValueDelimiterMatcher();
        char[] charArray36 = new char[] { '$', '#', '#', '4', ' ' };
        int int38 = strMatcher30.isMatch(charArray36, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher22, strMatcher30);
        int int41 = strMatcher6.isMatch(charArray13, 0);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer43 = null;
        boolean boolean44 = strSubstitutor42.replaceIn(stringBuffer43);
        java.lang.String str46 = strSubstitutor42.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer47 = null;
        java.lang.String str48 = strSubstitutor42.replace(stringBuffer47);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor50 = strSubstitutor42.setValueDelimiter("null");
        char[] charArray51 = null;
        java.lang.String str54 = strSubstitutor42.replace(charArray51, 100, (-1));
        java.lang.StringBuffer stringBuffer55 = null;
        boolean boolean56 = strSubstitutor42.replaceIn(stringBuffer55);
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strSubstitutor42.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer62.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray73 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str74 = org.apache.commons.lang3.text.WordUtils.initials("", charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer67.reset(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer64.reset(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray73);
        java.lang.String str81 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray73);
        java.lang.String str83 = org.apache.commons.lang3.text.WordUtils.capitalize("", charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, "StrTokenizer[Hi!]");
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer85.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher57, strMatcher86);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder2.getChars(1, (int) '4', charArray13, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertArrayEquals(charArray36, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strSubstitutor50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strMatcher80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str81, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(strMatcher86);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert((int) (short) 100, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(6);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray12 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str13 = org.apache.commons.lang3.text.WordUtils.initials("", charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer6.reset(charArray12);
        strBuilder3.getChars(0, 0, charArray12, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        strBuilder21.getChars(0, 0, charArray30, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray30);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer46 = null;
        java.lang.String str47 = strSubstitutor41.replace(stringBuffer46);
        java.lang.String str49 = strSubstitutor41.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = strSubstitutor41.setVariablePrefix("null");
        java.lang.String str53 = strSubstitutor41.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = strSubstitutor41.setValueDelimiterMatcher(strMatcher54);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor56 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer57 = null;
        boolean boolean58 = strSubstitutor56.replaceIn(stringBuffer57);
        java.lang.String str60 = strSubstitutor56.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer61 = null;
        java.lang.String str62 = strSubstitutor56.replace(stringBuffer61);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor64 = strSubstitutor56.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor66 = strSubstitutor64.setValueDelimiter("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strSubstitutor66.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher54, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder3.deleteFirst(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder69.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder1.appendln(strBuilder69);
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertArrayEquals(charArray12, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "null" + "'", str49, "null");
        org.junit.Assert.assertNotNull(strSubstitutor51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strSubstitutor55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strSubstitutor64);
        org.junit.Assert.assertNotNull(strSubstitutor66);
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("lLUN0\n\r0.1\n #0.1-");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!hi!Hi!hI!i!nullhi!hi!Hi!");
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("Sty", "Hi!");
        char[] charArray57 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str58 = org.apache.commons.lang3.text.WordUtils.initials("", charArray57);
        java.lang.String str59 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray57);
        java.lang.String str60 = org.apache.commons.lang3.text.WordUtils.capitalize("Hi!", charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.append(charArray57);
        java.lang.String str62 = strBuilder61.getNewLineText();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertArrayEquals(charArray57, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Hi!" + "'", str59, "Hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Hi!" + "'", str60, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.appendln((double) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.deleteFirst('4');
        java.lang.String str44 = strBuilder43.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendFixedWidthPadRight(32, 5, 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.trim();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "# \n-1.0\r\n" + "'", str44, "# \n-1.0\r\n");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor8.setVariablePrefix('a');
        char char11 = strSubstitutor10.getEscapeChar();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertTrue("'" + char11 + "' != '" + '$' + "'", char11 == '$');
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getFormatter();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        java.lang.String str6 = extendedMessageFormat5.toPattern();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat8.applyPattern("");
        extendedMessageFormat8.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer16 = null;
        boolean boolean17 = strSubstitutor15.replaceIn(stringBuffer16);
        java.lang.String str19 = strSubstitutor15.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer20 = null;
        java.lang.String str21 = strSubstitutor15.replace(stringBuffer20);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor23 = strSubstitutor15.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = strSubstitutor23.setValueDelimiter("hi!");
        boolean boolean26 = extendedMessageFormat14.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat27 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat8, (java.text.Format) extendedMessageFormat14);
        java.util.Locale locale28 = extendedMessageFormat8.getLocale();
        extendedMessageFormat5.setLocale(locale28);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat30 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) compositeFormat2, (java.text.Format) extendedMessageFormat5);
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = compositeFormat2.parseObject("4", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strSubstitutor23);
        org.junit.Assert.assertNotNull(strSubstitutor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "de_DE");
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert(5, (float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder50.replaceFirst("StrTokenizer[Hi!]", "i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int64 = strBuilder62.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.reverse();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder60.append((java.lang.CharSequence) strBuilder62, (int) '#', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor8.setValueDelimiter("hi!");
        char[] charArray16 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str17 = org.apache.commons.lang3.text.WordUtils.initials("", charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor10.setValueDelimiterMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor10.setVariableSuffix("\n");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertArrayEquals(charArray16, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer3 = null;
        boolean boolean4 = strSubstitutor2.replaceIn(stringBuffer3);
        java.lang.String str6 = strSubstitutor2.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str8 = strSubstitutor2.replace(stringBuffer7);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor2.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setValueDelimiter("hi!");
        boolean boolean13 = extendedMessageFormat1.equals((java.lang.Object) "hi!");
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray16 = extendedMessageFormat1.parse("trtokenize", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        java.io.Reader reader12 = strBuilder11.asReader();
        java.util.stream.IntStream intStream13 = strBuilder11.chars();
        java.lang.String str15 = strBuilder11.substring(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator(' ', 27);
        int int20 = strBuilder18.lastIndexOf("Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.append((float) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.append((double) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) 3);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!Hi!hi!nullhi!hi!Hi!" + "'", str15, "hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 22 + "'", int20 == 22);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder19.deleteFirst('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray34 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str35 = org.apache.commons.lang3.text.WordUtils.initials("", charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer28.reset(charArray34);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher43);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor46 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer47 = null;
        boolean boolean48 = strSubstitutor46.replaceIn(stringBuffer47);
        java.lang.String str50 = strSubstitutor46.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strSubstitutor46.getValueDelimiterMatcher();
        char[] charArray57 = new char[] { '$', '#', '#', '4', ' ' };
        int int59 = strMatcher51.isMatch(charArray57, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, strMatcher43, strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder27.appendln(charArray34, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder69.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder74 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder69.appendln(stringBuilder74, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.appendFixedWidthPadLeft(13, (int) (byte) 100, '#');
        strBuilder26.appendTo((java.lang.Appendable) strBuilder77);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder77.clear();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertArrayEquals(charArray34, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertArrayEquals(charArray57, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        java.lang.CharSequence charSequence0 = null;
        java.util.Formatter formatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter6 = org.apache.commons.lang3.text.FormattableUtils.append(charSequence0, formatter1, (int) (byte) 100, 32, 9, '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray16 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str17 = org.apache.commons.lang3.text.WordUtils.initials("", charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer10.reset(charArray16);
        strBuilder7.getChars(0, 0, charArray16, (int) (short) 1);
        java.lang.String str25 = strBuilder7.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder7.appendNewLine();
        java.lang.String str27 = strBuilder26.getNullText();
        java.lang.String str28 = strBuilder26.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder5.appendln(strBuilder26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder26.append((long) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertArrayEquals(charArray16, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "i!" + "'", str25, "i!");
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!\r\n" + "'", str28, "hi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale8);
        java.util.Locale locale11 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale11);
        extendedMessageFormat12.applyPattern("");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat15 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat9, (java.text.Format) extendedMessageFormat12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int19 = strBuilder17.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        strBuilder21.getChars(0, 0, charArray30, (int) (short) 1);
        char[] charArray38 = strBuilder17.getChars(charArray30);
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.append(charBuffer39);
        boolean boolean41 = extendedMessageFormat9.equals((java.lang.Object) charBuffer39);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat42 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat2, (java.text.Format) extendedMessageFormat9);
        java.lang.String str43 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray44 = extendedMessageFormat9.getFormatsByArgumentIndex();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "#" + "'", str43, "#");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertArrayEquals(formatArray44, new java.text.Format[] {});
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        java.util.stream.IntStream intStream75 = strBuilder41.codePoints();
        java.lang.StringBuffer stringBuffer76 = strBuilder41.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder41.setNewLineText("4");
        java.lang.String str79 = strBuilder41.getNewLineText();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(stringBuffer76);
        org.junit.Assert.assertEquals(stringBuffer76.toString(), "# \nhi!hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "4" + "'", str79, "4");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "hi!");
        java.lang.String str11 = strTokenizer10.nextToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Hi!" + "'", str8, "Hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4#aa" + "'", str11, "4#aa");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("", "# \nhi!\r\n-1.0\r\n");
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setNewLineText("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.setLength((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence51 = strBuilder48.subSequence(27, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 52");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.uncapitalize("strTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "strTokenizer[not tokenized yet]" + "'", str1, "strTokenizer[not tokenized yet]");
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = extendedMessageFormat2.parse("sTRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        char char13 = strSubstitutor0.getEscapeChar();
        java.lang.StringBuilder stringBuilder14 = null;
        boolean boolean15 = strSubstitutor0.replaceIn(stringBuilder14);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor0.setVariableSuffix('a');
        char char18 = strSubstitutor17.getEscapeChar();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + char13 + "' != '" + '$' + "'", char13 == '$');
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertTrue("'" + char18 + "' != '" + '$' + "'", char18 == '$');
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        int int36 = strBuilder35.size();
        int int37 = strBuilder35.length();
        java.lang.StringBuffer stringBuffer38 = strBuilder35.toStringBuffer();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 9 + "'", int36 == 9);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 9 + "'", int37 == 9);
        org.junit.Assert.assertNotNull(stringBuffer38);
        org.junit.Assert.assertEquals(stringBuffer38.toString(), "hi!\r\ni!\r\n");
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("-1.0# \n");
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor1 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer2 = null;
        boolean boolean3 = strSubstitutor1.replaceIn(stringBuffer2);
        java.lang.String str5 = strSubstitutor1.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer6 = null;
        java.lang.String str7 = strSubstitutor1.replace(stringBuffer6);
        java.lang.String str9 = strSubstitutor1.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor1.setVariablePrefix("null");
        java.lang.String str13 = strSubstitutor1.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor1.setValueDelimiterMatcher(strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("H", strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoredChar(' ');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "null" + "'", str9, "null");
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strSubstitutor15);
        org.junit.Assert.assertNotNull(strTokenizer18);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.lastIndexOf('4', 26);
        int int23 = strBuilder19.capacity();
        java.lang.String str24 = strBuilder19.getNewLineText();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 35 + "'", int23 == 35);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        java.util.stream.IntStream intStream75 = strBuilder41.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder41.setNullText("Strtokenizer[not\r\ntokenized\r\nyet]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = strBuilder41.substring((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        int int2 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        java.nio.CharBuffer charBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder1.append(charBuffer20, 32, (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNullText("# \n-1.0\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.clear();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.replaceFirst(strMatcher27, "# \nhi!\r\n-1.0\r\n");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendSeparator("# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendSeparator("# \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendSeparator('$', 4);
        java.util.Locale locale52 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.text.Format[] formatArray55 = extendedMessageFormat53.getFormatsByArgumentIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.appendFixedWidthPadRight((java.lang.Object) formatArray55, (int) '4', 'a');
        boolean boolean60 = strBuilder58.contains('$');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertArrayEquals(formatArray55, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        strBuilder13.getChars(0, 0, charArray22, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendln('$');
        boolean boolean33 = strBuilder31.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray41 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str42 = org.apache.commons.lang3.text.WordUtils.initials("", charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher50);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer54 = null;
        boolean boolean55 = strSubstitutor53.replaceIn(stringBuffer54);
        java.lang.String str57 = strSubstitutor53.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strSubstitutor53.getValueDelimiterMatcher();
        char[] charArray64 = new char[] { '$', '#', '#', '4', ' ' };
        int int66 = strMatcher58.isMatch(charArray64, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher50, strMatcher58);
        int int69 = strBuilder31.indexOf(strMatcher50, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        java.util.List<java.lang.String> strList72 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        java.nio.CharBuffer charBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder11.append(charBuffer75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.insert(47, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 47");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertArrayEquals(charArray41, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertArrayEquals(charArray64, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        int int24 = strBuilder19.indexOf("StrTokenizer[not tokenized yet]");
        java.io.Writer writer25 = strBuilder19.asWriter();
        char[] charArray26 = strBuilder19.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder19.insert((int) (short) 0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendPadding((int) (short) 1, '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer34.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer35.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray46 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str47 = org.apache.commons.lang3.text.WordUtils.initials("", charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer40.reset(charArray46);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer37.reset(charArray46);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder32.replaceAll(strMatcher53, "hi!$\r\ni!#");
        java.lang.String str56 = strBuilder32.toString();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(writer25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertArrayEquals(charArray26, new char[] { 'h', 'i', '!', '$', '\r', '\n', '\r', '\n' });
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertArrayEquals(charArray46, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "truehi!$\r\n\r\n$" + "'", str56, "truehi!$\r\n\r\n$");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer4, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer9.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray21 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str22 = org.apache.commons.lang3.text.WordUtils.initials("", charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer15.reset(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer12.reset(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        java.lang.String str29 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer4.reset(charArray21);
        java.lang.String str32 = strTokenizer31.nextToken();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray40 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str41 = org.apache.commons.lang3.text.WordUtils.initials("", charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer34.reset(charArray40);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher49);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor52 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer53 = null;
        boolean boolean54 = strSubstitutor52.replaceIn(stringBuffer53);
        java.lang.String str56 = strSubstitutor52.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strSubstitutor52.getValueDelimiterMatcher();
        char[] charArray63 = new char[] { '$', '#', '#', '4', ' ' };
        int int65 = strMatcher57.isMatch(charArray63, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher49, strMatcher57);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder33.appendln(charArray40, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray86 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str87 = org.apache.commons.lang3.text.WordUtils.initials("", charArray86);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer80.reset(charArray86);
        strBuilder77.getChars(0, 0, charArray86, (int) (short) 1);
        char[] charArray94 = strBuilder69.getChars(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer31.reset(charArray94);
        org.apache.commons.lang3.text.StrMatcher strMatcher97 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = strTokenizer95.setTrimmerMatcher(strMatcher97);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertArrayEquals(charArray21, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str29, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "4#aa" + "'", str32, "4#aa");
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertArrayEquals(charArray40, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertArrayEquals(charArray63, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertArrayEquals(charArray86, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertArrayEquals(charArray94, new char[] { '-', '1', '.', '0', '#', ' ', '\n' });
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(strMatcher97);
        org.junit.Assert.assertNotNull(strTokenizer98);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight((int) 'a', (int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        java.lang.Object[] objArray19 = new java.lang.Object[] { "StrTokenizer[not tokenized yet]" };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append("h", objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray31 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str32 = org.apache.commons.lang3.text.WordUtils.initials("", charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer25.reset(charArray31);
        strBuilder22.getChars(0, 0, charArray31, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.appendln('$');
        boolean boolean42 = strBuilder40.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.deleteAll(strMatcher44);
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.deleteFirst(strMatcher47);
        boolean boolean49 = strBuilder20.equals((java.lang.Object) strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder20.append(0);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertArrayEquals(charArray31, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        char[] charArray5 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str6 = org.apache.commons.lang3.text.WordUtils.initials("", charArray5);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = null;
        boolean boolean15 = strSubstitutor11.replaceIn(strBuilder12, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = strSubstitutor11.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strSubstitutor17.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer10.setDelimiterMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer22.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.initials("", charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer27.reset(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer24.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer10.setDelimiterMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer41.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer41.set(" \r\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertArrayEquals(charArray5, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSubstitutor17);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertArrayEquals(charArray33, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert(5, (float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.append(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int63 = strBuilder61.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray74 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str75 = org.apache.commons.lang3.text.WordUtils.initials("", charArray74);
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer68.reset(charArray74);
        strBuilder65.getChars(0, 0, charArray74, (int) (short) 1);
        char[] charArray82 = strBuilder61.getChars(charArray74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer85 = new org.apache.commons.lang3.text.StrTokenizer(charArray82, ' ', '4');
        // The following exception was thrown during execution in test generation
        try {
            strBuilder57.getChars(27, 0, charArray82, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertArrayEquals(charArray74, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertArrayEquals(charArray82, new char[] { 'h', 'i', '!', 'a' });
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup0 = org.apache.commons.lang3.text.StrLookup.noneLookup();
        org.junit.Assert.assertNotNull(wildcardStrLookup0);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 1);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup7 = strSubstitutor0.getVariableResolver();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(wildcardStrLookup7);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer7.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray19 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str20 = org.apache.commons.lang3.text.WordUtils.initials("", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer13.reset(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer10.reset(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        java.lang.String str27 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder2.appendAll((java.util.Iterator<java.lang.String>) strTokenizer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder2.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder2.delete((int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str27, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor0.setValueDelimiterMatcher(strMatcher8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor9.setVariableSuffix('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = strSubstitutor9.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = strSubstitutor9.setVariableSuffix("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strSubstitutor9.getVariablePrefixMatcher();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNotNull(strSubstitutor13);
        org.junit.Assert.assertNotNull(strSubstitutor15);
        org.junit.Assert.assertNotNull(strMatcher16);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        extendedMessageFormat1.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer9 = null;
        boolean boolean10 = strSubstitutor8.replaceIn(stringBuffer9);
        java.lang.String str12 = strSubstitutor8.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer13 = null;
        java.lang.String str14 = strSubstitutor8.replace(stringBuffer13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor8.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor16.setValueDelimiter("hi!");
        boolean boolean19 = extendedMessageFormat7.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat20 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat1, (java.text.Format) extendedMessageFormat7);
        java.util.Locale locale21 = extendedMessageFormat1.getLocale();
        java.lang.String str22 = extendedMessageFormat1.toPattern();
        java.util.Locale locale23 = extendedMessageFormat1.getLocale();
        java.util.Locale locale24 = extendedMessageFormat1.getLocale();
        java.text.Format[] formatArray25 = extendedMessageFormat1.getFormatsByArgumentIndex();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "de_DE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertArrayEquals(formatArray25, new java.text.Format[] {});
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder2.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.StringBuffer stringBuffer11 = null;
        java.lang.String str12 = strSubstitutor0.replace(stringBuffer11);
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup13 = strSubstitutor0.getVariableResolver();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = strSubstitutor0.replace("hI!$\r\n# \n", 52, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(wildcardStrLookup13);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        java.lang.String str3 = strTokenizer1.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.reset("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setIgnoredChar('#');
        java.lang.String str8 = strTokenizer7.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "null" + "'", str3, "null");
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int3 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher23);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer27 = null;
        boolean boolean28 = strSubstitutor26.replaceIn(stringBuffer27);
        java.lang.String str30 = strSubstitutor26.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strSubstitutor26.getValueDelimiterMatcher();
        char[] charArray37 = new char[] { '$', '#', '#', '4', ' ' };
        int int39 = strMatcher31.isMatch(charArray37, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher23, strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.appendln(charArray14, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln(stringBuilder49);
        java.util.stream.IntStream intStream51 = strBuilder50.codePoints();
        java.lang.StringBuilder stringBuilder52 = strBuilder50.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder6.appendln(stringBuilder52, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder4.append(stringBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append("hi!hi!Hi!hi!nullhi!hi!Hi!# \nhi!\r\n");
        java.nio.CharBuffer charBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder56.append(charBuffer59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder56.appendNull();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertArrayEquals(charArray37, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(intStream51);
        org.junit.Assert.assertNotNull(stringBuilder52);
        org.junit.Assert.assertEquals(stringBuilder52.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer4.setTrimmerMatcher(strMatcher20);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer4.getIgnoredMatcher();
        java.lang.String str23 = strTokenizer4.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4#aa" + "'", str23, "4#aa");
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "hi!\r\n");
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("10", charArray6);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "10" + "'", str11, "10");
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("Hi!$\r\n100.0", "hi!a");
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer2.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer0.reset(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher15);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer19 = null;
        boolean boolean20 = strSubstitutor18.replaceIn(stringBuffer19);
        java.lang.String str22 = strSubstitutor18.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strSubstitutor18.getValueDelimiterMatcher();
        char[] charArray29 = new char[] { '$', '#', '#', '4', ' ' };
        int int31 = strMatcher23.isMatch(charArray29, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "Strtokenizer[not\r\ntokenized\r\nyet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterChar('a');
        java.lang.String str37 = strTokenizer36.previousToken();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.lang.String str2 = org.apache.commons.lang3.text.WordUtils.wrap("hi!hi!Hi!hI!i!nullhi!hi!Hi!", (int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!hi!Hi!hI!i!nullhi!hi!Hi!" + "'", str2, "hi!hi!Hi!hI!i!nullhi!hi!Hi!");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setNewLineText("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendPadding(9, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.append((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendPadding((int) '4', '4');
        int int55 = strBuilder51.length();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 71 + "'", int55 == 71);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("trtokenize", 'i', '4');
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteAll(strMatcher23);
        int int25 = strBuilder24.length();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 6 + "'", int25 == 6);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("Hi!$\r\n100.0", "hi!a");
        boolean boolean3 = strTokenizer2.isEmptyTokenAsNull();
        java.lang.String str4 = strTokenizer2.next();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Hi!$\r\n100.0" + "'", str4, "Hi!$\r\n100.0");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.deleteAll(strMatcher23);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder19.deleteFirst(strMatcher26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strBuilder19.asTokenizer();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer3 = null;
        boolean boolean4 = strSubstitutor2.replaceIn(stringBuffer3);
        java.lang.String str6 = strSubstitutor2.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str8 = strSubstitutor2.replace(stringBuffer7);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor2.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setValueDelimiter("hi!");
        boolean boolean13 = extendedMessageFormat1.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray14 = extendedMessageFormat1.getFormatsByArgumentIndex();
        extendedMessageFormat1.applyPattern("StrTokenizer[Hi!]");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat19.applyPattern("");
        extendedMessageFormat19.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer27 = null;
        boolean boolean28 = strSubstitutor26.replaceIn(stringBuffer27);
        java.lang.String str30 = strSubstitutor26.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer31 = null;
        java.lang.String str32 = strSubstitutor26.replace(stringBuffer31);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = strSubstitutor26.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor34.setValueDelimiter("hi!");
        boolean boolean37 = extendedMessageFormat25.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat38 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat19, (java.text.Format) extendedMessageFormat25);
        java.util.Locale locale39 = extendedMessageFormat19.getLocale();
        java.lang.String str40 = extendedMessageFormat19.toPattern();
        java.util.Locale locale41 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!hi!Hi!hi!nullhi!hi!Hi!# \nhi!\r\n", locale41);
        extendedMessageFormat1.setLocale(locale41);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertArrayEquals(formatArray14, new java.text.Format[] {});
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strSubstitutor34);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "de_DE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "de_DE");
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln("");
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray9);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor15 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = null;
        boolean boolean19 = strSubstitutor15.replaceIn(strBuilder16, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor15.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strSubstitutor21.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer14.setDelimiterMatcher(strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer25.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer26.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer28.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray37 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str38 = org.apache.commons.lang3.text.WordUtils.initials("", charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer31.reset(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer28.reset(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer14.setDelimiterMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer45.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder1.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer45, "HI!\r\n");
        char[] charArray55 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str56 = org.apache.commons.lang3.text.WordUtils.initials("", charArray55);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, strMatcher58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor61 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = null;
        boolean boolean65 = strSubstitutor61.replaceIn(strBuilder62, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor67 = strSubstitutor61.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strSubstitutor67.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer60.setDelimiterMatcher(strMatcher68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer71.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer72.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer74.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray83 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str84 = org.apache.commons.lang3.text.WordUtils.initials("", charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray83, strMatcher86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer77.reset(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer74.reset(charArray83);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer60.setDelimiterMatcher(strMatcher90);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder49.replaceFirst(strMatcher90, "Hi!Hi!hi!nullhi!hi!Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder93.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder94.reverse();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertArrayEquals(charArray37, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertArrayEquals(charArray55, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strSubstitutor67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertArrayEquals(charArray83, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = null;
        boolean boolean8 = strSubstitutor0.replaceIn(strBuilder7);
        boolean boolean9 = strSubstitutor0.isEnableSubstitutionInVariables();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray20 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str21 = org.apache.commons.lang3.text.WordUtils.initials("", charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer14.reset(charArray20);
        strBuilder11.getChars(0, 0, charArray20, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder11.appendln('$');
        boolean boolean31 = strBuilder29.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.appendNewLine();
        int int34 = strBuilder29.indexOf("StrTokenizer[not tokenized yet]");
        java.io.Writer writer35 = strBuilder29.asWriter();
        java.lang.String str36 = strSubstitutor0.replace((java.lang.CharSequence) strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertArrayEquals(charArray20, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!$\r\n\r\n" + "'", str36, "hi!$\r\n\r\n");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer22 = null;
        boolean boolean23 = strSubstitutor21.replaceIn(stringBuffer22);
        java.lang.String str25 = strSubstitutor21.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor21.getValueDelimiterMatcher();
        char[] charArray32 = new char[] { '$', '#', '#', '4', ' ' };
        int int34 = strMatcher26.isMatch(charArray32, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendln(charArray9, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.appendln(stringBuilder49, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder1.append(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder55.appendNewLine();
        char[] charArray58 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        java.lang.Object obj60 = strTokenizer59.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher61 = strTokenizer59.getDelimiterMatcher();
        int int62 = strBuilder55.indexOf(strMatcher61);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertArrayEquals(charArray32, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertArrayEquals(charArray58, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setVariablePrefix("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray24 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str25 = org.apache.commons.lang3.text.WordUtils.initials("", charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer18.reset(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher33);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer37 = null;
        boolean boolean38 = strSubstitutor36.replaceIn(stringBuffer37);
        java.lang.String str40 = strSubstitutor36.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strSubstitutor36.getValueDelimiterMatcher();
        char[] charArray47 = new char[] { '$', '#', '#', '4', ' ' };
        int int49 = strMatcher41.isMatch(charArray47, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder17.appendln(charArray24, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.delete((int) (short) 1, (int) (byte) 10);
        java.lang.String str63 = strSubstitutor14.replace((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendFixedWidthPadRight((int) (byte) 100, (-1), '#');
        int int70 = strBuilder62.lastIndexOf('4', 27);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder62.replaceFirst(strMatcher71, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder73.append("StrTokenizer[Hi!]");
        boolean boolean79 = strBuilder77.contains('4');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertArrayEquals(charArray24, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertArrayEquals(charArray47, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#" + "'", str63, "#");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer32.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strTokenizer32, (-1), ' ');
        java.lang.String str39 = strBuilder38.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray47 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str48 = org.apache.commons.lang3.text.WordUtils.initials("", charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer41.reset(charArray47);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher56);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor59 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer60 = null;
        boolean boolean61 = strSubstitutor59.replaceIn(stringBuffer60);
        java.lang.String str63 = strSubstitutor59.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = strSubstitutor59.getValueDelimiterMatcher();
        char[] charArray70 = new char[] { '$', '#', '#', '4', ' ' };
        int int72 = strMatcher64.isMatch(charArray70, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, strMatcher56, strMatcher64);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder40.appendln(charArray47, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendln((double) (byte) -1);
        java.io.Reader reader82 = strBuilder81.asReader();
        int int83 = strBuilder38.readFrom((java.lang.Readable) reader82);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertArrayEquals(charArray47, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(strMatcher64);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertArrayEquals(charArray70, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(reader82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 9 + "'", int83 == 9);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) (short) 0);
        java.lang.StringBuilder stringBuilder52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(stringBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder49.replaceAll('4', 'i');
        boolean boolean58 = strBuilder56.endsWith("1 t");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append((long) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.append((long) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.append(32);
        int int51 = strBuilder47.indexOf("\n");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.String str21 = strBuilder20.getNullText();
        java.lang.String str22 = strBuilder20.toString();
        java.lang.String str23 = strBuilder20.toString();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!\r\n" + "'", str22, "hi!\r\n");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!\r\n" + "'", str23, "hi!\r\n");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer3 = null;
        boolean boolean4 = strSubstitutor2.replaceIn(stringBuffer3);
        java.lang.String str6 = strSubstitutor2.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str8 = strSubstitutor2.replace(stringBuffer7);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor2.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setValueDelimiter("hi!");
        boolean boolean13 = extendedMessageFormat1.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray14 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Locale locale15 = extendedMessageFormat1.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang3.text.ExtendedMessageFormat("null");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat19.applyPattern("");
        extendedMessageFormat19.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer27 = null;
        boolean boolean28 = strSubstitutor26.replaceIn(stringBuffer27);
        java.lang.String str30 = strSubstitutor26.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer31 = null;
        java.lang.String str32 = strSubstitutor26.replace(stringBuffer31);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = strSubstitutor26.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor34.setValueDelimiter("hi!");
        boolean boolean37 = extendedMessageFormat25.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat38 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat19, (java.text.Format) extendedMessageFormat25);
        java.util.Locale locale39 = extendedMessageFormat19.getLocale();
        extendedMessageFormat17.setLocale(locale39);
        extendedMessageFormat1.setLocale(locale39);
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat43.applyPattern("");
        extendedMessageFormat43.applyPattern("hi!");
        java.text.Format[] formatArray48 = extendedMessageFormat43.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertArrayEquals(formatArray14, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strSubstitutor34);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertArrayEquals(formatArray48, new java.text.Format[] {});
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        java.lang.String str5 = org.apache.commons.lang3.text.WordUtils.wrap("Hi!hi!hi!nullhi!hi!hi!", 6, "", false, "hi!a");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Hi!hi!hi!nullhi!hi!hi!" + "'", str5, "Hi!hi!hi!nullhi!hi!hi!");
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = strTokenizer20.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((float) '$');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer7 = null;
        boolean boolean8 = strSubstitutor6.replaceIn(stringBuffer7);
        java.lang.String str10 = strSubstitutor6.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strSubstitutor6.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder12 = null;
        boolean boolean13 = strSubstitutor6.replaceIn(stringBuilder12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        java.lang.String str17 = strTokenizer15.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.reset("null");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer19.setTrimmerMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor27 = strSubstitutor6.setValueDelimiterMatcher(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder3.replaceFirst(strMatcher23, "hI!\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendln((float) 9);
        int int33 = strBuilder3.indexOf("i!");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "null" + "'", str17, "null");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strSubstitutor27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor2 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer3 = null;
        boolean boolean4 = strSubstitutor2.replaceIn(stringBuffer3);
        java.lang.String str6 = strSubstitutor2.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer7 = null;
        java.lang.String str8 = strSubstitutor2.replace(stringBuffer7);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor2.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor12 = strSubstitutor10.setValueDelimiter("hi!");
        boolean boolean13 = extendedMessageFormat1.equals((java.lang.Object) "hi!");
        java.text.Format[] formatArray14 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.text.Format[] formatArray15 = extendedMessageFormat1.getFormats();
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray18 = extendedMessageFormat1.parse("# \nhi!\r\n-1.0\r\n", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(strSubstitutor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertArrayEquals(formatArray14, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertArrayEquals(formatArray15, new java.text.Format[] {});
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        strBuilder13.getChars(0, 0, charArray22, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendln('$');
        boolean boolean33 = strBuilder31.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray41 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str42 = org.apache.commons.lang3.text.WordUtils.initials("", charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher50);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer54 = null;
        boolean boolean55 = strSubstitutor53.replaceIn(stringBuffer54);
        java.lang.String str57 = strSubstitutor53.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strSubstitutor53.getValueDelimiterMatcher();
        char[] charArray64 = new char[] { '$', '#', '#', '4', ' ' };
        int int66 = strMatcher58.isMatch(charArray64, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher50, strMatcher58);
        int int69 = strBuilder31.indexOf(strMatcher50, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        java.util.List<java.lang.String> strList72 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.insert(0, (long) (byte) 1);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertArrayEquals(charArray41, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertArrayEquals(charArray64, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        java.lang.String str12 = strSubstitutor0.replace(charArray6);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray6);
        java.lang.Class<?> wildcardClass14 = strTokenizer13.getClass();
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4#aa" + "'", str12, "4#aa");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        java.util.Locale locale2 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale4);
        java.util.Locale locale7 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale7);
        extendedMessageFormat8.applyPattern("");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat11 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat5, (java.text.Format) extendedMessageFormat8);
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray14 = extendedMessageFormat5.parse("hi!\r\ni!\r\nhi!a", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "de_DE");
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hI!$\r\n# \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer22 = null;
        boolean boolean23 = strSubstitutor21.replaceIn(stringBuffer22);
        java.lang.String str25 = strSubstitutor21.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor21.getValueDelimiterMatcher();
        char[] charArray32 = new char[] { '$', '#', '#', '4', ' ' };
        int int34 = strMatcher26.isMatch(charArray32, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendln(charArray9, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendSeparator("null", "Hi!");
        int int47 = strBuilder44.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.insert(0, 7);
        java.lang.StringBuffer stringBuffer51 = strBuilder44.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder1.append(stringBuffer51, (int) ' ', 35);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertArrayEquals(charArray32, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(stringBuffer51);
        org.junit.Assert.assertEquals(stringBuffer51.toString(), "7# \nnull");
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendSeparator('$');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        char[] charArray19 = new char[] { '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        int int22 = strMatcher16.isMatch(charArray19, (int) (byte) 1);
        int int24 = strBuilder13.indexOf(strMatcher16, 2);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertArrayEquals(charArray19, new char[] { '$' });
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 6 + "'", int24 == 6);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        java.lang.String str2 = org.apache.commons.lang3.text.WordUtils.wrap("- ", (int) '$');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "- " + "'", str2, "- ");
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\r\n36.0\r\n");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor0.setVariablePrefix('#');
        char char17 = strSubstitutor0.getEscapeChar();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertTrue("'" + char17 + "' != '" + '$' + "'", char17 == '$');
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendln(stringBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.ensureCapacity((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder41.insert(0, "");
        boolean boolean49 = strBuilder41.isNotEmpty();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight((int) 'a', (int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]");
        java.lang.Object[] objArray19 = new java.lang.Object[] { "StrTokenizer[not tokenized yet]" };
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.append("h", objArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.appendSeparator("-1.0# \n1.0\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder22.appendFixedWidthPadRight((int) 'i', (int) 'i', ' ');
        java.lang.StringBuilder stringBuilder27 = strBuilder22.toStringBuilder();
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[StrTokenizer[not tokenized yet]]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(stringBuilder27);
        org.junit.Assert.assertEquals(stringBuilder27.toString(), "hi!hi!Hi!hi!nullhi!hi!Hi!9h-1.0# \n1.0\r\n105                                                                                                      ");
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray53 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str54 = org.apache.commons.lang3.text.WordUtils.initials("", charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer47.reset(charArray53);
        strBuilder44.getChars(0, 0, charArray53, (int) (short) 1);
        char[] charArray61 = strBuilder36.getChars(charArray53);
        int int63 = strBuilder36.indexOf("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder36.setLength((int) (byte) 0);
        int int68 = strBuilder65.lastIndexOf('i', 26);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertArrayEquals(charArray61, new char[] { '-', '1', '.', '0', '#', ' ', '\n' });
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray52 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str53 = org.apache.commons.lang3.text.WordUtils.initials("", charArray52);
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, strMatcher55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer46.reset(charArray52);
        strBuilder43.getChars(0, 0, charArray52, (int) (short) 1);
        java.lang.String str61 = strBuilder43.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder43.appendNewLine();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean71 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendln("i!", (java.lang.Object[]) charSequenceArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder41.appendWithSeparators((java.lang.Object[]) charSequenceArray70, "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder74.deleteFirst(strMatcher75);
        int int78 = strBuilder76.lastIndexOf("S");
        boolean boolean79 = strBuilder76.isEmpty();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "i!" + "'", str61, "i!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert(5, (float) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.append(0L);
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang3.text.ExtendedMessageFormat("null");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat61.applyPattern("");
        extendedMessageFormat61.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor68 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer69 = null;
        boolean boolean70 = strSubstitutor68.replaceIn(stringBuffer69);
        java.lang.String str72 = strSubstitutor68.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer73 = null;
        java.lang.String str74 = strSubstitutor68.replace(stringBuffer73);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor76 = strSubstitutor68.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor78 = strSubstitutor76.setValueDelimiter("hi!");
        boolean boolean79 = extendedMessageFormat67.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat80 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat61, (java.text.Format) extendedMessageFormat67);
        java.util.Locale locale81 = extendedMessageFormat61.getLocale();
        extendedMessageFormat59.setLocale(locale81);
        extendedMessageFormat59.applyPattern("4#aa");
        java.text.Format[] formatArray85 = extendedMessageFormat59.getFormatsByArgumentIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder50.appendWithSeparators((java.lang.Object[]) formatArray85, "hi!$\r\n# \n");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strSubstitutor76);
        org.junit.Assert.assertNotNull(strSubstitutor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray85);
        org.junit.Assert.assertArrayEquals(formatArray85, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setVariablePrefix("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray24 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str25 = org.apache.commons.lang3.text.WordUtils.initials("", charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer18.reset(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher33);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer37 = null;
        boolean boolean38 = strSubstitutor36.replaceIn(stringBuffer37);
        java.lang.String str40 = strSubstitutor36.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strSubstitutor36.getValueDelimiterMatcher();
        char[] charArray47 = new char[] { '$', '#', '#', '4', ' ' };
        int int49 = strMatcher41.isMatch(charArray47, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder17.appendln(charArray24, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.delete((int) (short) 1, (int) (byte) 10);
        java.lang.String str63 = strSubstitutor14.replace((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendFixedWidthPadRight((int) (byte) 100, (-1), '#');
        int int70 = strBuilder62.lastIndexOf('4', 27);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder62.replaceFirst(strMatcher71, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.ensureCapacity(9);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertArrayEquals(charArray24, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertArrayEquals(charArray47, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#" + "'", str63, "#");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int3 = strBuilder1.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        strBuilder5.getChars(0, 0, charArray14, (int) (short) 1);
        char[] charArray22 = strBuilder1.getChars(charArray14);
        java.nio.CharBuffer charBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder1.append(charBuffer23);
        java.nio.CharBuffer charBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.append(charBuffer25, 9, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder24.insert(0, (double) 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrMatcher strMatcher8 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor9 = strSubstitutor0.setValueDelimiterMatcher(strMatcher8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer13.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray25 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str26 = org.apache.commons.lang3.text.WordUtils.initials("", charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer19.reset(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer16.reset(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray25);
        java.lang.String str33 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray25);
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.uncapitalize("", charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray25);
        java.lang.String str36 = strSubstitutor9.replace(charArray25);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMatcher8);
        org.junit.Assert.assertNotNull(strSubstitutor9);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertArrayEquals(charArray25, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str33, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4#aa" + "'", str36, "4#aa");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray6 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str7 = org.apache.commons.lang3.text.WordUtils.initials("", charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer0.reset(charArray6);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher15);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer19 = null;
        boolean boolean20 = strSubstitutor18.replaceIn(stringBuffer19);
        java.lang.String str22 = strSubstitutor18.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = strSubstitutor18.getValueDelimiterMatcher();
        char[] charArray29 = new char[] { '$', '#', '#', '4', ' ' };
        int int31 = strMatcher23.isMatch(charArray29, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, strMatcher15, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "Strtokenizer[not\r\ntokenized\r\nyet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer34.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor37 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer38 = null;
        boolean boolean39 = strSubstitutor37.replaceIn(stringBuffer38);
        java.lang.String str41 = strSubstitutor37.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer42 = null;
        java.lang.String str43 = strSubstitutor37.replace(stringBuffer42);
        java.lang.String str45 = strSubstitutor37.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = strSubstitutor37.setVariablePrefix("null");
        java.lang.String str49 = strSubstitutor37.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor51 = strSubstitutor37.setValueDelimiterMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer36.setDelimiterMatcher(strMatcher50);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertArrayEquals(charArray6, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "null" + "'", str45, "null");
        org.junit.Assert.assertNotNull(strSubstitutor47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strSubstitutor51);
        org.junit.Assert.assertNotNull(strTokenizer52);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray20 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str21 = org.apache.commons.lang3.text.WordUtils.initials("", charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer14.reset(charArray20);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher29);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer33 = null;
        boolean boolean34 = strSubstitutor32.replaceIn(stringBuffer33);
        java.lang.String str36 = strSubstitutor32.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = strSubstitutor32.getValueDelimiterMatcher();
        char[] charArray43 = new char[] { '$', '#', '#', '4', ' ' };
        int int45 = strMatcher37.isMatch(charArray43, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, strMatcher29, strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder13.appendln(charArray20, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder55.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean70 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder62.appendWithSeparators((java.lang.Object[]) charSequenceArray69, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray69);
        java.lang.StringBuffer stringBuffer74 = strBuilder73.toStringBuffer();
        boolean boolean75 = strSubstitutor0.replaceIn(stringBuffer74);
        strSubstitutor0.setEnableSubstitutionInVariables(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertArrayEquals(charArray20, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertArrayEquals(charArray43, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(stringBuffer74);
        org.junit.Assert.assertEquals(stringBuffer74.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        int int45 = strBuilder42.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray53 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str54 = org.apache.commons.lang3.text.WordUtils.initials("", charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer47.reset(charArray53);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher62);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer66 = null;
        boolean boolean67 = strSubstitutor65.replaceIn(stringBuffer66);
        java.lang.String str69 = strSubstitutor65.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher70 = strSubstitutor65.getValueDelimiterMatcher();
        char[] charArray76 = new char[] { '$', '#', '#', '4', ' ' };
        int int78 = strMatcher70.isMatch(charArray76, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, strMatcher62, strMatcher70);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder46.appendln(charArray53, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder82.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder88 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.appendln(stringBuilder88);
        java.util.stream.IntStream intStream90 = strBuilder89.codePoints();
        java.lang.StringBuilder stringBuilder91 = strBuilder89.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder42.append((java.lang.CharSequence) strBuilder89);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder92.appendln(false);
        int int95 = strBuilder92.length();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(strMatcher70);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertArrayEquals(charArray76, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(intStream90);
        org.junit.Assert.assertNotNull(stringBuilder91);
        org.junit.Assert.assertEquals(stringBuilder91.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 22 + "'", int95 == 22);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder36.append("HI!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder44.clear();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) (short) 0);
        java.lang.StringBuilder stringBuilder52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.append(stringBuilder52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.insert((-1), '#');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.capitalize("Hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Hi!" + "'", str1, "Hi!");
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceAll('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher31);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor34 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer35 = null;
        boolean boolean36 = strSubstitutor34.replaceIn(stringBuffer35);
        java.lang.String str38 = strSubstitutor34.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = strSubstitutor34.getValueDelimiterMatcher();
        char[] charArray45 = new char[] { '$', '#', '#', '4', ' ' };
        int int47 = strMatcher39.isMatch(charArray45, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher31, strMatcher39);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder15.appendln(charArray22, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray68 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str69 = org.apache.commons.lang3.text.WordUtils.initials("", charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.reset(charArray68);
        strBuilder59.getChars(0, 0, charArray68, (int) (short) 1);
        char[] charArray76 = strBuilder51.getChars(charArray68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder14.appendln(charArray76, (int) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid length: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertArrayEquals(charArray45, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertArrayEquals(charArray68, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertArrayEquals(charArray76, new char[] { '-', '1', '.', '0', '#', ' ', '\n' });
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer5.reset(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        java.lang.String str22 = org.apache.commons.lang3.text.WordUtils.capitalize("Strtokenizer[not tokenized yet]", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray31 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str32 = org.apache.commons.lang3.text.WordUtils.initials("", charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer25.reset(charArray31);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher40);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor43 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer44 = null;
        boolean boolean45 = strSubstitutor43.replaceIn(stringBuffer44);
        java.lang.String str47 = strSubstitutor43.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strSubstitutor43.getValueDelimiterMatcher();
        char[] charArray54 = new char[] { '$', '#', '#', '4', ' ' };
        int int56 = strMatcher48.isMatch(charArray54, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher40, strMatcher48);
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer24.setQuoteMatcher(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Strtokenizer[not tokenized yet]" + "'", str22, "Strtokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertArrayEquals(charArray31, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertArrayEquals(charArray54, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strTokenizer59);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        int int45 = strBuilder42.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln('4');
        java.lang.String str49 = strBuilder47.leftString((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.setCharAt(0, 'a');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strBuilder52);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int24 = strBuilder20.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray35 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str36 = org.apache.commons.lang3.text.WordUtils.initials("", charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.reset(charArray35);
        strBuilder26.getChars(0, 0, charArray35, (int) (short) 1);
        java.lang.String str44 = strBuilder26.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.appendNewLine();
        java.io.Reader reader46 = strBuilder26.asReader();
        int int47 = strBuilder20.readFrom((java.lang.Readable) reader46);
        int int48 = strBuilder19.readFrom((java.lang.Readable) reader46);
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder19.append(stringBuilder49, (int) ' ', (int) (short) 10);
        char[] charArray59 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str60 = org.apache.commons.lang3.text.WordUtils.initials("", charArray59);
        java.lang.String str61 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder19.appendln(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.insert(1, "h");
        boolean boolean67 = strBuilder62.startsWith("hI!$\r\n# \n");
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertArrayEquals(charArray35, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "i!" + "'", str44, "i!");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertArrayEquals(charArray59, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Hi!" + "'", str61, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert(5, (float) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer58.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray69 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str70 = org.apache.commons.lang3.text.WordUtils.initials("", charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer63.reset(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer60.reset(charArray69);
        char[] charArray81 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str82 = org.apache.commons.lang3.text.WordUtils.initials("", charArray81);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = strTokenizer60.setTrimmerMatcher(strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder55.replaceAll(strMatcher83, "a");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder55.replaceFirst('4', '#');
        java.io.Reader reader90 = strBuilder89.asReader();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertArrayEquals(charArray69, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertArrayEquals(charArray81, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strTokenizer84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(reader90);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("StrTokenizer[Hi!]");
        java.text.Format format3 = null;
        java.text.Format format4 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat5 = new org.apache.commons.lang3.text.CompositeFormat(format3, format4);
        java.text.Format format6 = compositeFormat5.getParser();
        java.text.Format format7 = compositeFormat5.getFormatter();
        java.text.Format format8 = compositeFormat5.getFormatter();
        java.text.Format format9 = compositeFormat5.getParser();
        java.text.Format format10 = compositeFormat5.getFormatter();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) ' ', (java.text.Format) compositeFormat5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format6);
        org.junit.Assert.assertNull(format7);
        org.junit.Assert.assertNull(format8);
        org.junit.Assert.assertNull(format9);
        org.junit.Assert.assertNull(format10);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln((double) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.append((float) 6);
        int int57 = strBuilder53.lastIndexOf("hi!hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("S", 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.reset("S");
        boolean boolean5 = strTokenizer4.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer4.add("-1.0# \n1.0\r\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer0.setIgnoredChar('#');
        boolean boolean3 = strTokenizer2.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer2.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray14 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str15 = org.apache.commons.lang3.text.WordUtils.initials("", charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher17);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer8.reset(charArray14);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher23);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor26 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer27 = null;
        boolean boolean28 = strSubstitutor26.replaceIn(stringBuffer27);
        java.lang.String str30 = strSubstitutor26.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strSubstitutor26.getValueDelimiterMatcher();
        char[] charArray37 = new char[] { '$', '#', '#', '4', ' ' };
        int int39 = strMatcher31.isMatch(charArray37, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher23, strMatcher31);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.appendln(charArray14, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.setNewLineText("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder49.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer57.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer57.setQuoteChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer60.setDelimiterChar('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer62.getQuoteMatcher();
        boolean boolean64 = strBuilder55.contains(strMatcher63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer6.setDelimiterMatcher(strMatcher63);
        org.junit.Assert.assertNotNull(strTokenizer0);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertArrayEquals(charArray14, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertArrayEquals(charArray37, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strTokenizer65);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        java.lang.String str19 = strBuilder1.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder1.appendNewLine();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean29 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.appendln("i!", (java.lang.Object[]) charSequenceArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.minimizeCapacity();
        java.nio.CharBuffer charBuffer32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder20.append(charBuffer32, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("", ' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder20.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer39, "Strtokenizer[not tokenized yet]");
        java.lang.Object[] objArray43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.append("hi!a", objArray43);
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray50);
        char[] charArray59 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str60 = org.apache.commons.lang3.text.WordUtils.initials("", charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor65 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = null;
        boolean boolean69 = strSubstitutor65.replaceIn(strBuilder66, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor71 = strSubstitutor65.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strSubstitutor71.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer64.setDelimiterMatcher(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer75.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = strTokenizer76.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer78.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray87 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str88 = org.apache.commons.lang3.text.WordUtils.initials("", charArray87);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = new org.apache.commons.lang3.text.StrTokenizer(charArray87, strMatcher90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer81.reset(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer78.reset(charArray87);
        org.apache.commons.lang3.text.StrMatcher strMatcher94 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray87);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer64.setDelimiterMatcher(strMatcher94);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher94);
        char[] charArray97 = strBuilder44.getChars(charArray50);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "i!" + "'", str19, "i!");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertArrayEquals(charArray59, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strSubstitutor71);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strTokenizer78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertArrayEquals(charArray87, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer93);
        org.junit.Assert.assertNotNull(strMatcher94);
        org.junit.Assert.assertNotNull(strTokenizer95);
        org.junit.Assert.assertNotNull(charArray97);
        org.junit.Assert.assertArrayEquals(charArray97, new char[] { 'h', 'i', '!', '\r', '\n', 'i', '!', '\r', '\n', 'h', 'i', '!', 'a' });
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.uncapitalize("# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "# \nhI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n" + "'", str1, "# \nhI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n");
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft(100, 35, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher22);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor25 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer26 = null;
        boolean boolean27 = strSubstitutor25.replaceIn(stringBuffer26);
        java.lang.String str29 = strSubstitutor25.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strSubstitutor25.getValueDelimiterMatcher();
        char[] charArray36 = new char[] { '$', '#', '#', '4', ' ' };
        int int38 = strMatcher30.isMatch(charArray36, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher22, strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder6.appendln(charArray13, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendSeparator("null", "Hi!");
        int int51 = strBuilder48.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.insert(0, 7);
        java.lang.StringBuffer stringBuffer55 = strBuilder48.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder1.appendln(stringBuffer55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.insert((int) (byte) 100, "lLUN0\n\r0.1\n #0.1-");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertArrayEquals(charArray36, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(stringBuffer55);
        org.junit.Assert.assertEquals(stringBuffer55.toString(), "7# \nnull");
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        java.lang.StringBuilder stringBuilder47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder42.appendln(stringBuilder47, (int) 'a', (int) (byte) -1);
        boolean boolean51 = strBuilder50.isNotEmpty();
        int int53 = strBuilder50.indexOf(' ');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher2);
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer3.getQuoteMatcher();
        java.lang.String str6 = strTokenizer3.nextToken();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        java.io.Reader reader12 = strBuilder11.asReader();
        java.util.stream.IntStream intStream13 = strBuilder11.chars();
        java.lang.String str15 = strBuilder11.substring(3);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendSeparator(' ', 27);
        int int20 = strBuilder18.lastIndexOf("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendWithSeparators((java.lang.Object[]) strArray22, "1 T");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(intStream13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!Hi!hi!nullhi!hi!Hi!" + "'", str15, "hi!Hi!hi!nullhi!hi!Hi!");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 22 + "'", int20 == 22);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertArrayEquals(strArray22, new java.lang.String[] {});
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        char[] charArray1 = null;
        java.lang.String str2 = org.apache.commons.lang3.text.WordUtils.initials("HI!", charArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "H" + "'", str2, "H");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        java.lang.CharSequence charSequence9 = null;
        java.lang.String str12 = strSubstitutor8.replace(charSequence9, (int) 'a', (int) 'a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor8.setVariablePrefix("i!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setValueDelimiter('a');
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor14.setValueDelimiter('a');
        java.lang.String str22 = strSubstitutor18.replace("1.0# \n1.0\r\n0Sty4#aaTRTOKENIZER[NOT\r\nTOKENIZED\r", (int) (short) 1, 13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + ".0# \n1.0\r\n0St" + "'", str22, ".0# \n1.0\r\n0St");
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor14 = strSubstitutor0.setValueDelimiterMatcher(strMatcher13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor14.setVariablePrefix("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray24 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str25 = org.apache.commons.lang3.text.WordUtils.initials("", charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = strTokenizer18.reset(charArray24);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher33);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer37 = null;
        boolean boolean38 = strSubstitutor36.replaceIn(stringBuffer37);
        java.lang.String str40 = strSubstitutor36.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strSubstitutor36.getValueDelimiterMatcher();
        char[] charArray47 = new char[] { '$', '#', '#', '4', ' ' };
        int int49 = strMatcher41.isMatch(charArray47, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher33, strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder17.appendln(charArray24, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.delete((int) (short) 1, (int) (byte) 10);
        java.lang.String str63 = strSubstitutor14.replace((java.lang.CharSequence) strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder62.appendFixedWidthPadRight((int) (byte) 100, (-1), '#');
        int int70 = strBuilder62.lastIndexOf('4', 27);
        int int73 = strBuilder62.indexOf("# \nhI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strSubstitutor14);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertArrayEquals(charArray24, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertArrayEquals(charArray47, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#" + "'", str63, "#");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.lang.String str5 = org.apache.commons.lang3.text.WordUtils.wrap("strTokenizer[not tokenized yet]", (int) 'i', "# \n", true, "STRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "strTokenizer[not tokenized yet]" + "'", str5, "strTokenizer[not tokenized yet]");
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("Sty", "Hi!");
        int int52 = strBuilder49.indexOf("# \n", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder54.append("StrTokenizer[not tokenized yet]", (java.lang.Object[]) strArray57);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertArrayEquals(strArray57, new java.lang.String[] {});
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.lang.String str1 = org.apache.commons.lang3.text.WordUtils.uncapitalize("# \n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "# \n" + "'", str1, "# \n");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("null", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.deleteFirst(' ');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = strBuilder51.substring((int) (byte) 100, 21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("null");
        int int24 = strBuilder20.indexOf(strMatcher22, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray35 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str36 = org.apache.commons.lang3.text.WordUtils.initials("", charArray35);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer29.reset(charArray35);
        strBuilder26.getChars(0, 0, charArray35, (int) (short) 1);
        java.lang.String str44 = strBuilder26.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder26.appendNewLine();
        java.io.Reader reader46 = strBuilder26.asReader();
        int int47 = strBuilder20.readFrom((java.lang.Readable) reader46);
        int int48 = strBuilder19.readFrom((java.lang.Readable) reader46);
        java.lang.StringBuilder stringBuilder49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder19.append(stringBuilder49, (int) ' ', (int) (short) 10);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.commaMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder19.replaceFirst(strMatcher53, "HI!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder19.appendFixedWidthPadLeft(21, 3, '$');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertArrayEquals(charArray35, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "i!" + "'", str44, "i!");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(reader46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        char[] charArray9 = null;
        java.lang.String str12 = strSubstitutor0.replace(charArray9, 100, (-1));
        java.lang.StringBuffer stringBuffer13 = null;
        boolean boolean14 = strSubstitutor0.replaceIn(stringBuffer13);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor16 = strSubstitutor0.setValueDelimiter('#');
        boolean boolean17 = strSubstitutor0.isPreserveEscapes();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray25 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str26 = org.apache.commons.lang3.text.WordUtils.initials("", charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer19.reset(charArray25);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher34);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor37 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer38 = null;
        boolean boolean39 = strSubstitutor37.replaceIn(stringBuffer38);
        java.lang.String str41 = strSubstitutor37.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strSubstitutor37.getValueDelimiterMatcher();
        char[] charArray48 = new char[] { '$', '#', '#', '4', ' ' };
        int int50 = strMatcher42.isMatch(charArray48, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, strMatcher34, strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder18.appendln(charArray25, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean75 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder67.appendWithSeparators((java.lang.Object[]) charSequenceArray74, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder64.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder78.append('$');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = strSubstitutor0.replaceIn(strBuilder80, (int) (byte) 100, 71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSubstitutor16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertArrayEquals(charArray25, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray13 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str14 = org.apache.commons.lang3.text.WordUtils.initials("", charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer7.reset(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer4.reset(charArray13);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher39);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer43 = null;
        boolean boolean44 = strSubstitutor42.replaceIn(stringBuffer43);
        java.lang.String str46 = strSubstitutor42.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strSubstitutor42.getValueDelimiterMatcher();
        char[] charArray53 = new char[] { '$', '#', '#', '4', ' ' };
        int int55 = strMatcher47.isMatch(charArray53, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendln(charArray30, 1, (int) (short) 1);
        java.lang.String str60 = org.apache.commons.lang3.text.WordUtils.uncapitalize("hi!", charArray30);
        java.lang.String str61 = org.apache.commons.lang3.text.WordUtils.uncapitalize("strTokenizer[not tokenized yet]", charArray30);
        int int63 = strMatcher20.isMatch(charArray30, (int) (byte) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher64 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher64);
        boolean boolean66 = strTokenizer65.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertArrayEquals(charArray13, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "strTokenizer[not tokenized yet]" + "'", str61, "strTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getFormatter();
        java.text.Format format5 = compositeFormat2.getFormatter();
        java.text.Format format6 = compositeFormat2.getParser();
        java.text.Format format7 = compositeFormat2.getFormatter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = compositeFormat2.reformat("HI!$\r\n# \n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
        org.junit.Assert.assertNull(format5);
        org.junit.Assert.assertNull(format6);
        org.junit.Assert.assertNull(format7);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray49 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str50 = org.apache.commons.lang3.text.WordUtils.initials("", charArray49);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, strMatcher52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer43.reset(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.appendAll((java.util.Iterator<java.lang.String>) strTokenizer54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder36.deleteFirst("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray68 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str69 = org.apache.commons.lang3.text.WordUtils.initials("", charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher71);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer62.reset(charArray68);
        strBuilder59.getChars(0, 0, charArray68, (int) (short) 1);
        java.lang.String str77 = strBuilder59.substring((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder59.appendNewLine();
        java.lang.CharSequence[] charSequenceArray86 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean87 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder78.appendln("i!", (java.lang.Object[]) charSequenceArray86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder78.minimizeCapacity();
        java.nio.CharBuffer charBuffer90 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder78.append(charBuffer90, (int) '$', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder57.appendln(strBuilder93);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.appendln((int) (short) 0);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertArrayEquals(charArray49, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertArrayEquals(charArray68, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "i!" + "'", str77, "i!");
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charSequenceArray86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher39 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher39);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor42 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer43 = null;
        boolean boolean44 = strSubstitutor42.replaceIn(stringBuffer43);
        java.lang.String str46 = strSubstitutor42.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strSubstitutor42.getValueDelimiterMatcher();
        char[] charArray53 = new char[] { '$', '#', '#', '4', ' ' };
        int int55 = strMatcher47.isMatch(charArray53, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher39, strMatcher47);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendln(charArray30, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder65.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean80 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray79);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.appendWithSeparators((java.lang.Object[]) charSequenceArray79, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder69.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray79);
        java.lang.StringBuffer stringBuffer84 = strBuilder83.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder19.append(stringBuffer84);
        java.nio.CharBuffer charBuffer86 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder85.append(charBuffer86, (-1), (int) '#');
        java.util.Formatter formatter90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter94 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) charBuffer86, formatter90, 0, 52, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(stringBuffer84);
        org.junit.Assert.assertEquals(stringBuffer84.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder4.appendNewLine();
        java.io.Writer writer6 = strBuilder5.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray17 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str18 = org.apache.commons.lang3.text.WordUtils.initials("", charArray17);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray17, strMatcher20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer11.reset(charArray17);
        strBuilder8.getChars(0, 0, charArray17, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder5.append(charArray17);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(writer6);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertArrayEquals(charArray17, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat4.applyPattern("");
        extendedMessageFormat4.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer12 = null;
        boolean boolean13 = strSubstitutor11.replaceIn(stringBuffer12);
        java.lang.String str15 = strSubstitutor11.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer16 = null;
        java.lang.String str17 = strSubstitutor11.replace(stringBuffer16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor11.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor19.setValueDelimiter("hi!");
        boolean boolean22 = extendedMessageFormat10.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat23 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat4, (java.text.Format) extendedMessageFormat10);
        java.util.Locale locale24 = extendedMessageFormat4.getLocale();
        extendedMessageFormat1.setLocale(locale24);
        java.text.Format[] formatArray26 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.lang.Object obj27 = extendedMessageFormat1.clone();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "de_DE");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertArrayEquals(formatArray26, new java.text.Format[] {});
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        java.lang.String str4 = org.apache.commons.lang3.text.WordUtils.wrap("# \nhi!\r\n-1", 0, "aa", true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "#aa\naahaaiaa!aa\raa\naa-aa1" + "'", str4, "#aa\naahaaiaa!aa\raa\naa-aa1");
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.appendSeparator("Sty", "Hi!");
        char[] charArray57 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str58 = org.apache.commons.lang3.text.WordUtils.initials("", charArray57);
        java.lang.String str59 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray57);
        java.lang.String str60 = org.apache.commons.lang3.text.WordUtils.capitalize("Hi!", charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.append(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder61.append("sTRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]", (int) (byte) 1, 27);
        java.io.Writer writer66 = strBuilder65.asWriter();
        int int67 = strBuilder65.size();
        java.lang.String str69 = strBuilder65.rightString(5);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertArrayEquals(charArray57, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Hi!" + "'", str59, "Hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Hi!" + "'", str60, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(writer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 47 + "'", int67 == 47);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "IZED\r" + "'", str69, "IZED\r");
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("HI!");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer4.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer4.setDelimiterChar('a');
        java.lang.String str9 = strTokenizer8.getContent();
        boolean boolean10 = strTokenizer8.hasPrevious();
        boolean boolean11 = strTokenizer8.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        char[] charArray1 = null;
        java.lang.String str2 = org.apache.commons.lang3.text.WordUtils.capitalizeFully("hi!hi!Hi!hI!i!nullhi!hi!Hi!", charArray1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Hi!hi!hi!hi!i!nullhi!hi!hi!" + "'", str2, "Hi!hi!hi!hi!i!nullhi!hi!hi!");
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        int int22 = strBuilder19.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.append("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray38 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str39 = org.apache.commons.lang3.text.WordUtils.initials("", charArray38);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer32.reset(charArray38);
        strBuilder29.getChars(0, 0, charArray38, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, '4');
        boolean boolean48 = strTokenizer47.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder27.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer47, "-1.0# \na");
        java.lang.String str52 = strBuilder50.leftString((int) '4');
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!$\r\ni!a#aa" + "'", str52, "hi!$\r\ni!a#aa");
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder2.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.reverse();
        int int6 = strBuilder2.length();
        java.io.Reader reader7 = strBuilder2.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder2.append(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((java.lang.Object) strBuilder2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln("#aa\naahaaiaa!aa\raa\naa-aa1", 25, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: length must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        int int45 = strBuilder42.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln('4');
        java.nio.CharBuffer charBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder42.append(charBuffer48, 1, 12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer54.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer55.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = strTokenizer57.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray66 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str67 = org.apache.commons.lang3.text.WordUtils.initials("", charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer60.reset(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer57.reset(charArray66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray86 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str87 = org.apache.commons.lang3.text.WordUtils.initials("", charArray86);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer91 = strTokenizer80.reset(charArray86);
        strBuilder77.getChars(0, 0, charArray86, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray86, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer96 = new org.apache.commons.lang3.text.StrTokenizer(charArray86);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer97 = strTokenizer75.reset(charArray86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder98 = strBuilder42.insert(47, (java.lang.Object) charArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 47");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertArrayEquals(charArray66, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertArrayEquals(charArray86, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer91);
        org.junit.Assert.assertNotNull(strTokenizer97);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        java.text.Format format0 = null;
        java.text.Format format1 = null;
        org.apache.commons.lang3.text.CompositeFormat compositeFormat2 = new org.apache.commons.lang3.text.CompositeFormat(format0, format1);
        java.text.Format format3 = compositeFormat2.getParser();
        java.text.Format format4 = compositeFormat2.getFormatter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = compositeFormat2.parseObject("i!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(format3);
        org.junit.Assert.assertNull(format4);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('4', ' ');
        java.util.Formatter formatter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter10 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) strBuilder4, formatter5, 0, (int) (short) 1, 27, 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        java.lang.String str8 = strSubstitutor0.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor0.setVariablePrefix("null");
        java.lang.String str12 = strSubstitutor0.replace("");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor13 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer14 = null;
        boolean boolean15 = strSubstitutor13.replaceIn(stringBuffer14);
        java.lang.String str17 = strSubstitutor13.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer18 = null;
        java.lang.String str19 = strSubstitutor13.replace(stringBuffer18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = strSubstitutor13.setValueDelimiter("null");
        char[] charArray22 = null;
        java.lang.String str25 = strSubstitutor13.replace(charArray22, 100, (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.initials("", charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer27.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher42);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer46 = null;
        boolean boolean47 = strSubstitutor45.replaceIn(stringBuffer46);
        java.lang.String str49 = strSubstitutor45.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strSubstitutor45.getValueDelimiterMatcher();
        char[] charArray56 = new char[] { '$', '#', '#', '4', ' ' };
        int int58 = strMatcher50.isMatch(charArray56, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher42, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder26.appendln(charArray33, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray82 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean83 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray82);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder75.appendWithSeparators((java.lang.Object[]) charSequenceArray82, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder72.appendln("Strtokenizer[not tokenized yet]", (java.lang.Object[]) charSequenceArray82);
        java.lang.StringBuffer stringBuffer87 = strBuilder86.toStringBuffer();
        boolean boolean88 = strSubstitutor13.replaceIn(stringBuffer87);
        boolean boolean89 = strSubstitutor0.replaceIn(stringBuffer87);
        char char90 = strSubstitutor0.getEscapeChar();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "null" + "'", str8, "null");
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strSubstitutor21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertArrayEquals(charArray33, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertArrayEquals(charArray56, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charSequenceArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(stringBuffer87);
        org.junit.Assert.assertEquals(stringBuffer87.toString(), "-1.0# \n1.0\r\n0Strtokenizer[not tokenized yet]\r\n");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + char90 + "' != '" + '$' + "'", char90 == '$');
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((float) '$');
        boolean boolean7 = strBuilder3.contains("-1.0# \na");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.delete((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer47.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendAll((java.util.Iterator<java.lang.String>) strTokenizer47);
        java.nio.CharBuffer charBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.append(charBuffer50, (int) 'a', (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendSeparator('$', 27);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.appendln((long) 13);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Sty");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor3 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer4 = null;
        boolean boolean5 = strSubstitutor3.replaceIn(stringBuffer4);
        java.lang.String str7 = strSubstitutor3.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer8 = null;
        java.lang.String str9 = strSubstitutor3.replace(stringBuffer8);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor11 = strSubstitutor3.setValueDelimiter("null");
        char[] charArray12 = null;
        java.lang.String str15 = strSubstitutor3.replace(charArray12, 100, (-1));
        char char16 = strSubstitutor3.getEscapeChar();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor17 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer18 = null;
        boolean boolean19 = strSubstitutor17.replaceIn(stringBuffer18);
        java.lang.String str21 = strSubstitutor17.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strSubstitutor17.getValueDelimiterMatcher();
        java.lang.StringBuilder stringBuilder23 = null;
        boolean boolean24 = strSubstitutor17.replaceIn(stringBuilder23);
        java.lang.StringBuffer stringBuffer25 = null;
        java.lang.String str26 = strSubstitutor17.replace(stringBuffer25);
        java.lang.StringBuffer stringBuffer27 = null;
        boolean boolean28 = strSubstitutor17.replaceIn(stringBuffer27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor30 = strSubstitutor17.setValueDelimiterMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor31 = strSubstitutor3.setVariableSuffixMatcher(strMatcher29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer2.setIgnoredMatcher(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSubstitutor11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + char16 + "' != '" + '$' + "'", char16 == '$');
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strSubstitutor30);
        org.junit.Assert.assertNotNull(strSubstitutor31);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray11 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str12 = org.apache.commons.lang3.text.WordUtils.initials("", charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer5.reset(charArray11);
        strBuilder2.getChars(0, 0, charArray11, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray11);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor22 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer23 = null;
        boolean boolean24 = strSubstitutor22.replaceIn(stringBuffer23);
        java.lang.String str26 = strSubstitutor22.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer27 = null;
        java.lang.String str28 = strSubstitutor22.replace(stringBuffer27);
        java.lang.String str30 = strSubstitutor22.replace("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor32 = strSubstitutor22.setVariablePrefix("null");
        java.lang.String str34 = strSubstitutor22.replace("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor36 = strSubstitutor22.setValueDelimiterMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor37 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer38 = null;
        boolean boolean39 = strSubstitutor37.replaceIn(stringBuffer38);
        java.lang.String str41 = strSubstitutor37.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer42 = null;
        java.lang.String str43 = strSubstitutor37.replace(stringBuffer42);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = strSubstitutor37.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor47 = strSubstitutor45.setValueDelimiter("hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = strSubstitutor47.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, strMatcher35, strMatcher48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'i');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 'i', '#');
        java.lang.String str55 = org.apache.commons.lang3.text.WordUtils.capitalize("llun0\n\r0.1\n #0.1-", charArray11);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertArrayEquals(charArray11, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "null" + "'", str30, "null");
        org.junit.Assert.assertNotNull(strSubstitutor32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strSubstitutor36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strSubstitutor45);
        org.junit.Assert.assertNotNull(strSubstitutor47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Llun0\n\r0.1\n #0.1-" + "'", str55, "Llun0\n\r0.1\n #0.1-");
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer2.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setIgnoreEmptyTokens(true);
        java.lang.String str6 = strTokenizer3.next();
        char[] charArray12 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str13 = org.apache.commons.lang3.text.WordUtils.initials("", charArray12);
        org.apache.commons.lang3.text.StrMatcher strMatcher15 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray12, strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer3.setTrimmerMatcher(strMatcher15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("hi!\r\n", strMatcher15);
        boolean boolean19 = strTokenizer18.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer18.getIgnoredMatcher();
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "null" + "'", str6, "null");
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertArrayEquals(charArray12, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMatcher15);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strMatcher20);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!\r\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNull();
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "Hi!", "null", "", "Hi!" };
        boolean boolean9 = org.apache.commons.lang3.text.WordUtils.containsAllWords((java.lang.CharSequence) "Hi!", charSequenceArray8);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder1.appendWithSeparators((java.lang.Object[]) charSequenceArray8, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray22 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str23 = org.apache.commons.lang3.text.WordUtils.initials("", charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer16.reset(charArray22);
        strBuilder13.getChars(0, 0, charArray22, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder13.appendln('$');
        boolean boolean33 = strBuilder31.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray41 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str42 = org.apache.commons.lang3.text.WordUtils.initials("", charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer35.reset(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher50);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor53 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer54 = null;
        boolean boolean55 = strSubstitutor53.replaceIn(stringBuffer54);
        java.lang.String str57 = strSubstitutor53.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strSubstitutor53.getValueDelimiterMatcher();
        char[] charArray64 = new char[] { '$', '#', '#', '4', ' ' };
        int int66 = strMatcher58.isMatch(charArray64, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray41, strMatcher50, strMatcher58);
        int int69 = strBuilder31.indexOf(strMatcher50, (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("Hi!");
        java.util.List<java.lang.String> strList72 = strTokenizer71.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder31.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder11.appendAll((java.lang.Iterable<java.lang.String>) strList72);
        java.nio.CharBuffer charBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder11.append(charBuffer75);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder11.insert(1, (double) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln("");
        char[] charArray90 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str91 = org.apache.commons.lang3.text.WordUtils.initials("", charArray90);
        java.lang.String str92 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder81.appendln(charArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder79.append(charArray90);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertArrayEquals(charArray22, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertArrayEquals(charArray41, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertArrayEquals(charArray64, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertArrayEquals(charArray90, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Hi!" + "'", str92, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = null;
        boolean boolean4 = strSubstitutor0.replaceIn(strBuilder1, (-1), 10);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor6 = strSubstitutor0.setValueDelimiter('#');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strSubstitutor6.getVariablePrefixMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray15 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str16 = org.apache.commons.lang3.text.WordUtils.initials("", charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer9.reset(charArray15);
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor27 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer28 = null;
        boolean boolean29 = strSubstitutor27.replaceIn(stringBuffer28);
        java.lang.String str31 = strSubstitutor27.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = strSubstitutor27.getValueDelimiterMatcher();
        char[] charArray38 = new char[] { '$', '#', '#', '4', ' ' };
        int int40 = strMatcher32.isMatch(charArray38, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, strMatcher24, strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder8.appendln(charArray15, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendSeparator("null", "Hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.delete((int) (short) 1, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray64 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str65 = org.apache.commons.lang3.text.WordUtils.initials("", charArray64);
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, strMatcher67);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer58.reset(charArray64);
        strBuilder55.getChars(0, 0, charArray64, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder55.appendln('$');
        int int76 = strBuilder73.indexOf('#', (int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder73.append("i!");
        strBuilder53.appendTo((java.lang.Appendable) strBuilder78);
        java.lang.String str81 = strBuilder78.rightString((int) ' ');
        boolean boolean82 = strSubstitutor6.replaceIn(strBuilder78);
        // The following exception was thrown during execution in test generation
        try {
            char char84 = strBuilder78.charAt((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSubstitutor6);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertArrayEquals(charArray15, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertArrayEquals(charArray64, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!$\r\ni!#" + "'", str81, "hi!$\r\ni!#");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        java.lang.StringBuilder stringBuilder45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder42.append(stringBuilder45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.appendln("-1.0# \na");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceAll("hi!hi!Hi!hi!nullhi!hi!Hi!# \nhi!\r\n", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.setCharAt(71, 'i');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 71");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        char[] charArray48 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str49 = org.apache.commons.lang3.text.WordUtils.initials("", charArray48);
        java.lang.String str50 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer52.setIgnoredChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder41.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer54, "hi!hi!Hi!hi!nullhi!hi!Hi!a\r\n");
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertArrayEquals(charArray48, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Hi!" + "'", str50, "Hi!");
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer0 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = strTokenizer0.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer0);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.appendSeparator("hi!");
        int int44 = strBuilder41.lastIndexOf(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('$', 'i');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln('$');
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.util.Locale locale1 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale6 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang3.text.ExtendedMessageFormat("Strtokenizer[not tokenized yet]", locale6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("#", locale8);
        java.util.Locale locale11 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang3.text.ExtendedMessageFormat("S", locale11);
        extendedMessageFormat12.applyPattern("");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat15 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat9, (java.text.Format) extendedMessageFormat12);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        int int19 = strBuilder17.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray30 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str31 = org.apache.commons.lang3.text.WordUtils.initials("", charArray30);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, strMatcher33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer24.reset(charArray30);
        strBuilder21.getChars(0, 0, charArray30, (int) (short) 1);
        char[] charArray38 = strBuilder17.getChars(charArray30);
        java.nio.CharBuffer charBuffer39 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder17.append(charBuffer39);
        boolean boolean41 = extendedMessageFormat9.equals((java.lang.Object) charBuffer39);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat42 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat2, (java.text.Format) extendedMessageFormat9);
        java.text.Format[] formatArray43 = extendedMessageFormat9.getFormats();
        java.lang.String str44 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray45 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray48 = extendedMessageFormat9.parse("#\r\n\n", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "de_DE");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "de_DE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertArrayEquals(charArray38, new char[] { 'h', 'i', '!', 'a' });
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertArrayEquals(formatArray43, new java.text.Format[] {});
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "#" + "'", str44, "#");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertArrayEquals(formatArray45, new java.text.Format[] {});
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln(1.0d);
        char[] charArray45 = strBuilder42.toCharArray();
        boolean boolean47 = strBuilder42.endsWith("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray59 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str60 = org.apache.commons.lang3.text.WordUtils.initials("", charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, strMatcher62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strTokenizer53.reset(charArray59);
        strBuilder50.getChars(0, 0, charArray59, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder42.insert((int) 'i', charArray59, 0, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 105");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertArrayEquals(charArray45, new char[] { '-', '1', '.', '0', '#', ' ', '\n', '1', '.', '0', '\r', '\n' });
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertArrayEquals(charArray59, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strTokenizer64);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        java.text.Format format0 = null;
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat3.applyPattern("");
        extendedMessageFormat3.applyPattern("hi!");
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer11 = null;
        boolean boolean12 = strSubstitutor10.replaceIn(stringBuffer11);
        java.lang.String str14 = strSubstitutor10.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer15 = null;
        java.lang.String str16 = strSubstitutor10.replace(stringBuffer15);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor18 = strSubstitutor10.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor20 = strSubstitutor18.setValueDelimiter("hi!");
        boolean boolean21 = extendedMessageFormat9.equals((java.lang.Object) "hi!");
        org.apache.commons.lang3.text.CompositeFormat compositeFormat22 = new org.apache.commons.lang3.text.CompositeFormat((java.text.Format) extendedMessageFormat3, (java.text.Format) extendedMessageFormat9);
        java.util.Locale locale23 = extendedMessageFormat3.getLocale();
        java.lang.String str24 = extendedMessageFormat3.toPattern();
        java.util.Locale locale25 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang3.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang3.text.ExtendedMessageFormat("hi!hi!Hi!hi!nullhi!hi!Hi!# \nhi!\r\n", locale25);
        java.util.Locale locale27 = null;
        extendedMessageFormat26.setLocale(locale27);
        org.apache.commons.lang3.text.CompositeFormat compositeFormat29 = new org.apache.commons.lang3.text.CompositeFormat(format0, (java.text.Format) extendedMessageFormat26);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strSubstitutor18);
        org.junit.Assert.assertNotNull(strSubstitutor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "de_DE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "de_DE");
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray7 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str8 = org.apache.commons.lang3.text.WordUtils.initials("", charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.reset(charArray7);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer20 = null;
        boolean boolean21 = strSubstitutor19.replaceIn(stringBuffer20);
        java.lang.String str23 = strSubstitutor19.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strSubstitutor19.getValueDelimiterMatcher();
        char[] charArray30 = new char[] { '$', '#', '#', '4', ' ' };
        int int32 = strMatcher24.isMatch(charArray30, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray7, strMatcher16, strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder0.appendln(charArray7, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendSeparator("null", "Hi!");
        int int45 = strBuilder42.lastIndexOf('#', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.deleteFirst("I!");
        java.lang.Iterable<java.lang.String> strIterable50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder42.appendWithSeparators(strIterable50, "");
        char[] charArray53 = strBuilder52.toCharArray();
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertArrayEquals(charArray7, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertArrayEquals(charArray30, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertArrayEquals(charArray53, new char[] { '#', ' ', '\n', 'n', 'u', 'l', 'l', '4', '\r', '\n' });
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = null;
        int int4 = strBuilder2.indexOf(strMatcher3);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer7.setIgnoredChar('#');
        boolean boolean10 = strTokenizer9.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst(strMatcher11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("null");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer16.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray27 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str28 = org.apache.commons.lang3.text.WordUtils.initials("", charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, strMatcher30);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer21.reset(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer18.reset(charArray27);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterChar(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        java.util.Formatter formatter38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray50 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str51 = org.apache.commons.lang3.text.WordUtils.initials("", charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer44.reset(charArray50);
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher59);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor62 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer63 = null;
        boolean boolean64 = strSubstitutor62.replaceIn(stringBuffer63);
        java.lang.String str66 = strSubstitutor62.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher67 = strSubstitutor62.getValueDelimiterMatcher();
        char[] charArray73 = new char[] { '$', '#', '#', '4', ' ' };
        int int75 = strMatcher67.isMatch(charArray73, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher59, strMatcher67);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder43.appendln(charArray50, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.appendln((double) (byte) -1);
        java.io.Reader reader85 = strBuilder84.asReader();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Formatter formatter86 = org.apache.commons.lang3.text.FormattableUtils.append((java.lang.CharSequence) strBuilder37, formatter38, (int) '4', (int) (byte) 1, (int) '4', '4', (java.lang.CharSequence) strBuilder84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertArrayEquals(charArray27, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertArrayEquals(charArray50, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strMatcher67);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertArrayEquals(charArray73, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(reader85);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder1.appendln('$');
        boolean boolean21 = strBuilder19.contains("Strtokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray29 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str30 = org.apache.commons.lang3.text.WordUtils.initials("", charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer23.reset(charArray29);
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher38);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer42 = null;
        boolean boolean43 = strSubstitutor41.replaceIn(stringBuffer42);
        java.lang.String str45 = strSubstitutor41.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = strSubstitutor41.getValueDelimiterMatcher();
        char[] charArray52 = new char[] { '$', '#', '#', '4', ' ' };
        int int54 = strMatcher46.isMatch(charArray52, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, strMatcher38, strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder22.appendln(charArray29, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder19.append((java.lang.Object) strBuilder58);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendln((double) 32);
        int int67 = strBuilder64.lastIndexOf('4', 25);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertArrayEquals(charArray29, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertArrayEquals(charArray52, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer1 = null;
        boolean boolean2 = strSubstitutor0.replaceIn(stringBuffer1);
        java.lang.String str4 = strSubstitutor0.replace((java.lang.CharSequence) "hi!");
        java.lang.StringBuffer stringBuffer5 = null;
        java.lang.String str6 = strSubstitutor0.replace(stringBuffer5);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor8 = strSubstitutor0.setValueDelimiter("null");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor10 = strSubstitutor8.setValueDelimiter("hi!");
        char[] charArray16 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str17 = org.apache.commons.lang3.text.WordUtils.initials("", charArray16);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray16);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor19 = strSubstitutor10.setValueDelimiterMatcher(strMatcher18);
        java.lang.Object obj20 = null;
        java.lang.String str21 = strSubstitutor19.replace(obj20);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray33 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str34 = org.apache.commons.lang3.text.WordUtils.initials("", charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer27.reset(charArray33);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher42);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor45 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer46 = null;
        boolean boolean47 = strSubstitutor45.replaceIn(stringBuffer46);
        java.lang.String str49 = strSubstitutor45.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = strSubstitutor45.getValueDelimiterMatcher();
        char[] charArray56 = new char[] { '$', '#', '#', '4', ' ' };
        int int58 = strMatcher50.isMatch(charArray56, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher42, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder26.appendln(charArray33, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.insert(0, (float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.appendln(1.0d);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder68.append((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder68.appendSeparator("Sty", "Hi!");
        char[] charArray83 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str84 = org.apache.commons.lang3.text.WordUtils.initials("", charArray83);
        java.lang.String str85 = org.apache.commons.lang3.text.WordUtils.capitalize("hi!", charArray83);
        java.lang.String str86 = org.apache.commons.lang3.text.WordUtils.capitalize("Hi!", charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder75.append(charArray83);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder87.append("sTRTOKENIZER[NOT\r\nTOKENIZED\r\nYET]", (int) (byte) 1, 27);
        boolean boolean92 = strBuilder23.equalsIgnoreCase(strBuilder91);
        boolean boolean95 = strSubstitutor19.replaceIn(strBuilder91, (int) '#', (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSubstitutor8);
        org.junit.Assert.assertNotNull(strSubstitutor10);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertArrayEquals(charArray16, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strSubstitutor19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertArrayEquals(charArray33, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertArrayEquals(charArray56, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertArrayEquals(charArray83, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Hi!" + "'", str85, "Hi!");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Hi!" + "'", str86, "Hi!");
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("Sty");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.reverse();
        java.lang.String str3 = strBuilder2.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.appendSeparator("# \nHI!HI!hI!HI!NULLHI!HI!hI!97\r\n-1\r\n");
        int int7 = strBuilder2.indexOf("null");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray10 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str11 = org.apache.commons.lang3.text.WordUtils.initials("", charArray10);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, strMatcher13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer4.reset(charArray10);
        strBuilder1.getChars(0, 0, charArray10, (int) (short) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray10, '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer19.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.setDelimiterString("null");
        java.lang.String str23 = strTokenizer22.next();
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertArrayEquals(charArray10, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4#aa" + "'", str23, "4#aa");
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("i!");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer();
        char[] charArray9 = new char[] { '4', '#', 'a', 'a' };
        java.lang.String str10 = org.apache.commons.lang3.text.WordUtils.initials("", charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.charMatcher('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher12);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer3.reset(charArray9);
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("Hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("Hi!", strMatcher18);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", strMatcher18);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor21 = new org.apache.commons.lang3.text.StrSubstitutor();
        java.lang.StringBuffer stringBuffer22 = null;
        boolean boolean23 = strSubstitutor21.replaceIn(stringBuffer22);
        java.lang.String str25 = strSubstitutor21.replace((java.lang.CharSequence) "hi!");
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strSubstitutor21.getValueDelimiterMatcher();
        char[] charArray32 = new char[] { '$', '#', '#', '4', ' ' };
        int int34 = strMatcher26.isMatch(charArray32, (int) 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray9, strMatcher18, strMatcher26);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder2.appendln(charArray9, 1, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.setCharAt((int) (byte) 1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.appendSeparator("hi!");
        java.lang.StringBuilder stringBuilder44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendln(stringBuilder44);
        java.util.stream.IntStream intStream46 = strBuilder45.codePoints();
        java.lang.StringBuilder stringBuilder47 = strBuilder45.toStringBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder1.appendln(stringBuilder47, 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder1.setNewLineText("Strtokenizer[not tokenized yet]");
        boolean boolean54 = strBuilder52.endsWith("# \nhi!hi!Hi!hi!nullhi!hi!Hi!97\r\n-1\r\n");
        int int55 = strBuilder52.capacity();
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertArrayEquals(charArray9, new char[] { '4', '#', 'a', 'a' });
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertArrayEquals(charArray32, new char[] { '$', '#', '#', '4', ' ' });
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNotNull(stringBuilder47);
        org.junit.Assert.assertEquals(stringBuilder47.toString(), "# \nhi!\r\n");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 34 + "'", int55 == 34);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("Strtokenizer[not tokenized yet]", '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = strTokenizer2.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }
}

