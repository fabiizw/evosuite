/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 26 13:06:51 GMT 2025
 */

package org.apache.commons.lang3.text;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.PatternSyntaxException;
import org.apache.commons.lang3.text.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.capitalizeFully("3+*-qI7|", charArray0);
      assertEquals("3+*-qi7|", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.wrap("3+*-qI7|", 0, "", true);
      assertEquals("3+*-qI7|", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0, "", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 1216);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.wrap("", 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[6];
      String string0 = WordUtils.capitalizeFully((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = WordUtils.wrap("a*GE", 0, "a*GE", false, "a*GE");
      assertEquals("a*a*GEE", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = WordUtils.wrap("Array element ", 0, "", true, "");
      assertEquals("Arrayelement", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.wrap("Tp", 1, "Tp", true, "Tp");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = WordUtils.wrap("", 456, (String) null, false, "70e");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 25, (String) null, true, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[2] = 'Z';
      String string0 = WordUtils.uncapitalize("[e5hZmvf", charArray0);
      assertEquals("[e5hZmvf", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.initials(" ", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[9];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'h';
      String string0 = WordUtils.capitalize("K{JnypYhmU}-(", charArray0);
      assertEquals("K{JnypYhMU}-(", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "b1@LUUb";
      char[] charArray0 = null;
      String string1 = WordUtils.capitalize(string0, charArray0);
      assertEquals("B1@LUUb", string1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
    String string0 = WordUtils.wrap("Array and element cannot both be null", (-8));
    assertEquals("Array\r\nand\r\nelement\r\ncannot\r\nboth\r\nbe\r\nnull", string0);
    assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.wrap("org.apache.commons.lang3.text.WordUtils", 0, "Q7lgwdHN&&hRb]", false, "org.apache.commons.lang3.text.WordUtils");
      assertEquals("org.apache.commons.lang3.text.WordUtils", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.wrap("b1@LUUb", 85, "b9b", true, "\b.*");
      char[] charArray0 = null;
      String string1 = WordUtils.capitalizeFully(string0, charArray0);
      assertEquals("B1@luub", string1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("Q7lgwdHN&&hRb]", charArray0);
      assertEquals("Q7lgwdHN&&hRb]", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = WordUtils.swapCase("org.apache.commons.lang3.text.WordUtils");
      assertEquals("ORG.APACHE.COMMONS.LANG3.TEXT.wORDuTILS", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("bGEb", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[3];
      String string0 = WordUtils.initials(" vs ", charArray0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "b1@LUUb";
      String string1 = WordUtils.uncapitalize("\b.*", (char[]) null);
      assertEquals("\b.*", string1);
      
      CharSequence[] charSequenceArray0 = new CharSequence[5];
      charSequenceArray0[0] = (CharSequence) string1;
      boolean boolean0 = WordUtils.containsAllWords(string0, charSequenceArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[1];
      charSequenceArray0[0] = (CharSequence) "Array and element cannot both be null";
      boolean boolean0 = WordUtils.containsAllWords("Array and element cannot both be null", charSequenceArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[0];
      boolean boolean0 = WordUtils.containsAllWords("@{ES}dh", charSequenceArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "b1@LUUb";
      CharSequence[] charSequenceArray0 = new CharSequence[5];
      boolean boolean0 = WordUtils.containsAllWords(string0, charSequenceArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      boolean boolean0 = WordUtils.containsAllWords("", charSequenceArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully(".*\b", charArray0);
      assertEquals(".*\b", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("e@17 )tEy5CLK]A");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize(" in an array of ", charArray0);
      assertEquals(" in an array of ", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.initials("', has a length less than 2");
      assertEquals("'hallt2", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = WordUtils.wrap("Arguments cannot both be null", 11);
    assertEquals("Arguments\r\ncannot both\r\nbe null", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("(!iv# *(J");
      assertEquals("(!iv# *(J", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 0, "", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = WordUtils.capitalize("{v'B5kyB%C");
      assertEquals("{v'B5kyB%C", string0);
  }
}
